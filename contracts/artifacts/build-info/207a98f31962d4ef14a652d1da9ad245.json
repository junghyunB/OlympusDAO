{
	"id": "207a98f31962d4ef14a652d1da9ad245",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sOHM.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2021-06-12\n*/\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"./libraries/SafeMath.sol\";\nimport \"./libraries/Address.sol\";\nimport \"./libraries/Counters.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./types/ERC20Permit.sol\";\n\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\n\n\n\n\n\ninterface IOwnable {\n  function manager() external view returns (address);\n\n  function renounceManagement() external;\n  \n  function pushManagement( address newOwner_ ) external;\n  \n  function pullManagement() external;\n}\n\ncontract Ownable is IOwnable {\n\n    address internal _owner;\n    address internal _newOwner;\n\n    event OwnershipPushed(address indexed previousOwner, address indexed newOwner);\n    event OwnershipPulled(address indexed previousOwner, address indexed newOwner);\n\n    constructor () {\n        _owner = msg.sender;\n        emit OwnershipPushed( address(0), _owner );\n    }\n\n    function manager() public view override returns (address) {\n        return _owner;\n    }\n\n    modifier onlyManager() {\n        require( _owner == msg.sender, \"Ownable: caller is not the owner\" );\n        _;\n    }\n\n    function renounceManagement() public virtual override onlyManager() {\n        emit OwnershipPushed( _owner, address(0) );\n        _owner = address(0);\n    }\n\n    function pushManagement( address newOwner_ ) public virtual override onlyManager() {\n        require( newOwner_ != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipPushed( _owner, newOwner_ );\n        _newOwner = newOwner_;\n    }\n    \n    function pullManagement() public virtual override {\n        require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\");\n        emit OwnershipPulled( _owner, _newOwner );\n        _owner = _newOwner;\n    }\n}\n\ncontract sOlympus is ERC20Permit, Ownable {\n\n    using SafeMath for uint256;\n\n    modifier onlyStakingContract() {\n        require( msg.sender == stakingContract );\n        _;\n    }\n\n    address public stakingContract;\n    address public initializer;\n\n    event LogSupply(uint256 indexed epoch, uint256 timestamp, uint256 totalSupply );\n    event LogRebase( uint256 indexed epoch, uint256 rebase, uint256 index );\n    event LogStakingContractUpdated( address stakingContract );\n\n    struct Rebase {\n        uint epoch;\n        uint rebase; // 18 decimals\n        uint totalStakedBefore;\n        uint totalStakedAfter;\n        uint amountRebased;\n        uint index;\n        uint blockNumberOccured;\n    }\n    Rebase[] public rebases;\n\n    uint public INDEX;\n\n    uint256 private constant MAX_UINT256 = ~uint256(0);\n    uint256 private constant INITIAL_FRAGMENTS_SUPPLY = 5000000 * 10**9;\n\n    // TOTAL_GONS is a multiple of INITIAL_FRAGMENTS_SUPPLY so that _gonsPerFragment is an integer.\n    // Use the highest value that fits in a uint256 for max granularity.\n    uint256 private constant TOTAL_GONS = MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY);\n\n    // MAX_SUPPLY = maximum integer < (sqrt(4*TOTAL_GONS + 1) - 1) / 2\n    uint256 private constant MAX_SUPPLY = ~uint128(0);  // (2^128) - 1\n\n    uint256 private _gonsPerFragment;\n    mapping(address => uint256) private _gonBalances;\n\n    mapping ( address => mapping ( address => uint256 ) ) private _allowedValue;\n\n    constructor() ERC20(\"Staked Olympus\", \"sOHM\", 9) ERC20Permit() {\n        initializer = msg.sender;\n        _totalSupply = INITIAL_FRAGMENTS_SUPPLY;\n        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);\n    }\n\n    function initialize( address stakingContract_ ) external returns ( bool ) {\n        require( msg.sender == initializer );\n        require( stakingContract_ != address(0) );\n        stakingContract = stakingContract_;\n        _gonBalances[ stakingContract ] = TOTAL_GONS;\n\n        emit Transfer( address(0x0), stakingContract, _totalSupply );\n        emit LogStakingContractUpdated( stakingContract_ );\n        \n        initializer = address(0);\n        return true;\n    }\n\n    function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {\n        require( INDEX == 0 );\n        INDEX = gonsForBalance( _INDEX );\n        return true;\n    }\n\n    /**\n        @notice increases sOHM supply to increase staking balances relative to profit_\n        @param profit_ uint256\n        @return uint256\n     */\n    function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {\n        uint256 rebaseAmount;\n        uint256 circulatingSupply_ = circulatingSupply();\n\n        if ( profit_ == 0 ) {\n            emit LogSupply( epoch_, block.timestamp, _totalSupply );\n            emit LogRebase( epoch_, 0, index() );\n            return _totalSupply;\n        } else if ( circulatingSupply_ > 0 ){\n            rebaseAmount = profit_.mul( _totalSupply ).div( circulatingSupply_ );\n        } else {\n            rebaseAmount = profit_;\n        }\n\n        _totalSupply = _totalSupply.add( rebaseAmount );\n\n        if ( _totalSupply > MAX_SUPPLY ) {\n            _totalSupply = MAX_SUPPLY;\n        }\n\n        _gonsPerFragment = TOTAL_GONS.div( _totalSupply );\n\n        _storeRebase( circulatingSupply_, profit_, epoch_ );\n\n        return _totalSupply;\n    }\n\n    /**\n        @notice emits event with data about rebase\n        @param previousCirculating_ uint\n        @param profit_ uint\n        @param epoch_ uint\n        @return bool\n     */\n    function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {\n        uint rebasePercent = profit_.mul( 1e18 ).div( previousCirculating_ );\n\n        rebases.push( Rebase ( {\n            epoch: epoch_,\n            rebase: rebasePercent, // 18 decimals\n            totalStakedBefore: previousCirculating_,\n            totalStakedAfter: circulatingSupply(),\n            amountRebased: profit_,\n            index: index(),\n            blockNumberOccured: block.number\n        }));\n        \n        emit LogSupply( epoch_, block.timestamp, _totalSupply );\n        emit LogRebase( epoch_, rebasePercent, index() );\n\n        return true;\n    }\n\n    function balanceOf( address who ) public view override returns ( uint256 ) {\n        return _gonBalances[ who ].div( _gonsPerFragment );\n    }\n\n    function gonsForBalance( uint amount ) public view returns ( uint ) {\n        return amount.mul( _gonsPerFragment );\n    }\n\n    function balanceForGons( uint gons ) public view returns ( uint ) {\n        return gons.div( _gonsPerFragment );\n    }\n\n    // Staking contract holds excess sOHM\n    function circulatingSupply() public view returns ( uint ) {\n        return _totalSupply.sub( balanceOf( stakingContract ) );\n    }\n\n    function index() public view returns ( uint ) {\n        return balanceForGons( INDEX );\n    }\n\n    function transfer( address to, uint256 value ) public override returns (bool) {\n        uint256 gonValue = value.mul( _gonsPerFragment );\n        _gonBalances[ msg.sender ] = _gonBalances[ msg.sender ].sub( gonValue );\n        _gonBalances[ to ] = _gonBalances[ to ].add( gonValue );\n        emit Transfer( msg.sender, to, value );\n        return true;\n    }\n\n    function allowance( address owner_, address spender ) public view override returns ( uint256 ) {\n        return _allowedValue[ owner_ ][ spender ];\n    }\n\n    function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {\n       _allowedValue[ from ][ msg.sender ] = _allowedValue[ from ][ msg.sender ].sub( value );\n       emit Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] );\n\n        uint256 gonValue = gonsForBalance( value );\n        _gonBalances[ from ] = _gonBalances[from].sub( gonValue );\n        _gonBalances[ to ] = _gonBalances[to].add( gonValue );\n        emit Transfer( from, to, value );\n\n        return true;\n    }\n\n    function approve( address spender, uint256 value ) public override returns (bool) {\n         _allowedValue[ msg.sender ][ spender ] = value;\n         emit Approval( msg.sender, spender, value );\n         return true;\n    }\n\n    // What gets called in a permit\n    function _approve( address owner, address spender, uint256 value ) internal override virtual {\n        _allowedValue[owner][spender] = value;\n        emit Approval( owner, spender, value );\n    }\n\n    function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {\n        _allowedValue[ msg.sender ][ spender ] = _allowedValue[ msg.sender ][ spender ].add( addedValue );\n        emit Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] );\n        return true;\n    }\n\n    function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {\n        uint256 oldValue = _allowedValue[ msg.sender ][ spender ];\n        if (subtractedValue >= oldValue) {\n            _allowedValue[ msg.sender ][ spender ] = 0;\n        } else {\n            _allowedValue[ msg.sender ][ spender ] = oldValue.sub( subtractedValue );\n        }\n        emit Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] );\n        return true;\n    }\n}"
			},
			"contracts/types/ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"./ERC20.sol\";\nimport \"../interfaces/IERC2612Permit.sol\";\nimport \"../libraries/Counters.sol\";\n\nabstract contract ERC20Permit is ERC20, IERC2612Permit {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    bytes32 public DOMAIN_SEPARATOR;\n\n    constructor() {\n\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        DOMAIN_SEPARATOR = keccak256(abi.encode(\n            keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n            keccak256(bytes(name())),\n            keccak256(bytes(\"1\")), // Version\n            chainID,\n            address(this)\n        ));\n    }\n\n    /**\n     * @dev See {IERC2612Permit-permit}.\n     *\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"Permit: expired deadline\");\n\n        bytes32 hashStruct =\n            keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline));\n\n        bytes32 _hash = keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct));\n\n        address signer = ecrecover(_hash, v, r, s);\n        require(signer != address(0) && signer == owner, \"ZeroSwapPermit: Invalid signature\");\n\n        _nonces[owner].increment();\n        _approve(owner, spender, amount);\n    }\n\n    /**\n     * @dev See {IERC2612Permit-nonces}.\n     */\n    function nonces(address owner) public view override returns (uint256) {\n        return _nonces[owner].current();\n    }\n}"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\n// File: interfaces/IERC20.sol\n\n\npragma solidity ^0.7.5;\n\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"contracts/libraries/Counters.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"./SafeMath.sol\";\n\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}"
			},
			"contracts/libraries/Address.sol": {
				"content": "// File: libraries/Address.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\n\n// TODO(zx): replace with OZ implementation.\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    // function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n    //     require(address(this).balance >= value, \"Address: insufficient balance for call\");\n    //     return _functionCallWithValue(target, data, value, errorMessage);\n    // }\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n  /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n    function addressToString(address _address) internal pure returns(string memory) {\n        bytes32 _bytes = bytes32(uint256(_address));\n        bytes memory HEX = \"0123456789abcdef\";\n        bytes memory _addr = new bytes(42);\n\n        _addr[0] = '0';\n        _addr[1] = 'x';\n\n        for(uint256 i = 0; i < 20; i++) {\n            _addr[2+i*2] = HEX[uint8(_bytes[i + 12] >> 4)];\n            _addr[3+i*2] = HEX[uint8(_bytes[i + 12] & 0x0f)];\n        }\n\n        return string(_addr);\n\n    }\n}"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// File: libraries/SafeMath.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\n\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\nlibrary SafeMath {\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    // Only used in the  BondingCalculator.sol\n    function sqrrt(uint256 a) internal pure returns (uint c) {\n        if (a > 3) {\n            c = a;\n            uint b = add( div( a, 2), 1 );\n            while (b < c) {\n                c = b;\n                b = div( add( div( a, b ), b), 2 );\n            }\n        } else if (a != 0) {\n            c = 1;\n        }\n    }   \n\n    function percentageAmount( uint256 total_, uint8 percentage_ ) internal pure returns ( uint256 percentAmount_ ) {\n        return div( mul( total_, percentage_ ), 1000 );\n    }\n\n    /*\n     * Expects percentage to be trailed by 00,\n    */\n    function substractPercentage( uint256 total_, uint8 percentageToSub_ ) internal pure returns ( uint256 result_ ) {\n        return sub( total_, div( mul( total_, percentageToSub_ ), 1000 ) );\n    }\n\n    function percentageOfTotal( uint256 part_, uint256 total_ ) internal pure returns ( uint256 percent_ ) {\n        return div( mul(part_, 100) , total_ );\n    }\n\n    /**\n     * Taken from Hypersonic https://github.com/M2629/HyperSonic/blob/main/Math.sol\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n\n    function quadraticPricing( uint256 payment_, uint256 multiplier_ ) internal pure returns (uint256) {\n        return sqrrt( mul( multiplier_, payment_ ) );\n    }\n\n  function bondingCurve( uint256 supply_, uint256 multiplier_ ) internal pure returns (uint256) {\n      return mul( multiplier_, supply_ );\n  }\n}\n\n"
			},
			"contracts/interfaces/IERC2612Permit.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\n\ninterface IERC2612Permit {\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current ERC2612 nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n}"
			},
			"contracts/types/ERC20.sol": {
				"content": "// File: types/ERC20.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"../interfaces/IERC20.sol\";\nimport \"../libraries/SafeMath.sol\";\n\n\n\nabstract contract ERC20 is IERC20 {\n\n  using SafeMath for uint256;\n\n  // TODO comment actual hash value.\n  bytes32 constant private ERC20TOKEN_ERC1820_INTERFACE_ID = keccak256( \"ERC20Token\" );\n    \n  // Present in ERC777\n  mapping (address => uint256) internal _balances;\n\n  // Present in ERC777\n  mapping (address => mapping (address => uint256)) internal _allowances;\n\n  // Present in ERC777\n  uint256 internal _totalSupply;\n\n  // Present in ERC777\n  string internal _name;\n    \n  // Present in ERC777\n  string internal _symbol;\n    \n  // Present in ERC777\n  uint8 internal _decimals;\n\n  /**\n   * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n   * a default value of 18.\n   *\n   * To select a different value for {decimals}, use {_setupDecimals}.\n   *\n   * All three of these values are immutable: they can only be set once during\n   * construction.\n   */\n  constructor (string memory name_, string memory symbol_, uint8 decimals_) {\n    _name = name_;\n    _symbol = symbol_;\n    _decimals = decimals_;\n  }\n\n  /**\n   * @dev Returns the name of the token.\n   */\n  // Present in ERC777\n  function name() public view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev Returns the symbol of the token, usually a shorter version of the\n   * name.\n   */\n  // Present in ERC777\n  function symbol() public view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n   * @dev Returns the number of decimals used to get its user representation.\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\n   * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n   *\n   * Tokens usually opt for a value of 18, imitating the relationship between\n   * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n   * called.\n   *\n   * NOTE: This information is only used for _display_ purposes: it in\n   * no way affects any of the arithmetic of the contract, including\n   * {IERC20-balanceOf} and {IERC20-transfer}.\n   */\n  // Present in ERC777\n  function decimals() public view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev See {IERC20-totalSupply}.\n   */\n  // Present in ERC777\n  function totalSupply() public view override returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {IERC20-balanceOf}.\n   */\n  // Present in ERC777\n  function balanceOf(address account) public view virtual override returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {IERC20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  // Overrideen in ERC777\n  // Confirm that this behavior changes \n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n    _transfer(msg.sender, recipient, amount);\n    return true;\n  }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    // Present in ERC777\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    // Present in ERC777\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    // Present in ERC777\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n    require(sender != address(0), \"ERC20: transfer from the zero address\");\n    require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n    _beforeTokenTransfer(sender, recipient, amount);\n\n    _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    // Present in ERC777\n    function _mint(address account_, uint256 ammount_) internal virtual {\n        require(account_ != address(0), \"ERC20: mint to the zero address\");\n        _beforeTokenTransfer(address( this ), account_, ammount_);\n        _totalSupply = _totalSupply.add(ammount_);\n        _balances[account_] = _balances[account_].add(ammount_);\n        emit Transfer(address( this ), account_, ammount_);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    // Present in ERC777\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    // Present in ERC777\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    // Considering deprication to reduce size of bytecode as changing _decimals to internal acheived the same functionality.\n    // function _setupDecimals(uint8 decimals_) internal {\n    //     _decimals = decimals_;\n    // }\n\n  /**\n   * @dev Hook that is called before any transfer of tokens. This includes\n   * minting and burning.\n   *\n   * Calling conditions:\n   *\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n   * will be to transferred to `to`.\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n   * - `from` and `to` are never both zero.\n   *\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n   */\n  // Present in ERC777\n  function _beforeTokenTransfer( address from_, address to_, uint256 amount_ ) internal virtual { }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC2612Permit.sol": {
				"IERC2612Permit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC2612Permit.sol\":\"IERC2612Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC2612Permit.sol\":{\"keccak256\":\"0x2b28bfc4e0621eb60b914917dc916cc08ba97eee0a3b06d98fe56ff9ce2c0d59\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b5ddc8c3db72e2cd69a8defcc016910454578b7f46899a7ce0bdec603e58640\",\"dweb:/ipfs/QmYNhiaGjMdGXhooPCTxW3AYNWFii9WSkUcR4KkPqvRM3S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Address.sol\":149:9619  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Address.sol\":149:9619  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x5FE0C6F99DEA5E 0xAA CHAINID PUSH13 0xCD5A2E5C35138FB5FE40169983 0xC1 ORIGIN 0x1E 0x4E RETURNDATASIZE PUSH13 0xEC7A64736F6C63430007050033 ",
							"sourceMap": "149:9470:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x5FE0C6F99DEA5E 0xAA CHAINID PUSH13 0xCD5A2E5C35138FB5FE40169983 0xC1 ORIGIN 0x1E 0x4E RETURNDATASIZE PUSH13 0xEC7A64736F6C63430007050033 ",
							"sourceMap": "149:9470:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"addressToString(address)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033",
									".code": [
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Counters.sol\":96:944  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Counters.sol\":96:944  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220887312eb5d827a2dd9b8affac8617c307d0992ed131f50d26cfcac0c6b3dac2e64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220887312eb5d827a2dd9b8affac8617c307d0992ed131f50d26cfcac0c6b3dac2e64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH20 0x12EB5D827A2DD9B8AFFAC8617C307D0992ED131F POP 0xD2 PUSH13 0xFCAC0C6B3DAC2E64736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "96:848:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220887312eb5d827a2dd9b8affac8617c307d0992ed131f50d26cfcac0c6b3dac2e64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH20 0x12EB5D827A2DD9B8AFFAC8617C307D0992ED131F POP 0xD2 PUSH13 0xFCAC0C6B3DAC2E64736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "96:848:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 96,
									"end": 944,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220887312eb5d827a2dd9b8affac8617c307d0992ed131f50d26cfcac0c6b3dac2e64736f6c63430007050033",
									".code": [
										{
											"begin": 96,
											"end": 944,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 96,
											"end": 944,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 96,
											"end": 944,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 96,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 96,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 944,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 96,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 944,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 96,
											"end": 944,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Counters.sol\":{\"keccak256\":\"0x7803a8db31ab4407c907b44536f70e1c460835997bb31cdf67a7f8ed0edf7f9e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://a6b92404baa42cc67f22266ea5f6967cc1039b1443f9743a151b78994ee97820\",\"dweb:/ipfs/Qmdm7doaGJN599BEQCrmY6VKNSynmYrzhYnBK9LK9mXnJo\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":175:3052  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":175:3052  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 0x4C 0x4C PUSH14 0xFF67B13F174443E5BDD67E29FD1D 0xE3 0xDA CALLDATACOPY PUSH16 0x2A96F1346627D2D79E64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "175:2877:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 0x4C 0x4C PUSH14 0xFF67B13F174443E5BDD67E29FD1D 0xE3 0xDA CALLDATACOPY PUSH16 0x2A96F1346627D2D79E64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "175:2877:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"bondingCurve(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"percentageAmount(uint256,uint8)": "infinite",
								"percentageOfTotal(uint256,uint256)": "infinite",
								"quadraticPricing(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"substractPercentage(uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
									".code": [
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/sOHM.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"manager()": "481c6a75",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"IOwnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/interfaces/IERC2612Permit.sol\":{\"keccak256\":\"0x2b28bfc4e0621eb60b914917dc916cc08ba97eee0a3b06d98fe56ff9ce2c0d59\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b5ddc8c3db72e2cd69a8defcc016910454578b7f46899a7ce0bdec603e58640\",\"dweb:/ipfs/QmYNhiaGjMdGXhooPCTxW3AYNWFii9WSkUcR4KkPqvRM3S\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]},\"contracts/libraries/Counters.sol\":{\"keccak256\":\"0x7803a8db31ab4407c907b44536f70e1c460835997bb31cdf67a7f8ed0edf7f9e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://a6b92404baa42cc67f22266ea5f6967cc1039b1443f9743a151b78994ee97820\",\"dweb:/ipfs/Qmdm7doaGJN599BEQCrmY6VKNSynmYrzhYnBK9LK9mXnJo\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x785093256153ed3bcee1e666d88a596cd03c2af12b9962d51f4271ecf455094d\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://aefbf404918518679ed39de9b9a1740403e60b28d83a05072642f58743517348\",\"dweb:/ipfs/QmcwTTRe29fy4Dvj8vhp4DCaqtAKuEqvnuNMAsVatUEUwY\"]},\"contracts/types/ERC20.sol\":{\"keccak256\":\"0xa1b58a3231d7efe286f6bf32ecbdbd2a8a8395c70da96d960e3e0ecf1a6e0aa2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8fcb5129cdae755dabf3798f92161941944f899154a0eaab2dda0a1e5f78ee03\",\"dweb:/ipfs/QmSRzMKPL8kYhc521GKDuzgyHvqFsP5VMxw532XXadyBNV\"]},\"contracts/types/ERC20Permit.sol\":{\"keccak256\":\"0xea1d7e9f03035c6e454dddd84ca8693b6305868b4a85de215bea6ed487ae52bd\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ceb0f9bc321a996264ca07300e6fe5eefddfa05ed1c230b6ebdde3f395067604\",\"dweb:/ipfs/QmbrBvTNjEQjCkNgLTucBBMmRFzNqY9xPmMZuNiHzPJcPq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":1102:2344  contract Ownable is IOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/sOHM.sol\":1369:1472  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/sOHM.sol\":1403:1413  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":1394:1400  _owner */\n  0x00\n  dup1\n    /* \"contracts/sOHM.sol\":1394:1413  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":1457:1463  _owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":1428:1465  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":1453:1454  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":1428:1465  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/sOHM.sol\":1102:2344  contract Ownable is IOwnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":1102:2344  contract Ownable is IOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x089208d8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x481c6a75\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5a96ac0a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sOHM.sol\":1696:1852  function renounceManagement() public virtual override onlyManager() {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/sOHM.sol\":1858:2115  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/sOHM.sol\":1478:1566  function manager() public view override returns (address) {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":2125:2342  function pullManagement() public virtual override {... */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/sOHM.sol\":1696:1852  function renounceManagement() public virtual override onlyManager() {... */\n    tag_8:\n        /* \"contracts/sOHM.sol\":1624:1634  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":1614:1634  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1614:1620  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1614:1634  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":1605:1672  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"contracts/sOHM.sol\":1812:1813  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":1779:1816  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1796:1802  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1779:1816  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":1843:1844  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":1826:1832  _owner */\n      dup1\n      0x00\n        /* \"contracts/sOHM.sol\":1826:1845  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":1696:1852  function renounceManagement() public virtual override onlyManager() {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":1858:2115  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_11:\n        /* \"contracts/sOHM.sol\":1624:1634  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":1614:1634  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1614:1620  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1614:1634  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":1605:1672  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/sOHM.sol\":1981:1982  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":1960:1983  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1960:1969  newOwner_ */\n      dup2\n        /* \"contracts/sOHM.sol\":1960:1983  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":1951:2026  require( newOwner_ != address(0), \"Ownable: new owner is the zero address\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/sOHM.sol\":2066:2075  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":2041:2077  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2058:2064  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2041:2077  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":2099:2108  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":2087:2096  _newOwner */\n      0x01\n      0x00\n        /* \"contracts/sOHM.sol\":2087:2108  _newOwner = newOwner_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":1858:2115  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":1478:1566  function manager() public view override returns (address) {... */\n    tag_13:\n        /* \"contracts/sOHM.sol\":1527:1534  address */\n      0x00\n        /* \"contracts/sOHM.sol\":1553:1559  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1546:1559  return _owner */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":1478:1566  function manager() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":2125:2342  function pullManagement() public virtual override {... */\n    tag_15:\n        /* \"contracts/sOHM.sol\":2208:2217  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2194:2217  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2194:2204  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":2194:2217  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":2185:2256  require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/sOHM.sol\":2296:2305  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2271:2307  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2288:2294  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2271:2307  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":2326:2335  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2317:2323  _owner */\n      0x00\n      dup1\n        /* \"contracts/sOHM.sol\":2317:2335  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":2125:2342  function pullManagement() public virtual override {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n\n    auxdata: 0xa2646970667358221220322701c513251de1dd507082caf2a8d7e11bb55a847e837782b2111229fad36b64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36106ae806100db6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089208d81461005157806346f68ee91461005b578063481c6a751461009f5780635a96ac0a146100d3575b600080fd5b6100596100dd565b005b61009d6004803603602081101561007157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025c565b005b6100a7610461565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100db61048a565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461019e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106316026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806106576022913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca2646970667358221220322701c513251de1dd507082caf2a8d7e11bb55a847e837782b2111229fad36b64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6AE DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89208D8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x631 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x657 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0xA2646970667358221220322701 0xC5 SGT 0x25 SAR 0xE1 0xDD POP PUSH17 0x82CAF2A8D7E11BB55A847E837782B21112 0x29 STATICCALL 0xD3 PUSH12 0x64736F6C6343000705003300 ",
							"sourceMap": "1102:1242:5:-:0;;;1369:103;;;;;;;;;;1403:10;1394:6;;:19;;;;;;;;;;;;;;;;;;1457:6;;;;;;;;;;1428:37;;1453:1;1428:37;;;;;;;;;;;;1102:1242;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089208d81461005157806346f68ee91461005b578063481c6a751461009f5780635a96ac0a146100d3575b600080fd5b6100596100dd565b005b61009d6004803603602081101561007157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025c565b005b6100a7610461565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100db61048a565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461019e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106316026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806106576022913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca2646970667358221220322701c513251de1dd507082caf2a8d7e11bb55a847e837782b2111229fad36b64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89208D8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x631 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x657 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0xA2646970667358221220322701 0xC5 SGT 0x25 SAR 0xE1 0xDD POP PUSH17 0x82CAF2A8D7E11BB55A847E837782B21112 0x29 STATICCALL 0xD3 PUSH12 0x64736F6C6343000705003300 ",
							"sourceMap": "1102:1242:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1696:156;;;:::i;:::-;;1858:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1478:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2125:217;;;:::i;:::-;;1696:156;1624:10;1614:20;;:6;;;;;;;;;;:20;;;1605:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:::1;1779:37;;1796:6;::::0;::::1;;;;;;;;1779:37;;;;;;;;;;;;1843:1;1826:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1696:156::o:0;1858:257::-;1624:10;1614:20;;:6;;;;;;;;;;:20;;;1605:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:1:::1;1960:23;;:9;:23;;;;1951:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2066:9;2041:36;;2058:6;::::0;::::1;;;;;;;;2041:36;;;;;;;;;;;;2099:9;2087;;:21;;;;;;;;;;;;;;;;;;1858:257:::0;:::o;1478:88::-;1527:7;1553:6;;;;;;;;;;;1546:13;;1478:88;:::o;2125:217::-;2208:9;;;;;;;;;;;2194:23;;:10;:23;;;2185:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2296:9;;;;;;;;;;;2271:36;;2288:6;;;;;;;;;;2271:36;;;;;;;;;;;;2326:9;;;;;;;;;;;2317:6;;:18;;;;;;;;;;;;;;;;;;2125:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "342000",
								"executionCost": "23624",
								"totalCost": "365624"
							},
							"external": {
								"manager()": "1077",
								"pullManagement()": "infinite",
								"pushManagement(address)": "infinite",
								"renounceManagement()": "24234"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1102,
									"end": 2344,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1102,
									"end": 2344,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1102,
									"end": 2344,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1472,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1472,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1472,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1472,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1369,
									"end": 1472,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1472,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1369,
									"end": 1472,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1472,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1472,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1369,
									"end": 1472,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1472,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1403,
									"end": 1413,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1400,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1394,
									"end": 1400,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1453,
									"end": 1454,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "PUSH",
									"source": 5,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 1102,
									"end": 2344,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1102,
									"end": 2344,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1102,
									"end": 2344,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1102,
									"end": 2344,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1102,
									"end": 2344,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1102,
									"end": 2344,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1102,
									"end": 2344,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220322701c513251de1dd507082caf2a8d7e11bb55a847e837782b2111229fad36b64736f6c63430007050033",
									".code": [
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "89208D8"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "46F68EE9"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "481C6A75"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "5A96AC0A"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 2344,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1634,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1634,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH data",
											"source": 5,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2087,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2204,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH data",
											"source": 5,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "PUSH",
											"source": 5,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c"
									}
								}
							}
						},
						"methodIdentifiers": {
							"manager()": "481c6a75",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/interfaces/IERC2612Permit.sol\":{\"keccak256\":\"0x2b28bfc4e0621eb60b914917dc916cc08ba97eee0a3b06d98fe56ff9ce2c0d59\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b5ddc8c3db72e2cd69a8defcc016910454578b7f46899a7ce0bdec603e58640\",\"dweb:/ipfs/QmYNhiaGjMdGXhooPCTxW3AYNWFii9WSkUcR4KkPqvRM3S\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]},\"contracts/libraries/Counters.sol\":{\"keccak256\":\"0x7803a8db31ab4407c907b44536f70e1c460835997bb31cdf67a7f8ed0edf7f9e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://a6b92404baa42cc67f22266ea5f6967cc1039b1443f9743a151b78994ee97820\",\"dweb:/ipfs/Qmdm7doaGJN599BEQCrmY6VKNSynmYrzhYnBK9LK9mXnJo\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x785093256153ed3bcee1e666d88a596cd03c2af12b9962d51f4271ecf455094d\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://aefbf404918518679ed39de9b9a1740403e60b28d83a05072642f58743517348\",\"dweb:/ipfs/QmcwTTRe29fy4Dvj8vhp4DCaqtAKuEqvnuNMAsVatUEUwY\"]},\"contracts/types/ERC20.sol\":{\"keccak256\":\"0xa1b58a3231d7efe286f6bf32ecbdbd2a8a8395c70da96d960e3e0ecf1a6e0aa2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8fcb5129cdae755dabf3798f92161941944f899154a0eaab2dda0a1e5f78ee03\",\"dweb:/ipfs/QmSRzMKPL8kYhc521GKDuzgyHvqFsP5VMxw532XXadyBNV\"]},\"contracts/types/ERC20Permit.sol\":{\"keccak256\":\"0xea1d7e9f03035c6e454dddd84ca8693b6305868b4a85de215bea6ed487ae52bd\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ceb0f9bc321a996264ca07300e6fe5eefddfa05ed1c230b6ebdde3f395067604\",\"dweb:/ipfs/QmbrBvTNjEQjCkNgLTucBBMmRFzNqY9xPmMZuNiHzPJcPq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 968,
								"contract": "contracts/sOHM.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 970,
								"contract": "contracts/sOHM.sol:Ownable",
								"label": "_newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"sOlympus": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rebase",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "LogRebase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "stakingContract",
									"type": "address"
								}
							],
							"name": "LogStakingContractUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"name": "LogSupply",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gons",
									"type": "uint256"
								}
							],
							"name": "balanceForGons",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "circulatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "gonsForBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingContract_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initializer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "profit_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "epoch_",
									"type": "uint256"
								}
							],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rebases",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rebase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedBefore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountRebased",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockNumberOccured",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_INDEX",
									"type": "uint256"
								}
							],
							"name": "setIndex",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC2612Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC2612Permit-permit}."
							},
							"rebase(uint256,uint256)": {
								"params": {
									"profit_": "uint256"
								},
								"returns": {
									"_0": "uint256"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":2346:9624  contract sOlympus is ERC20Permit, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/sOHM.sol\":3829:4039  constructor() ERC20(\"Staked Olympus\", \"sOHM\", 9) ERC20Permit() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/types/ERC20.sol\":1058:1206  constructor (string memory name_, string memory symbol_, uint8 decimals_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x5374616b6564204f6c796d707573000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x734f484d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/sOHM.sol\":3875:3876  9 */\n  0x09\n    /* \"contracts/types/ERC20.sol\":1146:1151  name_ */\n  dup3\n    /* \"contracts/types/ERC20.sol\":1138:1143  _name */\n  0x03\n    /* \"contracts/types/ERC20.sol\":1138:1151  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/types/ERC20.sol\":1167:1174  symbol_ */\n  dup2\n    /* \"contracts/types/ERC20.sol\":1157:1164  _symbol */\n  0x04\n    /* \"contracts/types/ERC20.sol\":1157:1174  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/types/ERC20.sol\":1192:1201  decimals_ */\n  dup1\n    /* \"contracts/types/ERC20.sol\":1180:1189  _decimals */\n  0x05\n  0x00\n    /* \"contracts/types/ERC20.sol\":1180:1201  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/types/ERC20.sol\":1058:1206  constructor (string memory name_, string memory symbol_, uint8 decimals_) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/types/ERC20Permit.sol\":616:631  uint256 chainID */\n  0x00\n    /* \"contracts/types/ERC20Permit.sol\":675:684  chainid() */\n  chainid\n    /* \"contracts/types/ERC20Permit.sol\":664:684  chainID := chainid() */\n  swap1\n  pop\n    /* \"contracts/types/ERC20Permit.sol\":757:852  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"contracts/types/ERC20Permit.sol\":882:888  name() */\n  tag_11\n    /* \"contracts/types/ERC20Permit.sol\":882:886  name */\n  shl(0x20, tag_12)\n    /* \"contracts/types/ERC20Permit.sol\":882:888  name() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/types/ERC20Permit.sol\":866:890  keccak256(bytes(name())) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/types/ERC20Permit.sol\":914:924  bytes(\"1\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/types/ERC20Permit.sol\":904:925  keccak256(bytes(\"1\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/types/ERC20Permit.sol\":950:957  chainID */\n  dup4\n    /* \"contracts/types/ERC20Permit.sol\":979:983  this */\n  address\n    /* \"contracts/types/ERC20Permit.sol\":733:994  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/types/ERC20Permit.sol\":723:995  keccak256(abi.encode(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/types/ERC20Permit.sol\":704:720  DOMAIN_SEPARATOR */\n  0x07\n    /* \"contracts/types/ERC20Permit.sol\":704:995  DOMAIN_SEPARATOR = keccak256(abi.encode(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/types/ERC20Permit.sol\":591:1002  constructor() {... */\n  pop\n    /* \"contracts/sOHM.sol\":1403:1413  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":1394:1400  _owner */\n  0x08\n  0x00\n    /* \"contracts/sOHM.sol\":1394:1413  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":1457:1463  _owner */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":1428:1465  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":1453:1454  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":1428:1465  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/sOHM.sol\":3916:3926  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":3902:3913  initializer */\n  0x0b\n  0x00\n    /* \"contracts/sOHM.sol\":3902:3926  initializer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":3217:3232  5000000 * 10**9 */\n  0x11c37937e08000\n    /* \"contracts/sOHM.sol\":3936:3948  _totalSupply */\n  0x02\n    /* \"contracts/sOHM.sol\":3936:3975  _totalSupply = INITIAL_FRAGMENTS_SUPPLY */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":4004:4032  TOTAL_GONS.div(_totalSupply) */\n  tag_15\n    /* \"contracts/sOHM.sol\":4019:4031  _totalSupply */\n  sload(0x02)\n    /* \"contracts/sOHM.sol\":3217:3232  5000000 * 10**9 */\n  0x11c37937e08000\n    /* \"contracts/sOHM.sol\":3157:3158  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":3148:3159  ~uint256(0) */\n  not\n    /* \"contracts/sOHM.sol\":3465:3503  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n  dup2\n  tag_16\n  jumpi\n  invalid\ntag_16:\n  mod\n    /* \"contracts/sOHM.sol\":3157:3158  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":3148:3159  ~uint256(0) */\n  not\n    /* \"contracts/sOHM.sol\":3450:3504  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n  sub\n    /* \"contracts/sOHM.sol\":4004:4018  TOTAL_GONS.div */\n  or(tag_0_124, shl(0x20, tag_17))\n  swap1\n    /* \"contracts/sOHM.sol\":4004:4032  TOTAL_GONS.div(_totalSupply) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/sOHM.sol\":3985:4001  _gonsPerFragment */\n  0x0e\n    /* \"contracts/sOHM.sol\":3985:4032  _gonsPerFragment = TOTAL_GONS.div(_totalSupply) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":2346:9624  contract sOlympus is ERC20Permit, Ownable {... */\n  jump(tag_18)\n    /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\ntag_12:\n    /* \"contracts/types/ERC20.sol\":1323:1336  string memory */\n  0x60\n    /* \"contracts/types/ERC20.sol\":1351:1356  _name */\n  0x03\n    /* \"contracts/types/ERC20.sol\":1344:1356  return _name */\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  0x1f\n  add\n  0x20\n  dup1\n  swap2\n  div\n  mul\n  0x20\n  add\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  swap3\n  swap2\n  swap1\n  dup2\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  iszero\n  tag_20\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_21\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  0x20\n  add\n  swap2\n  jump(tag_20)\ntag_21:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_22:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_22\n  jumpi\n  dup3\n  swap1\n  sub\n  0x1f\n  and\n  dup3\n  add\n  swap2\ntag_20:\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n    /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_17:\n    /* \"contracts/libraries/SafeMath.sol\":1019:1026  uint256 */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  tag_24\n    /* \"contracts/libraries/SafeMath.sol\":1049:1050  a */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1052:1053  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1a\n  dup2\n  mstore\n  0x20\n  add\n  0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1045:1048  div */\n  shl(0x20, tag_25)\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"contracts/libraries/SafeMath.sol\":1038:1084  return div(a, b, \"SafeMath: division by zero\") */\n  swap1\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\ntag_25:\n    /* \"contracts/libraries/SafeMath.sol\":1183:1190  uint256 */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1214:1215  0 */\n  dup1\n    /* \"contracts/libraries/SafeMath.sol\":1210:1211  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1210:1215  b > 0 */\n  gt\n    /* \"contracts/libraries/SafeMath.sol\":1217:1229  errorMessage */\n  dup3\n    /* \"contracts/libraries/SafeMath.sol\":1202:1230  require(b > 0, errorMessage) */\n  swap1\n  tag_27\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_28:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_30\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_28)\ntag_30:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_31\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_31:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_27:\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1240:1249  uint256 c */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1256:1257  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1252:1253  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1252:1257  a / b */\n  dup2\n  tag_32\n  jumpi\n  invalid\ntag_32:\n  div\n    /* \"contracts/libraries/SafeMath.sol\":1240:1257  uint256 c = a / b */\n  swap1\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1291:1292  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1287:1288  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1287:1292  a % b */\n  dup2\n  tag_33\n  jumpi\n  invalid\ntag_33:\n  mod\n    /* \"contracts/libraries/SafeMath.sol\":1283:1284  c */\n  dup2\n    /* \"contracts/libraries/SafeMath.sol\":1279:1280  b */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1279:1284  b * c */\n  mul\n    /* \"contracts/libraries/SafeMath.sol\":1279:1292  b * c + a % b */\n  add\n    /* \"contracts/libraries/SafeMath.sol\":1274:1275  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1274:1292  a == b * c + a % b */\n  eq\n    /* \"contracts/libraries/SafeMath.sol\":1267:1293  assert(a == b * c + a % b) */\n  tag_34\n  jumpi\n  invalid\ntag_34:\n    /* \"contracts/libraries/SafeMath.sol\":1358:1359  c */\n  dup1\n    /* \"contracts/libraries/SafeMath.sol\":1351:1359  return c */\n  swap2\n  pop\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/sOHM.sol\":2346:9624  contract sOlympus is ERC20Permit, Ownable {... */\ntag_8:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_36\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_35)\ntag_36:\n  dup3\n  0x1f\n  lt\n  tag_37\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_35)\ntag_37:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_35\n  jumpi\n  swap2\n  dup3\n  add\ntag_38:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_39\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_38)\ntag_39:\ntag_35:\n  pop\n  swap1\n  pop\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  pop\n  swap1\n  jump\t// out\ntag_41:\ntag_42:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_43\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_42)\ntag_43:\n  pop\n  swap1\n  jump\t// out\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":2346:9624  contract sOlympus is ERC20Permit, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x481c6a75\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xc4d66de8\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xee99205c\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9ce110d7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x73c69eb7\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x73c69eb7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7965d56d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9358928b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x481c6a75\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5a96ac0a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2986c0e5\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x3644e515\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x40a5737f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x2986c0e5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2df75cb1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x095ea7b3\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1bd39674\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x058ecdb4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x089208d8\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sOHM.sol\":4860:5729  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n    tag_3:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\n    tag_4:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_45:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_45)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_48\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_48:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":1696:1852  function renounceManagement() public virtual override onlyManager() {... */\n    tag_5:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/sOHM.sol\":8338:8560  function approve( address spender, uint256 value ) public override returns (bool) {... */\n    tag_6:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":2334:2426  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":6753:6875  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n    tag_8:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":7805:8332  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n    tag_9:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":7183:7276  function index() public view returns ( uint ) {... */\n    tag_10:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":3085:3102  uint public INDEX */\n    tag_11:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20Permit.sol\":438:546  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_12:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":2184:2259  function decimals() public view returns (uint8) {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20Permit.sol\":553:584  bytes32 public DOMAIN_SEPARATOR */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":8803:9121  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":4522:4696  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":1858:2115  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/sOHM.sol\":1478:1566  function manager() public view override returns (address) {... */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":2125:2342  function pullManagement() public virtual override {... */\n    tag_19:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/sOHM.sol\":6605:6747  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n    tag_20:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":3055:3078  Rebase[] public rebases */\n    tag_21:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      dup9\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":6881:6999  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n    tag_22:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20Permit.sol\":1884:2002  function nonces(address owner) public view override returns (uint256) {... */\n    tag_23:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":7047:7177  function circulatingSupply() public view returns ( uint ) {... */\n    tag_24:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":1487:1566  function symbol() public view returns (string memory) {... */\n    tag_25:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_101:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_101)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_104:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":2569:2595  address public initializer */\n    tag_26:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":9127:9622  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n    tag_27:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":7282:7640  function transfer( address to, uint256 value ) public override returns (bool) {... */\n    tag_28:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":4045:4516  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n    tag_29:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20Permit.sol\":1072:1821  function permit(... */\n    tag_30:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xe0\n      dup2\n      lt\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/sOHM.sol\":7646:7799  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n    tag_31:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":2533:2563  address public stakingContract */\n    tag_32:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":4860:5729  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n    tag_42:\n        /* \"contracts/sOHM.sol\":4947:4954  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":2492:2507  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2478:2507  msg.sender == stakingContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2478:2488  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":2478:2507  msg.sender == stakingContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":2469:2509  require( msg.sender == stakingContract ) */\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n        /* \"contracts/sOHM.sol\":4967:4987  uint256 rebaseAmount */\n      0x00\n        /* \"contracts/sOHM.sol\":4997:5023  uint256 circulatingSupply_ */\n      dup1\n        /* \"contracts/sOHM.sol\":5026:5045  circulatingSupply() */\n      tag_128\n        /* \"contracts/sOHM.sol\":5026:5043  circulatingSupply */\n      tag_98\n        /* \"contracts/sOHM.sol\":5026:5045  circulatingSupply() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/sOHM.sol\":4997:5045  uint256 circulatingSupply_ = circulatingSupply() */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":5072:5073  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":5061:5068  profit_ */\n      dup6\n        /* \"contracts/sOHM.sol\":5061:5073  profit_ == 0 */\n      eq\n        /* \"contracts/sOHM.sol\":5056:5420  if ( profit_ == 0 ) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/sOHM.sol\":5106:5112  epoch_ */\n      dup4\n        /* \"contracts/sOHM.sol\":5095:5145  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      0x917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da4\n        /* \"contracts/sOHM.sol\":5114:5129  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":5131:5143  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":5095:5145  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":5175:5181  epoch_ */\n      dup4\n        /* \"contracts/sOHM.sol\":5164:5195  LogRebase( epoch_, 0, index() ) */\n      0x6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2\n        /* \"contracts/sOHM.sol\":5183:5184  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":5186:5193  index() */\n      tag_130\n        /* \"contracts/sOHM.sol\":5186:5191  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":5186:5193  index() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/sOHM.sol\":5164:5195  LogRebase( epoch_, 0, index() ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":5216:5228  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":5209:5228  return _totalSupply */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_127)\n        /* \"contracts/sOHM.sol\":5056:5420  if ( profit_ == 0 ) {... */\n    tag_129:\n        /* \"contracts/sOHM.sol\":5271:5272  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":5250:5268  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":5250:5272  circulatingSupply_ > 0 */\n      gt\n        /* \"contracts/sOHM.sol\":5245:5420  if ( circulatingSupply_ > 0 ){... */\n      iszero\n      tag_132\n      jumpi\n        /* \"contracts/sOHM.sol\":5303:5356  profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      tag_133\n        /* \"contracts/sOHM.sol\":5336:5354  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":5303:5330  profit_.mul( _totalSupply ) */\n      tag_134\n        /* \"contracts/sOHM.sol\":5316:5328  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":5303:5310  profit_ */\n      dup9\n        /* \"contracts/sOHM.sol\":5303:5314  profit_.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":5303:5330  profit_.mul( _totalSupply ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/sOHM.sol\":5303:5334  profit_.mul( _totalSupply ).div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":5303:5356  profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/sOHM.sol\":5288:5356  rebaseAmount = profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      swap2\n      pop\n        /* \"contracts/sOHM.sol\":5245:5420  if ( circulatingSupply_ > 0 ){... */\n      jump(tag_136)\n    tag_132:\n        /* \"contracts/sOHM.sol\":5402:5409  profit_ */\n      dup5\n        /* \"contracts/sOHM.sol\":5387:5409  rebaseAmount = profit_ */\n      swap2\n      pop\n        /* \"contracts/sOHM.sol\":5245:5420  if ( circulatingSupply_ > 0 ){... */\n    tag_136:\n        /* \"contracts/sOHM.sol\":5445:5477  _totalSupply.add( rebaseAmount ) */\n      tag_137\n        /* \"contracts/sOHM.sol\":5463:5475  rebaseAmount */\n      dup3\n        /* \"contracts/sOHM.sol\":5445:5457  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":5445:5461  _totalSupply.add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":5445:5477  _totalSupply.add( rebaseAmount ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/sOHM.sol\":5430:5442  _totalSupply */\n      0x02\n        /* \"contracts/sOHM.sol\":5430:5477  _totalSupply = _totalSupply.add( rebaseAmount ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":3629:3630  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":3620:3631  ~uint128(0) */\n      not\n        /* \"contracts/sOHM.sol\":5508:5518  MAX_SUPPLY */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":5493:5505  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":5493:5518  _totalSupply > MAX_SUPPLY */\n      gt\n        /* \"contracts/sOHM.sol\":5488:5571  if ( _totalSupply > MAX_SUPPLY ) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/sOHM.sol\":3629:3630  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":3620:3631  ~uint128(0) */\n      not\n        /* \"contracts/sOHM.sol\":5550:5560  MAX_SUPPLY */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":5535:5547  _totalSupply */\n      0x02\n        /* \"contracts/sOHM.sol\":5535:5560  _totalSupply = MAX_SUPPLY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":5488:5571  if ( _totalSupply > MAX_SUPPLY ) {... */\n    tag_139:\n        /* \"contracts/sOHM.sol\":5600:5630  TOTAL_GONS.div( _totalSupply ) */\n      tag_140\n        /* \"contracts/sOHM.sol\":5616:5628  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":3217:3232  5000000 * 10**9 */\n      0x11c37937e08000\n        /* \"contracts/sOHM.sol\":3157:3158  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":3148:3159  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":3465:3503  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      dup2\n      tag_141\n      jumpi\n      invalid\n    tag_141:\n      mod\n        /* \"contracts/sOHM.sol\":3157:3158  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":3148:3159  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":3450:3504  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      sub\n        /* \"contracts/sOHM.sol\":5600:5614  TOTAL_GONS.div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":5600:5630  TOTAL_GONS.div( _totalSupply ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"contracts/sOHM.sol\":5581:5597  _gonsPerFragment */\n      0x0e\n        /* \"contracts/sOHM.sol\":5581:5630  _gonsPerFragment = TOTAL_GONS.div( _totalSupply ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":5641:5692  _storeRebase( circulatingSupply_, profit_, epoch_ ) */\n      tag_142\n        /* \"contracts/sOHM.sol\":5655:5673  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":5675:5682  profit_ */\n      dup7\n        /* \"contracts/sOHM.sol\":5684:5690  epoch_ */\n      dup7\n        /* \"contracts/sOHM.sol\":5641:5653  _storeRebase */\n      tag_143\n        /* \"contracts/sOHM.sol\":5641:5692  _storeRebase( circulatingSupply_, profit_, epoch_ ) */\n      jump\t// in\n    tag_142:\n      pop\n        /* \"contracts/sOHM.sol\":5710:5722  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":5703:5722  return _totalSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":2519:2520  _ */\n    tag_127:\n        /* \"contracts/sOHM.sol\":4860:5729  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\n    tag_44:\n        /* \"contracts/types/ERC20.sol\":1323:1336  string memory */\n      0x60\n        /* \"contracts/types/ERC20.sol\":1351:1356  _name */\n      0x03\n        /* \"contracts/types/ERC20.sol\":1344:1356  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":1696:1852  function renounceManagement() public virtual override onlyManager() {... */\n    tag_50:\n        /* \"contracts/sOHM.sol\":1624:1634  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":1614:1634  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1614:1620  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1614:1634  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":1605:1672  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/sOHM.sol\":1812:1813  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":1779:1816  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1796:1802  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1779:1816  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":1843:1844  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":1826:1832  _owner */\n      0x08\n      0x00\n        /* \"contracts/sOHM.sol\":1826:1845  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":1696:1852  function renounceManagement() public virtual override onlyManager() {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":8338:8560  function approve( address spender, uint256 value ) public override returns (bool) {... */\n    tag_53:\n        /* \"contracts/sOHM.sol\":8414:8418  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":8472:8477  value */\n      dup2\n        /* \"contracts/sOHM.sol\":8431:8444  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":8431:8458  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8446:8456  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":8431:8458  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8431:8469  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8460:8467  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":8431:8469  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8431:8477  _allowedValue[ msg.sender ][ spender ] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":8515:8522  spender */\n      dup3\n        /* \"contracts/sOHM.sol\":8493:8531  Approval( msg.sender, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":8503:8513  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":8493:8531  Approval( msg.sender, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":8524:8529  value */\n      dup5\n        /* \"contracts/sOHM.sol\":8493:8531  Approval( msg.sender, spender, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":8549:8553  true */\n      0x01\n        /* \"contracts/sOHM.sol\":8542:8553  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":8338:8560  function approve( address spender, uint256 value ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":2334:2426  function totalSupply() public view override returns (uint256) {... */\n    tag_55:\n        /* \"contracts/types/ERC20.sol\":2387:2394  uint256 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":2409:2421  _totalSupply */\n      sload(0x02)\n        /* \"contracts/types/ERC20.sol\":2402:2421  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":2334:2426  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":6753:6875  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n    tag_58:\n        /* \"contracts/sOHM.sol\":6814:6818  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":6838:6868  amount.mul( _gonsPerFragment ) */\n      tag_154\n        /* \"contracts/sOHM.sol\":6850:6866  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":6838:6844  amount */\n      dup4\n        /* \"contracts/sOHM.sol\":6838:6848  amount.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":6838:6868  amount.mul( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/sOHM.sol\":6831:6868  return amount.mul( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":6753:6875  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":7805:8332  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n    tag_61:\n        /* \"contracts/sOHM.sol\":7896:7900  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":7950:7998  _allowedValue[ from ][ msg.sender ].sub( value ) */\n      tag_156\n        /* \"contracts/sOHM.sol\":7991:7996  value */\n      dup3\n        /* \"contracts/sOHM.sol\":7950:7963  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":7950:7971  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7965:7969  from */\n      dup8\n        /* \"contracts/sOHM.sol\":7950:7971  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7950:7985  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7973:7983  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":7950:7985  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":7950:7989  _allowedValue[ from ][ msg.sender ].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":7950:7998  _allowedValue[ from ][ msg.sender ].sub( value ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/sOHM.sol\":7912:7925  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":7912:7933  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7927:7931  from */\n      dup7\n        /* \"contracts/sOHM.sol\":7912:7933  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7912:7947  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7935:7945  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":7912:7947  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7912:7998  _allowedValue[ from ][ msg.sender ] = _allowedValue[ from ][ msg.sender ].sub( value ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":8028:8038  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":8012:8078  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":8022:8026  from */\n      dup5\n        /* \"contracts/sOHM.sol\":8012:8078  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":8041:8054  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":8041:8062  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8056:8060  from */\n      dup9\n        /* \"contracts/sOHM.sol\":8041:8062  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8041:8076  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8064:8074  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":8041:8076  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":8012:8078  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":8089:8105  uint256 gonValue */\n      0x00\n        /* \"contracts/sOHM.sol\":8108:8131  gonsForBalance( value ) */\n      tag_158\n        /* \"contracts/sOHM.sol\":8124:8129  value */\n      dup4\n        /* \"contracts/sOHM.sol\":8108:8122  gonsForBalance */\n      tag_58\n        /* \"contracts/sOHM.sol\":8108:8131  gonsForBalance( value ) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/sOHM.sol\":8089:8131  uint256 gonValue = gonsForBalance( value ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":8164:8198  _gonBalances[from].sub( gonValue ) */\n      tag_159\n        /* \"contracts/sOHM.sol\":8188:8196  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":8164:8176  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":8164:8182  _gonBalances[from] */\n      0x00\n        /* \"contracts/sOHM.sol\":8177:8181  from */\n      dup9\n        /* \"contracts/sOHM.sol\":8164:8182  _gonBalances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":8164:8186  _gonBalances[from].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":8164:8198  _gonBalances[from].sub( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"contracts/sOHM.sol\":8141:8153  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":8141:8161  _gonBalances[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8155:8159  from */\n      dup8\n        /* \"contracts/sOHM.sol\":8141:8161  _gonBalances[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8141:8198  _gonBalances[ from ] = _gonBalances[from].sub( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":8229:8261  _gonBalances[to].add( gonValue ) */\n      tag_160\n        /* \"contracts/sOHM.sol\":8251:8259  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":8229:8241  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":8229:8245  _gonBalances[to] */\n      0x00\n        /* \"contracts/sOHM.sol\":8242:8244  to */\n      dup8\n        /* \"contracts/sOHM.sol\":8229:8245  _gonBalances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":8229:8249  _gonBalances[to].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":8229:8261  _gonBalances[to].add( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"contracts/sOHM.sol\":8208:8220  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":8208:8226  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8222:8224  to */\n      dup7\n        /* \"contracts/sOHM.sol\":8208:8226  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8208:8261  _gonBalances[ to ] = _gonBalances[to].add( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":8292:8294  to */\n      dup4\n        /* \"contracts/sOHM.sol\":8276:8303  Transfer( from, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":8286:8290  from */\n      dup6\n        /* \"contracts/sOHM.sol\":8276:8303  Transfer( from, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":8296:8301  value */\n      dup6\n        /* \"contracts/sOHM.sol\":8276:8303  Transfer( from, to, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":8321:8325  true */\n      0x01\n        /* \"contracts/sOHM.sol\":8314:8325  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":7805:8332  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":7183:7276  function index() public view returns ( uint ) {... */\n    tag_63:\n        /* \"contracts/sOHM.sol\":7222:7226  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":7246:7269  balanceForGons( INDEX ) */\n      tag_162\n        /* \"contracts/sOHM.sol\":7262:7267  INDEX */\n      sload(0x0d)\n        /* \"contracts/sOHM.sol\":7246:7260  balanceForGons */\n      tag_93\n        /* \"contracts/sOHM.sol\":7246:7269  balanceForGons( INDEX ) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/sOHM.sol\":7239:7269  return balanceForGons( INDEX ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":7183:7276  function index() public view returns ( uint ) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":3085:3102  uint public INDEX */\n    tag_65:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/types/ERC20Permit.sol\":438:546  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_67:\n        /* \"contracts/types/ERC20Permit.sol\":480:546  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/types/ERC20Permit.sol\":438:546  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":2184:2259  function decimals() public view returns (uint8) {... */\n    tag_69:\n        /* \"contracts/types/ERC20.sol\":2225:2230  uint8 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":2245:2254  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/types/ERC20.sol\":2238:2254  return _decimals */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":2184:2259  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/types/ERC20Permit.sol\":553:584  bytes32 public DOMAIN_SEPARATOR */\n    tag_71:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":8803:9121  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n    tag_74:\n        /* \"contracts/sOHM.sol\":8894:8898  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":8951:9007  _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      tag_165\n        /* \"contracts/sOHM.sol\":8995:9005  addedValue */\n      dup3\n        /* \"contracts/sOHM.sol\":8951:8964  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":8951:8978  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8966:8976  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":8951:8978  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8951:8989  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8980:8987  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":8951:8989  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":8951:8993  _allowedValue[ msg.sender ][ spender ].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":8951:9007  _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"contracts/sOHM.sol\":8910:8923  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":8910:8937  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8925:8935  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":8910:8937  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8910:8948  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8939:8946  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":8910:8948  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8910:9007  _allowedValue[ msg.sender ][ spender ] = _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":9044:9051  spender */\n      dup3\n        /* \"contracts/sOHM.sol\":9022:9093  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":9032:9042  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":9022:9093  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":9053:9066  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":9053:9080  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9068:9078  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":9053:9080  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9053:9091  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9082:9089  spender */\n      dup8\n        /* \"contracts/sOHM.sol\":9053:9091  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":9022:9093  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":9110:9114  true */\n      0x01\n        /* \"contracts/sOHM.sol\":9103:9114  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":8803:9121  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":4522:4696  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n    tag_77:\n        /* \"contracts/sOHM.sol\":4588:4592  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":1624:1634  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":1614:1634  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1614:1620  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1614:1634  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":1605:1672  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/sOHM.sol\":4623:4624  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":4614:4619  INDEX */\n      sload(0x0d)\n        /* \"contracts/sOHM.sol\":4614:4624  INDEX == 0 */\n      eq\n        /* \"contracts/sOHM.sol\":4605:4626  require( INDEX == 0 ) */\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n        /* \"contracts/sOHM.sol\":4644:4668  gonsForBalance( _INDEX ) */\n      tag_170\n        /* \"contracts/sOHM.sol\":4660:4666  _INDEX */\n      dup3\n        /* \"contracts/sOHM.sol\":4644:4658  gonsForBalance */\n      tag_58\n        /* \"contracts/sOHM.sol\":4644:4668  gonsForBalance( _INDEX ) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/sOHM.sol\":4636:4641  INDEX */\n      0x0d\n        /* \"contracts/sOHM.sol\":4636:4668  INDEX = gonsForBalance( _INDEX ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":4685:4689  true */\n      0x01\n        /* \"contracts/sOHM.sol\":4678:4689  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":4522:4696  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":1858:2115  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_80:\n        /* \"contracts/sOHM.sol\":1624:1634  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":1614:1634  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1614:1620  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1614:1634  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":1605:1672  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/sOHM.sol\":1981:1982  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":1960:1983  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1960:1969  newOwner_ */\n      dup2\n        /* \"contracts/sOHM.sol\":1960:1983  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":1951:2026  require( newOwner_ != address(0), \"Ownable: new owner is the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/sOHM.sol\":2066:2075  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":2041:2077  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2058:2064  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2041:2077  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":2099:2108  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":2087:2096  _newOwner */\n      0x09\n      0x00\n        /* \"contracts/sOHM.sol\":2087:2108  _newOwner = newOwner_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":1858:2115  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":1478:1566  function manager() public view override returns (address) {... */\n    tag_82:\n        /* \"contracts/sOHM.sol\":1527:1534  address */\n      0x00\n        /* \"contracts/sOHM.sol\":1553:1559  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1546:1559  return _owner */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":1478:1566  function manager() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":2125:2342  function pullManagement() public virtual override {... */\n    tag_84:\n        /* \"contracts/sOHM.sol\":2208:2217  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2194:2217  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2194:2204  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":2194:2217  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":2185:2256  require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/sOHM.sol\":2296:2305  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2271:2307  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2288:2294  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2271:2307  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":2326:2335  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":2317:2323  _owner */\n      0x08\n      0x00\n        /* \"contracts/sOHM.sol\":2317:2335  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":2125:2342  function pullManagement() public virtual override {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":6605:6747  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n    tag_87:\n        /* \"contracts/sOHM.sol\":6670:6677  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":6697:6740  _gonBalances[ who ].div( _gonsPerFragment ) */\n      tag_179\n        /* \"contracts/sOHM.sol\":6722:6738  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":6697:6709  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":6697:6716  _gonBalances[ who ] */\n      0x00\n        /* \"contracts/sOHM.sol\":6711:6714  who */\n      dup6\n        /* \"contracts/sOHM.sol\":6697:6716  _gonBalances[ who ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":6697:6720  _gonBalances[ who ].div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":6697:6740  _gonBalances[ who ].div( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"contracts/sOHM.sol\":6690:6740  return _gonBalances[ who ].div( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":6605:6747  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":3055:3078  Rebase[] public rebases */\n    tag_90:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"contracts/sOHM.sol\":6881:6999  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n    tag_93:\n        /* \"contracts/sOHM.sol\":6940:6944  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":6964:6992  gons.div( _gonsPerFragment ) */\n      tag_183\n        /* \"contracts/sOHM.sol\":6974:6990  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":6964:6968  gons */\n      dup4\n        /* \"contracts/sOHM.sol\":6964:6972  gons.div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":6964:6992  gons.div( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"contracts/sOHM.sol\":6957:6992  return gons.div( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":6881:6999  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20Permit.sol\":1884:2002  function nonces(address owner) public view override returns (uint256) {... */\n    tag_96:\n        /* \"contracts/types/ERC20Permit.sol\":1945:1952  uint256 */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1971:1995  _nonces[owner].current() */\n      tag_185\n        /* \"contracts/types/ERC20Permit.sol\":1971:1978  _nonces */\n      0x06\n        /* \"contracts/types/ERC20Permit.sol\":1971:1985  _nonces[owner] */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1979:1984  owner */\n      dup5\n        /* \"contracts/types/ERC20Permit.sol\":1971:1985  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20Permit.sol\":1971:1993  _nonces[owner].current */\n      tag_186\n        /* \"contracts/types/ERC20Permit.sol\":1971:1995  _nonces[owner].current() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/types/ERC20Permit.sol\":1964:1995  return _nonces[owner].current() */\n      swap1\n      pop\n        /* \"contracts/types/ERC20Permit.sol\":1884:2002  function nonces(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":7047:7177  function circulatingSupply() public view returns ( uint ) {... */\n    tag_98:\n        /* \"contracts/sOHM.sol\":7098:7102  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":7122:7170  _totalSupply.sub( balanceOf( stakingContract ) ) */\n      tag_188\n        /* \"contracts/sOHM.sol\":7140:7168  balanceOf( stakingContract ) */\n      tag_189\n        /* \"contracts/sOHM.sol\":7151:7166  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":7140:7149  balanceOf */\n      tag_87\n        /* \"contracts/sOHM.sol\":7140:7168  balanceOf( stakingContract ) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/sOHM.sol\":7122:7134  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":7122:7138  _totalSupply.sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":7122:7170  _totalSupply.sub( balanceOf( stakingContract ) ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"contracts/sOHM.sol\":7115:7170  return _totalSupply.sub( balanceOf( stakingContract ) ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":7047:7177  function circulatingSupply() public view returns ( uint ) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":1487:1566  function symbol() public view returns (string memory) {... */\n    tag_100:\n        /* \"contracts/types/ERC20.sol\":1526:1539  string memory */\n      0x60\n        /* \"contracts/types/ERC20.sol\":1554:1561  _symbol */\n      0x04\n        /* \"contracts/types/ERC20.sol\":1547:1561  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_192\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_191)\n    tag_192:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_193:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_193\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":1487:1566  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":2569:2595  address public initializer */\n    tag_106:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":9127:9622  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n    tag_109:\n        /* \"contracts/sOHM.sol\":9223:9227  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":9239:9255  uint256 oldValue */\n      dup1\n        /* \"contracts/sOHM.sol\":9258:9271  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":9258:9285  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9273:9283  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":9258:9285  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9258:9296  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9287:9294  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":9258:9296  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":9239:9296  uint256 oldValue = _allowedValue[ msg.sender ][ spender ] */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":9329:9337  oldValue */\n      dup1\n        /* \"contracts/sOHM.sol\":9310:9325  subtractedValue */\n      dup4\n        /* \"contracts/sOHM.sol\":9310:9337  subtractedValue >= oldValue */\n      lt\n        /* \"contracts/sOHM.sol\":9306:9509  if (subtractedValue >= oldValue) {... */\n      tag_195\n      jumpi\n        /* \"contracts/sOHM.sol\":9394:9395  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":9353:9366  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":9353:9380  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9368:9378  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":9353:9380  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9353:9391  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9382:9389  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":9353:9391  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9353:9395  _allowedValue[ msg.sender ][ spender ] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":9306:9509  if (subtractedValue >= oldValue) {... */\n      jump(tag_196)\n    tag_195:\n        /* \"contracts/sOHM.sol\":9467:9498  oldValue.sub( subtractedValue ) */\n      tag_197\n        /* \"contracts/sOHM.sol\":9481:9496  subtractedValue */\n      dup4\n        /* \"contracts/sOHM.sol\":9467:9475  oldValue */\n      dup3\n        /* \"contracts/sOHM.sol\":9467:9479  oldValue.sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":9467:9498  oldValue.sub( subtractedValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"contracts/sOHM.sol\":9426:9439  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":9426:9453  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9441:9451  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":9426:9453  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9426:9464  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9455:9462  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":9426:9464  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9426:9498  _allowedValue[ msg.sender ][ spender ] = oldValue.sub( subtractedValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":9306:9509  if (subtractedValue >= oldValue) {... */\n    tag_196:\n        /* \"contracts/sOHM.sol\":9545:9552  spender */\n      dup4\n        /* \"contracts/sOHM.sol\":9523:9594  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":9533:9543  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":9523:9594  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":9554:9567  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":9554:9581  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9569:9579  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":9554:9581  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9554:9592  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9583:9590  spender */\n      dup9\n        /* \"contracts/sOHM.sol\":9554:9592  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":9523:9594  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":9611:9615  true */\n      0x01\n        /* \"contracts/sOHM.sol\":9604:9615  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":9127:9622  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":7282:7640  function transfer( address to, uint256 value ) public override returns (bool) {... */\n    tag_112:\n        /* \"contracts/sOHM.sol\":7354:7358  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":7370:7386  uint256 gonValue */\n      dup1\n        /* \"contracts/sOHM.sol\":7389:7418  value.mul( _gonsPerFragment ) */\n      tag_199\n        /* \"contracts/sOHM.sol\":7400:7416  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":7389:7394  value */\n      dup5\n        /* \"contracts/sOHM.sol\":7389:7398  value.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":7389:7418  value.mul( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"contracts/sOHM.sol\":7370:7418  uint256 gonValue = value.mul( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":7457:7499  _gonBalances[ msg.sender ].sub( gonValue ) */\n      tag_200\n        /* \"contracts/sOHM.sol\":7489:7497  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":7457:7469  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":7457:7483  _gonBalances[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7471:7481  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":7457:7483  _gonBalances[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":7457:7487  _gonBalances[ msg.sender ].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":7457:7499  _gonBalances[ msg.sender ].sub( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/sOHM.sol\":7428:7440  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":7428:7454  _gonBalances[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7442:7452  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":7428:7454  _gonBalances[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7428:7499  _gonBalances[ msg.sender ] = _gonBalances[ msg.sender ].sub( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":7530:7564  _gonBalances[ to ].add( gonValue ) */\n      tag_201\n        /* \"contracts/sOHM.sol\":7554:7562  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":7530:7542  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":7530:7548  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7544:7546  to */\n      dup8\n        /* \"contracts/sOHM.sol\":7530:7548  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":7530:7552  _gonBalances[ to ].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":7530:7564  _gonBalances[ to ].add( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"contracts/sOHM.sol\":7509:7521  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":7509:7527  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7523:7525  to */\n      dup7\n        /* \"contracts/sOHM.sol\":7509:7527  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7509:7564  _gonBalances[ to ] = _gonBalances[ to ].add( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":7601:7603  to */\n      dup4\n        /* \"contracts/sOHM.sol\":7579:7612  Transfer( msg.sender, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":7589:7599  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":7579:7612  Transfer( msg.sender, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":7605:7610  value */\n      dup6\n        /* \"contracts/sOHM.sol\":7579:7612  Transfer( msg.sender, to, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":7629:7633  true */\n      0x01\n        /* \"contracts/sOHM.sol\":7622:7633  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":7282:7640  function transfer( address to, uint256 value ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":4045:4516  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n    tag_115:\n        /* \"contracts/sOHM.sol\":4112:4116  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":4152:4163  initializer */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":4138:4163  msg.sender == initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":4138:4148  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":4138:4163  msg.sender == initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":4129:4165  require( msg.sender == initializer ) */\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n        /* \"contracts/sOHM.sol\":4212:4213  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":4184:4214  stakingContract_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":4184:4200  stakingContract_ */\n      dup3\n        /* \"contracts/sOHM.sol\":4184:4214  stakingContract_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":4175:4216  require( stakingContract_ != address(0) ) */\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/sOHM.sol\":4244:4260  stakingContract_ */\n      dup2\n        /* \"contracts/sOHM.sol\":4226:4241  stakingContract */\n      0x0a\n      0x00\n        /* \"contracts/sOHM.sol\":4226:4260  stakingContract = stakingContract_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":3217:3232  5000000 * 10**9 */\n      0x11c37937e08000\n        /* \"contracts/sOHM.sol\":3157:3158  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":3148:3159  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":3465:3503  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      dup2\n      tag_205\n      jumpi\n      invalid\n    tag_205:\n      mod\n        /* \"contracts/sOHM.sol\":3157:3158  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":3148:3159  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":3450:3504  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      sub\n        /* \"contracts/sOHM.sol\":4270:4282  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":4270:4301  _gonBalances[ stakingContract ] */\n      0x00\n        /* \"contracts/sOHM.sol\":4284:4299  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":4270:4301  _gonBalances[ stakingContract ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":4270:4314  _gonBalances[ stakingContract ] = TOTAL_GONS */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":4354:4369  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":4330:4385  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":4348:4351  0x0 */\n      0x00\n        /* \"contracts/sOHM.sol\":4330:4385  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":4371:4383  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":4330:4385  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":4400:4445  LogStakingContractUpdated( stakingContract_ ) */\n      0x817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a1\n        /* \"contracts/sOHM.sol\":4427:4443  stakingContract_ */\n      dup3\n        /* \"contracts/sOHM.sol\":4400:4445  LogStakingContractUpdated( stakingContract_ ) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sOHM.sol\":4486:4487  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":4464:4475  initializer */\n      0x0b\n      0x00\n        /* \"contracts/sOHM.sol\":4464:4488  initializer = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":4505:4509  true */\n      0x01\n        /* \"contracts/sOHM.sol\":4498:4509  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":4045:4516  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20Permit.sol\":1072:1821  function permit(... */\n    tag_118:\n        /* \"contracts/types/ERC20Permit.sol\":1308:1316  deadline */\n      dup4\n        /* \"contracts/types/ERC20Permit.sol\":1289:1304  block.timestamp */\n      timestamp\n        /* \"contracts/types/ERC20Permit.sol\":1289:1316  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/types/ERC20Permit.sol\":1281:1345  require(block.timestamp <= deadline, \"Permit: expired deadline\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5065726d69743a206578706972656420646561646c696e650000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/types/ERC20Permit.sol\":1356:1374  bytes32 hashStruct */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":480:546  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/types/ERC20Permit.sol\":1410:1425  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"contracts/types/ERC20Permit.sol\":1427:1432  owner */\n      dup9\n        /* \"contracts/types/ERC20Permit.sol\":1434:1441  spender */\n      dup9\n        /* \"contracts/types/ERC20Permit.sol\":1443:1449  amount */\n      dup9\n        /* \"contracts/types/ERC20Permit.sol\":1451:1475  _nonces[owner].current() */\n      tag_208\n        /* \"contracts/types/ERC20Permit.sol\":1451:1458  _nonces */\n      0x06\n        /* \"contracts/types/ERC20Permit.sol\":1451:1465  _nonces[owner] */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1459:1464  owner */\n      dup15\n        /* \"contracts/types/ERC20Permit.sol\":1451:1465  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20Permit.sol\":1451:1473  _nonces[owner].current */\n      tag_186\n        /* \"contracts/types/ERC20Permit.sol\":1451:1475  _nonces[owner].current() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/types/ERC20Permit.sol\":1477:1485  deadline */\n      dup10\n        /* \"contracts/types/ERC20Permit.sol\":1399:1486  abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/types/ERC20Permit.sol\":1389:1487  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/types/ERC20Permit.sol\":1356:1487  bytes32 hashStruct =... */\n      swap1\n      pop\n        /* \"contracts/types/ERC20Permit.sol\":1498:1511  bytes32 _hash */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1548:1554  0x1901 */\n      0x1901\n        /* \"contracts/types/ERC20Permit.sol\":1557:1573  DOMAIN_SEPARATOR */\n      sload(0x07)\n        /* \"contracts/types/ERC20Permit.sol\":1575:1585  hashStruct */\n      dup4\n        /* \"contracts/types/ERC20Permit.sol\":1524:1586  abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      0xffff\n      and\n      0xf0\n      shl\n      dup2\n      mstore\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/types/ERC20Permit.sol\":1514:1587  keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/types/ERC20Permit.sol\":1498:1587  bytes32 _hash = keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct)) */\n      swap1\n      pop\n        /* \"contracts/types/ERC20Permit.sol\":1598:1612  address signer */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1615:1640  ecrecover(_hash, v, r, s) */\n      0x01\n        /* \"contracts/types/ERC20Permit.sol\":1625:1630  _hash */\n      dup3\n        /* \"contracts/types/ERC20Permit.sol\":1632:1633  v */\n      dup8\n        /* \"contracts/types/ERC20Permit.sol\":1635:1636  r */\n      dup8\n        /* \"contracts/types/ERC20Permit.sol\":1638:1639  s */\n      dup8\n        /* \"contracts/types/ERC20Permit.sol\":1615:1640  ecrecover(_hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/types/ERC20Permit.sol\":1598:1640  address signer = ecrecover(_hash, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/types/ERC20Permit.sol\":1676:1677  0 */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1658:1678  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20Permit.sol\":1658:1664  signer */\n      dup2\n        /* \"contracts/types/ERC20Permit.sol\":1658:1678  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/types/ERC20Permit.sol\":1658:1697  signer != address(0) && signer == owner */\n      dup1\n      iszero\n      tag_211\n      jumpi\n      pop\n        /* \"contracts/types/ERC20Permit.sol\":1692:1697  owner */\n      dup10\n        /* \"contracts/types/ERC20Permit.sol\":1682:1697  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20Permit.sol\":1682:1688  signer */\n      dup2\n        /* \"contracts/types/ERC20Permit.sol\":1682:1697  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/types/ERC20Permit.sol\":1658:1697  signer != address(0) && signer == owner */\n    tag_211:\n        /* \"contracts/types/ERC20Permit.sol\":1650:1735  require(signer != address(0) && signer == owner, \"ZeroSwapPermit: Invalid signature\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/types/ERC20Permit.sol\":1746:1772  _nonces[owner].increment() */\n      tag_213\n        /* \"contracts/types/ERC20Permit.sol\":1746:1753  _nonces */\n      0x06\n        /* \"contracts/types/ERC20Permit.sol\":1746:1760  _nonces[owner] */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1754:1759  owner */\n      dup13\n        /* \"contracts/types/ERC20Permit.sol\":1746:1760  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20Permit.sol\":1746:1770  _nonces[owner].increment */\n      tag_214\n        /* \"contracts/types/ERC20Permit.sol\":1746:1772  _nonces[owner].increment() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/types/ERC20Permit.sol\":1782:1814  _approve(owner, spender, amount) */\n      tag_215\n        /* \"contracts/types/ERC20Permit.sol\":1791:1796  owner */\n      dup11\n        /* \"contracts/types/ERC20Permit.sol\":1798:1805  spender */\n      dup11\n        /* \"contracts/types/ERC20Permit.sol\":1807:1813  amount */\n      dup11\n        /* \"contracts/types/ERC20Permit.sol\":1782:1790  _approve */\n      tag_216\n        /* \"contracts/types/ERC20Permit.sol\":1782:1814  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/types/ERC20Permit.sol\":1072:1821  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":7646:7799  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n    tag_121:\n        /* \"contracts/sOHM.sol\":7731:7738  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":7758:7771  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":7758:7781  _allowedValue[ owner_ ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7773:7779  owner_ */\n      dup5\n        /* \"contracts/sOHM.sol\":7758:7781  _allowedValue[ owner_ ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7758:7792  _allowedValue[ owner_ ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7783:7790  spender */\n      dup4\n        /* \"contracts/sOHM.sol\":7758:7792  _allowedValue[ owner_ ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":7751:7792  return _allowedValue[ owner_ ][ spender ] */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":7646:7799  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":2533:2563  address public stakingContract */\n    tag_123:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"contracts/libraries/SafeMath.sol\":1019:1026  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      tag_219\n        /* \"contracts/libraries/SafeMath.sol\":1049:1050  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1052:1053  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1045:1048  div */\n      tag_220\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_219:\n        /* \"contracts/libraries/SafeMath.sol\":1038:1084  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":714:955  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_135:\n        /* \"contracts/libraries/SafeMath.sol\":772:779  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":800:801  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":795:796  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":795:801  a == 0 */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":791:836  if (a == 0) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/libraries/SafeMath.sol\":824:825  0 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":817:825  return 0 */\n      swap1\n      pop\n      jump(tag_221)\n        /* \"contracts/libraries/SafeMath.sol\":791:836  if (a == 0) {... */\n    tag_222:\n        /* \"contracts/libraries/SafeMath.sol\":846:855  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":862:863  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":858:859  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":858:863  a * b */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":846:863  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":890:891  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":885:886  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":881:882  c */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":881:886  c / a */\n      dup2\n      tag_223\n      jumpi\n      invalid\n    tag_223:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":881:891  c / a == b */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":873:929  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/libraries/SafeMath.sol\":947:948  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":940:948  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":714:955  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_221:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":199:375  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_138:\n        /* \"contracts/libraries/SafeMath.sol\":257:264  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":276:285  uint256 c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":292:293  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":288:289  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":288:293  a + b */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":276:293  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":316:317  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":311:312  c */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":311:317  c >= a */\n      lt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":303:349  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/libraries/SafeMath.sol\":367:368  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":360:368  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":199:375  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":5919:6599  function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {... */\n    tag_143:\n        /* \"contracts/sOHM.sol\":6016:6020  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":6033:6051  uint rebasePercent */\n      dup1\n        /* \"contracts/sOHM.sol\":6054:6101  profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      tag_228\n        /* \"contracts/sOHM.sol\":6079:6099  previousCirculating_ */\n      dup6\n        /* \"contracts/sOHM.sol\":6054:6073  profit_.mul( 1e18 ) */\n      tag_229\n        /* \"contracts/sOHM.sol\":6067:6071  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sOHM.sol\":6054:6061  profit_ */\n      dup8\n        /* \"contracts/sOHM.sol\":6054:6065  profit_.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":6054:6073  profit_.mul( 1e18 ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/sOHM.sol\":6054:6077  profit_.mul( 1e18 ).div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":6054:6101  profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/sOHM.sol\":6033:6101  uint rebasePercent = profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":6112:6119  rebases */\n      0x0c\n        /* \"contracts/sOHM.sol\":6126:6437  Rebase ( {... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/sOHM.sol\":6156:6162  epoch_ */\n      dup6\n        /* \"contracts/sOHM.sol\":6126:6437  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":6184:6197  rebasePercent */\n      dup4\n        /* \"contracts/sOHM.sol\":6126:6437  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":6245:6265  previousCirculating_ */\n      dup8\n        /* \"contracts/sOHM.sol\":6126:6437  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":6297:6316  circulatingSupply() */\n      tag_230\n        /* \"contracts/sOHM.sol\":6297:6314  circulatingSupply */\n      tag_98\n        /* \"contracts/sOHM.sol\":6297:6316  circulatingSupply() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/sOHM.sol\":6126:6437  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":6345:6352  profit_ */\n      dup7\n        /* \"contracts/sOHM.sol\":6126:6437  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":6373:6380  index() */\n      tag_231\n        /* \"contracts/sOHM.sol\":6373:6378  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":6373:6380  index() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/sOHM.sol\":6126:6437  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":6414:6426  block.number */\n      number\n        /* \"contracts/sOHM.sol\":6126:6437  Rebase ( {... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/sOHM.sol\":6112:6438  rebases.push( Rebase ( {... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":6473:6479  epoch_ */\n      dup3\n        /* \"contracts/sOHM.sol\":6462:6512  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      0x917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da4\n        /* \"contracts/sOHM.sol\":6481:6496  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":6498:6510  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":6462:6512  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":6538:6544  epoch_ */\n      dup3\n        /* \"contracts/sOHM.sol\":6527:6570  LogRebase( epoch_, rebasePercent, index() ) */\n      0x6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2\n        /* \"contracts/sOHM.sol\":6546:6559  rebasePercent */\n      dup3\n        /* \"contracts/sOHM.sol\":6561:6568  index() */\n      tag_233\n        /* \"contracts/sOHM.sol\":6561:6566  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":6561:6568  index() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/sOHM.sol\":6527:6570  LogRebase( epoch_, rebasePercent, index() ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":6588:6592  true */\n      0x01\n        /* \"contracts/sOHM.sol\":6581:6592  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":5919:6599  function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":381:515  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_157:\n        /* \"contracts/libraries/SafeMath.sol\":439:446  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_235\n        /* \"contracts/libraries/SafeMath.sol\":469:470  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":472:473  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":465:468  sub */\n      tag_236\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_235:\n        /* \"contracts/libraries/SafeMath.sol\":458:508  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":381:515  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/Counters.sol\":532:644  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_186:\n        /* \"contracts/libraries/Counters.sol\":597:604  uint256 */\n      0x00\n        /* \"contracts/libraries/Counters.sol\":623:630  counter */\n      dup2\n        /* \"contracts/libraries/Counters.sol\":623:637  counter._value */\n      0x00\n      add\n      sload\n        /* \"contracts/libraries/Counters.sol\":616:637  return counter._value */\n      swap1\n      pop\n        /* \"contracts/libraries/Counters.sol\":532:644  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/libraries/Counters.sol\":650:828  function increment(Counter storage counter) internal {... */\n    tag_214:\n        /* \"contracts/libraries/Counters.sol\":820:821  1 */\n      0x01\n        /* \"contracts/libraries/Counters.sol\":802:809  counter */\n      dup2\n        /* \"contracts/libraries/Counters.sol\":802:816  counter._value */\n      0x00\n      add\n      0x00\n        /* \"contracts/libraries/Counters.sol\":802:821  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/libraries/Counters.sol\":650:828  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":8602:8797  function _approve( address owner, address spender, uint256 value ) internal override virtual {... */\n    tag_216:\n        /* \"contracts/sOHM.sol\":8737:8742  value */\n      dup1\n        /* \"contracts/sOHM.sol\":8705:8718  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":8705:8725  _allowedValue[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":8719:8724  owner */\n      dup6\n        /* \"contracts/sOHM.sol\":8705:8725  _allowedValue[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8705:8734  _allowedValue[owner][spender] */\n      0x00\n        /* \"contracts/sOHM.sol\":8726:8733  spender */\n      dup5\n        /* \"contracts/sOHM.sol\":8705:8734  _allowedValue[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8705:8742  _allowedValue[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":8774:8781  spender */\n      dup2\n        /* \"contracts/sOHM.sol\":8757:8790  Approval( owner, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":8767:8772  owner */\n      dup4\n        /* \"contracts/sOHM.sol\":8757:8790  Approval( owner, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":8783:8788  value */\n      dup4\n        /* \"contracts/sOHM.sol\":8757:8790  Approval( owner, spender, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":8602:8797  function _approve( address owner, address spender, uint256 value ) internal override virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_220:\n        /* \"contracts/libraries/SafeMath.sol\":1183:1190  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1214:1215  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":1210:1211  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1210:1215  b > 0 */\n      gt\n        /* \"contracts/libraries/SafeMath.sol\":1217:1229  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":1202:1230  require(b > 0, errorMessage) */\n      swap1\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_242:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_244\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_242)\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_245\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_245:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1240:1249  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1256:1257  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1252:1253  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1252:1257  a / b */\n      dup2\n      tag_246\n      jumpi\n      invalid\n    tag_246:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":1240:1257  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1291:1292  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1287:1288  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1287:1292  a % b */\n      dup2\n      tag_247\n      jumpi\n      invalid\n    tag_247:\n      mod\n        /* \"contracts/libraries/SafeMath.sol\":1283:1284  c */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":1279:1280  b */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1279:1284  b * c */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":1279:1292  b * c + a % b */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":1274:1275  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1274:1292  a == b * c + a % b */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":1267:1293  assert(a == b * c + a % b) */\n      tag_248\n      jumpi\n      invalid\n    tag_248:\n        /* \"contracts/libraries/SafeMath.sol\":1358:1359  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":1351:1359  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":521:708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_236:\n        /* \"contracts/libraries/SafeMath.sol\":607:614  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":639:640  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":634:635  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":634:640  b <= a */\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":642:654  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":626:655  require(b <= a, errorMessage) */\n      swap1\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_251:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_253\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_251)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_254:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":665:674  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":681:682  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":677:678  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":677:682  a - b */\n      sub\n        /* \"contracts/libraries/SafeMath.sol\":665:682  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":700:701  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":693:701  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":521:708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n    data_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee 5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa26469706673582212203755e0dc73a5551ac490d90c8a80ae81bf369634d20e56a9bcf2da6b44fae5f364736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600e81526020017f5374616b6564204f6c796d7075730000000000000000000000000000000000008152506040518060400160405280600481526020017f734f484d000000000000000000000000000000000000000000000000000000008152506009826003908051906020019062000098929190620004d2565b508160049080519060200190620000b1929190620004d2565b5080600560006101000a81548160ff021916908360ff16021790555050505060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f62000106620002f760201b60201c565b805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001206007819055505033600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a333600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e08000600281905550620002eb6002546611c37937e0800060001981620002d257fe5b06600019036200039d60201b620026f21790919060201c565b600e8190555062000588565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620003935780601f10620003675761010080835404028352916020019162000393565b820191906000526020600020905b8154815290600101906020018083116200037557829003601f168201915b5050505050905090565b6000620003e783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620003ef60201b60201c565b905092915050565b600080831182906200049f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200046357808201518184015260208101905062000446565b50505050905090810190601f168015620004915780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581620004ac57fe5b049050838581620004b957fe5b06818502018514620004c757fe5b809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200050a576000855562000556565b82601f106200052557805160ff191683800117855562000556565b8280016001018555821562000556579182015b828111156200055557825182559160200191906001019062000538565b5b50905062000565919062000569565b5090565b5b80821115620005845760008160009055506001016200056a565b5090565b612d7a80620005986000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063481c6a751161010457806395d89b41116100a2578063c4d66de811610071578063c4d66de8146108be578063d505accf14610918578063dd62ed3e146109b1578063ee99205c14610a29576101da565b806395d89b411461073f5780639ce110d7146107c2578063a457c2d7146107f6578063a9059cbb1461085a576101da565b806373c69eb7116100de57806373c69eb71461061b5780637965d56d146106875780637ecebe00146106c95780639358928b14610721576101da565b8063481c6a75146105855780635a96ac0a146105b957806370a08231146105c3576101da565b80632986c0e51161017c5780633644e5151161014b5780633644e5151461047b578063395093511461049957806340a5737f146104fd57806346f68ee914610541576101da565b80632986c0e5146104005780632df75cb11461041e57806330adf81f1461043c578063313ce5671461045a576101da565b8063095ea7b3116101b8578063095ea7b3146102b857806318160ddd1461031c5780631bd396741461033a57806323b872dd1461037c576101da565b8063058ecdb4146101df57806306fdde031461022b578063089208d8146102ae575b600080fd5b610215600480360360408110156101f557600080fd5b810190808035906020019092919080359060200190929190505050610a5d565b6040518082815260200191505060405180910390f35b610233610c40565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610273578082015181840152602081019050610258565b50505050905090810190601f1680156102a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b6610ce2565b005b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e66565b60405180821515815260200191505060405180910390f35b610324610f58565b6040518082815260200191505060405180910390f35b6103666004803603602081101561035057600080fd5b8101908080359060200190929190505050610f62565b6040518082815260200191505060405180910390f35b6103e86004803603606081101561039257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f80565b60405180821515815260200191505060405180910390f35b61040861131a565b6040518082815260200191505060405180910390f35b61042661132c565b6040518082815260200191505060405180910390f35b610444611332565b6040518082815260200191505060405180910390f35b610462611359565b604051808260ff16815260200191505060405180910390f35b610483611370565b6040518082815260200191505060405180910390f35b6104e5600480360360408110156104af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611376565b60405180821515815260200191505060405180910390f35b6105296004803603602081101561051357600080fd5b8101908080359060200190929190505050611572565b60405180821515815260200191505060405180910390f35b6105836004803603602081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165e565b005b61058d611867565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105c1611891565b005b610605600480360360208110156105d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3a565b6040518082815260200191505060405180910390f35b6106476004803603602081101561063157600080fd5b8101908080359060200190929190505050611a97565b6040518088815260200187815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b6106b36004803603602081101561069d57600080fd5b8101908080359060200190929190505050611ae9565b6040518082815260200191505060405180910390f35b61070b600480360360208110156106df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b07565b6040518082815260200191505060405180910390f35b610729611b57565b6040518082815260200191505060405180910390f35b610747611b9d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078757808201518184015260208101905061076c565b50505050905090810190601f1680156107b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107ca611c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108426004803603604081101561080c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c65565b60405180821515815260200191505060405180910390f35b6108a66004803603604081101561087057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ef5565b60405180821515815260200191505060405180910390f35b610900600480360360208110156108d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120a9565b60405180821515815260200191505060405180910390f35b6109af600480360360e081101561092e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061231e565b005b610a13600480360360408110156109c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612645565b6040518082815260200191505060405180910390f35b610a316126cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab957600080fd5b600080610ac4611b57565b90506000851415610b6557837f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb26000610b3d61131a565b604051808381526020018281526020019250505060405180910390a260025492505050610c3a565b6000811115610b9c57610b9581610b876002548861273c90919063ffffffff16565b6126f290919063ffffffff16565b9150610ba0565b8491505b610bb5826002546127c290919063ffffffff16565b6002819055506000196fffffffffffffffffffffffffffffffff166002541115610bf5576000196fffffffffffffffffffffffffffffffff166002819055505b610c206002546611c37937e0800060001981610c0d57fe5b06600019036126f290919063ffffffff16565b600e81905550610c3181868661284a565b50600254925050505b92915050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cd85780601f10610cad57610100808354040283529160200191610cd8565b820191906000526020600020905b815481529060010190602001808311610cbb57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000610f79600e548361273c90919063ffffffff16565b9050919050565b600061101182601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b601060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600061117d83610f62565b90506111d181600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b6000611327600d54611ae9565b905090565b600d5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b6000600560009054906101000a900460ff16905090565b60075481565b600061140782601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611637576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600d541461164657600080fd5b61164f82610f62565b600d8190555060019050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cbb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611937576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ce16022913960400191505060405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611a90600e54600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126f290919063ffffffff16565b9050919050565b600c8181548110611aa757600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6000611b00600e54836126f290919063ffffffff16565b9050919050565b6000611b50600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b9050919050565b6000611b98611b87600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a3a565b6002546129c590919063ffffffff16565b905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c355780601f10611c0a57610100808354040283529160200191611c35565b820191906000526020600020905b815481529060010190602001808311611c1857829003601f168201915b5050505050905090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310611d75576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e09565b611d8883826129c590919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600080611f0d600e548461273c90919063ffffffff16565b9050611f6181600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ff681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461210557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561213f57600080fd5b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e080006000198161219257fe5b0660001903600f6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a37f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a182604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b83421115612394576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5065726d69743a206578706972656420646561646c696e65000000000000000081525060200191505060405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b888888612404600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061190160075483604051602001808461ffff1660f01b81526002018381526020018281526020019350505050604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561251e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561259257508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6125e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d036021913960400191505060405180910390fd5b61262e600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a1d565b6126398a8a8a612a33565b50505050505050505050565b6000601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061273483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b1e565b905092915050565b60008083141561274f57600090506127bc565b600082840290508284828161276057fe5b04146127b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d246021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015612840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008061287a8561286c670de0b6b3a76400008761273c90919063ffffffff16565b6126f290919063ffffffff16565b9050600c6040518060e001604052808581526020018381526020018781526020016128a3611b57565b81526020018681526020016128b661131a565b8152602001438152509080600181540180825580915050600190039060005260206000209060070201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050827f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2827f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb28261299d61131a565b604051808381526020018281526020019250505060405180910390a260019150509392505050565b6000612a0783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612bfa565b905092915050565b600081600001549050919050565b6001816000016000828254019250508190555050565b80601060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008083118290612bca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b8f578082015181840152602081019050612b74565b50505050905090810190601f168015612bbc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612bd657fe5b049050838581612be257fe5b06818502018514612bef57fe5b809150509392505050565b6000838311158290612ca7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c6c578082015181840152602081019050612c51565b50505050905090810190601f168015612c995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212203755e0dc73a5551ac490d90c8a80ae81bf369634d20e56a9bcf2da6b44fae5f364736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616B6564204F6C796D707573000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x734F484D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x98 SWAP3 SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xB1 SWAP3 SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH1 0x0 CHAINID SWAP1 POP PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH3 0x106 PUSH3 0x2F7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP CALLER PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x2EB PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH3 0x2D2 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH3 0x39D PUSH1 0x20 SHL PUSH3 0x26F2 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH3 0x588 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH3 0x393 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x367 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x375 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3E7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH3 0x3EF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH3 0x49F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x463 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x446 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x491 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH3 0x4AC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH3 0x4B9 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH3 0x4C7 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x50A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x556 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x525 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x556 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x556 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x555 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x538 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x565 SWAP2 SWAP1 PUSH3 0x569 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x584 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x56A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2D7A DUP1 PUSH3 0x598 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x918 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xA29 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0x9CE110D7 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x85A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x73C69EB7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x73C69EB7 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x7965D56D EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x721 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5C3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x40A5737F EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x541 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x2DF75CB1 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x45A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x1BD39674 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x58ECDB4 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x258 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58D PUSH2 0x1867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0x1891 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x729 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7CA PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x842 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x900 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x231E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA31 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC4 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0xB65 JUMPI DUP4 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 PUSH1 0x0 PUSH2 0xB3D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD SWAP3 POP POP POP PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB95 DUP2 PUSH2 0xB87 PUSH1 0x2 SLOAD DUP9 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xBA0 JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST PUSH2 0xBB5 DUP3 PUSH1 0x2 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xC20 PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0xC0D JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xC31 DUP2 DUP7 DUP7 PUSH2 0x284A JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF79 PUSH1 0xE SLOAD DUP4 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 DUP3 PUSH1 0x10 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH2 0x117D DUP4 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D1 DUP2 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1266 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 PUSH1 0xD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD EQ PUSH2 0x1646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164F DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CBB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CE1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 PUSH1 0xE SLOAD PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH1 0xE SLOAD DUP4 PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH2 0x1B87 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1C35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 LT PUSH2 0x1D75 JUMPI PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1D88 DUP4 DUP3 PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F0D PUSH1 0xE SLOAD DUP5 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1F61 DUP2 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1FF6 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x213F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0x2192 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH1 0xF PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x2394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A206578706972656420646561646C696E650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP9 DUP9 DUP9 PUSH2 0x2404 PUSH1 0x6 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1901 PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x251E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2592 JUMPI POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D03 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x262E PUSH1 0x6 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x2639 DUP11 DUP11 DUP11 PUSH2 0x2A33 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2734 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2B1E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x274F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2760 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x27B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D24 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x287A DUP6 PUSH2 0x286C PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28A3 PUSH2 0x1B57 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28B6 PUSH2 0x131A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP DUP3 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 DUP3 PUSH2 0x299D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A07 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x10 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2BCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B8F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B74 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BBC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2BD6 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x2BE2 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x2BEF JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2CA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C6C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C51 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C99 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0x5A65726F537761705065726D69 PUSH21 0x3A20496E76616C6964207369676E61747572655361 PUSH7 0x654D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 CALLDATACOPY SSTORE 0xE0 0xDC PUSH20 0xA5551AC490D90C8A80AE81BF369634D20E56A9BC CALLCODE 0xDA PUSH12 0x44FAE5F364736F6C63430007 SDIV STOP CALLER ",
							"sourceMap": "2346:7278:5:-:0;;;3829:210;;;;;;;;;;1058:148:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:1:5;1146:5:6;1138;:13;;;;;;;;;;;;:::i;:::-;;1167:7;1157;:17;;;;;;;;;;;;:::i;:::-;;1192:9;1180;;:21;;;;;;;;;;;;;;;;;;1058:148;;;616:15:7;675:9;664:20;;757:95;882:6;:4;;;:6;;:::i;:::-;866:24;;;;;;914:10;;;;;;;;;;;;;;;;;904:21;;;;;;950:7;979:4;733:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:272;;;;;;704:16;:291;;;;591:411;1403:10:5;1394:6;;:19;;;;;;;;;;;;;;;;;;1457:6;;;;;;;;;;;1428:37;;1453:1;1428:37;;;;;;;;;;;;3916:10:::2;3902:11;;:24;;;;;;;;;;;;;;;;;;3217:15;3936:12;:39;;;;4004:28;4019:12;;3217:15;3157:1;3148:11;3465:38;;;;;;3157:1;3148:11;3450:54;4004:14;;;;;;:28;;;;:::i;:::-;3985:16;:47;;;;2346:7278:::0;;1286:75:6;1323:13;1351:5;1344:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1286:75;:::o;961:130:4:-;1019:7;1045:39;1049:1;1052;1045:39;;;;;;;;;;;;;;;;;:3;;;:39;;:::i;:::-;1038:46;;961:130;;;;:::o;1097:269::-;1183:7;1214:1;1210;:5;1217:12;1202:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:9;1256:1;1252;:5;;;;;;1240:17;;1291:1;1287;:5;;;;;;1283:1;1279;:5;:13;1274:1;:18;1267:26;;;;1358:1;1351:8;;;1097:269;;;;;:::o;2346:7278:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101da5760003560e01c8063481c6a751161010457806395d89b41116100a2578063c4d66de811610071578063c4d66de8146108be578063d505accf14610918578063dd62ed3e146109b1578063ee99205c14610a29576101da565b806395d89b411461073f5780639ce110d7146107c2578063a457c2d7146107f6578063a9059cbb1461085a576101da565b806373c69eb7116100de57806373c69eb71461061b5780637965d56d146106875780637ecebe00146106c95780639358928b14610721576101da565b8063481c6a75146105855780635a96ac0a146105b957806370a08231146105c3576101da565b80632986c0e51161017c5780633644e5151161014b5780633644e5151461047b578063395093511461049957806340a5737f146104fd57806346f68ee914610541576101da565b80632986c0e5146104005780632df75cb11461041e57806330adf81f1461043c578063313ce5671461045a576101da565b8063095ea7b3116101b8578063095ea7b3146102b857806318160ddd1461031c5780631bd396741461033a57806323b872dd1461037c576101da565b8063058ecdb4146101df57806306fdde031461022b578063089208d8146102ae575b600080fd5b610215600480360360408110156101f557600080fd5b810190808035906020019092919080359060200190929190505050610a5d565b6040518082815260200191505060405180910390f35b610233610c40565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610273578082015181840152602081019050610258565b50505050905090810190601f1680156102a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b6610ce2565b005b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e66565b60405180821515815260200191505060405180910390f35b610324610f58565b6040518082815260200191505060405180910390f35b6103666004803603602081101561035057600080fd5b8101908080359060200190929190505050610f62565b6040518082815260200191505060405180910390f35b6103e86004803603606081101561039257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f80565b60405180821515815260200191505060405180910390f35b61040861131a565b6040518082815260200191505060405180910390f35b61042661132c565b6040518082815260200191505060405180910390f35b610444611332565b6040518082815260200191505060405180910390f35b610462611359565b604051808260ff16815260200191505060405180910390f35b610483611370565b6040518082815260200191505060405180910390f35b6104e5600480360360408110156104af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611376565b60405180821515815260200191505060405180910390f35b6105296004803603602081101561051357600080fd5b8101908080359060200190929190505050611572565b60405180821515815260200191505060405180910390f35b6105836004803603602081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165e565b005b61058d611867565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105c1611891565b005b610605600480360360208110156105d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3a565b6040518082815260200191505060405180910390f35b6106476004803603602081101561063157600080fd5b8101908080359060200190929190505050611a97565b6040518088815260200187815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b6106b36004803603602081101561069d57600080fd5b8101908080359060200190929190505050611ae9565b6040518082815260200191505060405180910390f35b61070b600480360360208110156106df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b07565b6040518082815260200191505060405180910390f35b610729611b57565b6040518082815260200191505060405180910390f35b610747611b9d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078757808201518184015260208101905061076c565b50505050905090810190601f1680156107b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107ca611c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108426004803603604081101561080c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c65565b60405180821515815260200191505060405180910390f35b6108a66004803603604081101561087057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ef5565b60405180821515815260200191505060405180910390f35b610900600480360360208110156108d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120a9565b60405180821515815260200191505060405180910390f35b6109af600480360360e081101561092e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061231e565b005b610a13600480360360408110156109c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612645565b6040518082815260200191505060405180910390f35b610a316126cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab957600080fd5b600080610ac4611b57565b90506000851415610b6557837f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb26000610b3d61131a565b604051808381526020018281526020019250505060405180910390a260025492505050610c3a565b6000811115610b9c57610b9581610b876002548861273c90919063ffffffff16565b6126f290919063ffffffff16565b9150610ba0565b8491505b610bb5826002546127c290919063ffffffff16565b6002819055506000196fffffffffffffffffffffffffffffffff166002541115610bf5576000196fffffffffffffffffffffffffffffffff166002819055505b610c206002546611c37937e0800060001981610c0d57fe5b06600019036126f290919063ffffffff16565b600e81905550610c3181868661284a565b50600254925050505b92915050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cd85780601f10610cad57610100808354040283529160200191610cd8565b820191906000526020600020905b815481529060010190602001808311610cbb57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000610f79600e548361273c90919063ffffffff16565b9050919050565b600061101182601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b601060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600061117d83610f62565b90506111d181600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b6000611327600d54611ae9565b905090565b600d5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b6000600560009054906101000a900460ff16905090565b60075481565b600061140782601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611637576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600d541461164657600080fd5b61164f82610f62565b600d8190555060019050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cbb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611937576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ce16022913960400191505060405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611a90600e54600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126f290919063ffffffff16565b9050919050565b600c8181548110611aa757600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6000611b00600e54836126f290919063ffffffff16565b9050919050565b6000611b50600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b9050919050565b6000611b98611b87600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a3a565b6002546129c590919063ffffffff16565b905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c355780601f10611c0a57610100808354040283529160200191611c35565b820191906000526020600020905b815481529060010190602001808311611c1857829003601f168201915b5050505050905090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310611d75576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e09565b611d8883826129c590919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600080611f0d600e548461273c90919063ffffffff16565b9050611f6181600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ff681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461210557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561213f57600080fd5b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e080006000198161219257fe5b0660001903600f6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a37f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a182604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b83421115612394576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5065726d69743a206578706972656420646561646c696e65000000000000000081525060200191505060405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b888888612404600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061190160075483604051602001808461ffff1660f01b81526002018381526020018281526020019350505050604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561251e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561259257508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6125e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d036021913960400191505060405180910390fd5b61262e600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a1d565b6126398a8a8a612a33565b50505050505050505050565b6000601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061273483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b1e565b905092915050565b60008083141561274f57600090506127bc565b600082840290508284828161276057fe5b04146127b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d246021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015612840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008061287a8561286c670de0b6b3a76400008761273c90919063ffffffff16565b6126f290919063ffffffff16565b9050600c6040518060e001604052808581526020018381526020018781526020016128a3611b57565b81526020018681526020016128b661131a565b8152602001438152509080600181540180825580915050600190039060005260206000209060070201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050827f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2827f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb28261299d61131a565b604051808381526020018281526020019250505060405180910390a260019150509392505050565b6000612a0783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612bfa565b905092915050565b600081600001549050919050565b6001816000016000828254019250508190555050565b80601060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008083118290612bca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b8f578082015181840152602081019050612b74565b50505050905090810190601f168015612bbc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612bd657fe5b049050838581612be257fe5b06818502018514612bef57fe5b809150509392505050565b6000838311158290612ca7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c6c578082015181840152602081019050612c51565b50505050905090810190601f168015612c995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212203755e0dc73a5551ac490d90c8a80ae81bf369634d20e56a9bcf2da6b44fae5f364736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x918 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xA29 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0x9CE110D7 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x85A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x73C69EB7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x73C69EB7 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x7965D56D EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x721 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5C3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x40A5737F EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x541 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x2DF75CB1 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x45A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x1BD39674 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x58ECDB4 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x258 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58D PUSH2 0x1867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0x1891 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x729 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7CA PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x842 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x900 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x231E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA31 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC4 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0xB65 JUMPI DUP4 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 PUSH1 0x0 PUSH2 0xB3D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD SWAP3 POP POP POP PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB95 DUP2 PUSH2 0xB87 PUSH1 0x2 SLOAD DUP9 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xBA0 JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST PUSH2 0xBB5 DUP3 PUSH1 0x2 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xC20 PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0xC0D JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xC31 DUP2 DUP7 DUP7 PUSH2 0x284A JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF79 PUSH1 0xE SLOAD DUP4 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 DUP3 PUSH1 0x10 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH2 0x117D DUP4 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D1 DUP2 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1266 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 PUSH1 0xD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD EQ PUSH2 0x1646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164F DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CBB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CE1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 PUSH1 0xE SLOAD PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH1 0xE SLOAD DUP4 PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH2 0x1B87 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1C35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 LT PUSH2 0x1D75 JUMPI PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1D88 DUP4 DUP3 PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F0D PUSH1 0xE SLOAD DUP5 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1F61 DUP2 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1FF6 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x213F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0x2192 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH1 0xF PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x2394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A206578706972656420646561646C696E650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP9 DUP9 DUP9 PUSH2 0x2404 PUSH1 0x6 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1901 PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x251E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2592 JUMPI POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D03 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x262E PUSH1 0x6 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x2639 DUP11 DUP11 DUP11 PUSH2 0x2A33 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2734 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2B1E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x274F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2760 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x27B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D24 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x287A DUP6 PUSH2 0x286C PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28A3 PUSH2 0x1B57 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28B6 PUSH2 0x131A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP DUP3 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 DUP3 PUSH2 0x299D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A07 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x10 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2BCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B8F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B74 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BBC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2BD6 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x2BE2 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x2BEF JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2CA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C6C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C51 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C99 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0x5A65726F537761705065726D69 PUSH21 0x3A20496E76616C6964207369676E61747572655361 PUSH7 0x654D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 CALLDATACOPY SSTORE 0xE0 0xDC PUSH20 0xA5551AC490D90C8A80AE81BF369634D20E56A9BC CALLCODE 0xDA PUSH12 0x44FAE5F364736F6C63430007 SDIV STOP CALLER ",
							"sourceMap": "2346:7278:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4860:869;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1286:75:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1696:156:5;;;:::i;:::-;;8338:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2334:92:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6753:122:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7805:527;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7183:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3085:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;438:108:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2184:75:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;553:31:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8803:318:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4522:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1858:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1478:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2125:217;;;:::i;:::-;;6605:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3055:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6881:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1884::7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7047:130:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1487:79:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2569:26:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9127:495;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7282:358;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4045:471;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1072:749:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7646:153:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2533:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4860:869;4947:7;2492:15;;;;;;;;;;;2478:29;;:10;:29;;;2469:40;;;;;;4967:20:::1;4997:26:::0;5026:19:::1;:17;:19::i;:::-;4997:48;;5072:1;5061:7;:12;5056:364;;;5106:6;5095:50;5114:15;5131:12;;5095:50;;;;;;;;;;;;;;;;;;;;;;;;5175:6;5164:31;5183:1;5186:7;:5;:7::i;:::-;5164:31;;;;;;;;;;;;;;;;;;;;;;;;5216:12;;5209:19;;;;;;5056:364;5271:1;5250:18;:22;5245:175;;;5303:53;5336:18;5303:27;5316:12;;5303:7;:11;;:27;;;;:::i;:::-;:31;;:53;;;;:::i;:::-;5288:68;;5245:175;;;5402:7;5387:22;;5245:175;5445:32;5463:12;5445;;:16;;:32;;;;:::i;:::-;5430:12;:47;;;;3629:1;3620:11;5508:10;;5493:12;;:25;5488:83;;;3629:1;3620:11;5550:10;;5535:12;:25;;;;5488:83;5600:30;5616:12;;3217:15;3157:1;3148:11;3465:38;;;;;;3157:1;3148:11;3450:54;5600:14;;:30;;;;:::i;:::-;5581:16;:49;;;;5641:51;5655:18;5675:7;5684:6;5641:12;:51::i;:::-;;5710:12;;5703:19;;;;2519:1;4860:869:::0;;;;:::o;1286:75:6:-;1323:13;1351:5;1344:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1286:75;:::o;1696:156:5:-;1624:10;1614:20;;:6;;;;;;;;;;;:20;;;1605:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:::1;1779:37;;1796:6;;;;;;;;;;;1779:37;;;;;;;;;;;;1843:1;1826:6;;:19;;;;;;;;;;;;;;;;;;1696:156::o:0;8338:222::-;8414:4;8472:5;8431:13;:27;8446:10;8431:27;;;;;;;;;;;;;;;:38;8460:7;8431:38;;;;;;;;;;;;;;;:46;;;;8515:7;8493:38;;8503:10;8493:38;;;8524:5;8493:38;;;;;;;;;;;;;;;;;;8549:4;8542:11;;8338:222;;;;:::o;2334:92:6:-;2387:7;2409:12;;2402:19;;2334:92;:::o;6753:122:5:-;6814:4;6838:30;6850:16;;6838:6;:10;;:30;;;;:::i;:::-;6831:37;;6753:122;;;:::o;7805:527::-;7896:4;7950:48;7991:5;7950:13;:21;7965:4;7950:21;;;;;;;;;;;;;;;:35;7973:10;7950:35;;;;;;;;;;;;;;;;:39;;:48;;;;:::i;:::-;7912:13;:21;7927:4;7912:21;;;;;;;;;;;;;;;:35;7935:10;7912:35;;;;;;;;;;;;;;;:86;;;;8028:10;8012:66;;8022:4;8012:66;;;8041:13;:21;8056:4;8041:21;;;;;;;;;;;;;;;:35;8064:10;8041:35;;;;;;;;;;;;;;;;8012:66;;;;;;;;;;;;;;;;;;8089:16;8108:23;8124:5;8108:14;:23::i;:::-;8089:42;;8164:34;8188:8;8164:12;:18;8177:4;8164:18;;;;;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;8141:12;:20;8155:4;8141:20;;;;;;;;;;;;;;;:57;;;;8229:32;8251:8;8229:12;:16;8242:2;8229:16;;;;;;;;;;;;;;;;:20;;:32;;;;:::i;:::-;8208:12;:18;8222:2;8208:18;;;;;;;;;;;;;;;:53;;;;8292:2;8276:27;;8286:4;8276:27;;;8296:5;8276:27;;;;;;;;;;;;;;;;;;8321:4;8314:11;;;7805:527;;;;;:::o;7183:93::-;7222:4;7246:23;7262:5;;7246:14;:23::i;:::-;7239:30;;7183:93;:::o;3085:17::-;;;;:::o;438:108:7:-;480:66;438:108;;;:::o;2184:75:6:-;2225:5;2245:9;;;;;;;;;;;2238:16;;2184:75;:::o;553:31:7:-;;;;:::o;8803:318:5:-;8894:4;8951:56;8995:10;8951:13;:27;8966:10;8951:27;;;;;;;;;;;;;;;:38;8980:7;8951:38;;;;;;;;;;;;;;;;:42;;:56;;;;:::i;:::-;8910:13;:27;8925:10;8910:27;;;;;;;;;;;;;;;:38;8939:7;8910:38;;;;;;;;;;;;;;;:97;;;;9044:7;9022:71;;9032:10;9022:71;;;9053:13;:27;9068:10;9053:27;;;;;;;;;;;;;;;:38;9082:7;9053:38;;;;;;;;;;;;;;;;9022:71;;;;;;;;;;;;;;;;;;9110:4;9103:11;;8803:318;;;;:::o;4522:174::-;4588:4;1624:10;1614:20;;:6;;;;;;;;;;;:20;;;1605:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4623:1:::1;4614:5;;:10;4605:21;;;::::0;::::1;;4644:24;4660:6;4644:14;:24::i;:::-;4636:5;:32;;;;4685:4;4678:11;;4522:174:::0;;;:::o;1858:257::-;1624:10;1614:20;;:6;;;;;;;;;;;:20;;;1605:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:1:::1;1960:23;;:9;:23;;;;1951:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2066:9;2041:36;;2058:6;;;;;;;;;;;2041:36;;;;;;;;;;;;2099:9;2087;;:21;;;;;;;;;;;;;;;;;;1858:257:::0;:::o;1478:88::-;1527:7;1553:6;;;;;;;;;;;1546:13;;1478:88;:::o;2125:217::-;2208:9;;;;;;;;;;;2194:23;;:10;:23;;;2185:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2296:9;;;;;;;;;;;2271:36;;2288:6;;;;;;;;;;;2271:36;;;;;;;;;;;;2326:9;;;;;;;;;;;2317:6;;:18;;;;;;;;;;;;;;;;;;2125:217::o;6605:142::-;6670:7;6697:43;6722:16;;6697:12;:19;6711:3;6697:19;;;;;;;;;;;;;;;;:23;;:43;;;;:::i;:::-;6690:50;;6605:142;;;:::o;3055:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6881:118::-;6940:4;6964:28;6974:16;;6964:4;:8;;:28;;;;:::i;:::-;6957:35;;6881:118;;;:::o;1884::7:-;1945:7;1971:24;:7;:14;1979:5;1971:14;;;;;;;;;;;;;;;:22;:24::i;:::-;1964:31;;1884:118;;;:::o;7047:130:5:-;7098:4;7122:48;7140:28;7151:15;;;;;;;;;;;7140:9;:28::i;:::-;7122:12;;:16;;:48;;;;:::i;:::-;7115:55;;7047:130;:::o;1487:79:6:-;1526:13;1554:7;1547:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:79;:::o;2569:26:5:-;;;;;;;;;;;;;:::o;9127:495::-;9223:4;9239:16;9258:13;:27;9273:10;9258:27;;;;;;;;;;;;;;;:38;9287:7;9258:38;;;;;;;;;;;;;;;;9239:57;;9329:8;9310:15;:27;9306:203;;9394:1;9353:13;:27;9368:10;9353:27;;;;;;;;;;;;;;;:38;9382:7;9353:38;;;;;;;;;;;;;;;:42;;;;9306:203;;;9467:31;9481:15;9467:8;:12;;:31;;;;:::i;:::-;9426:13;:27;9441:10;9426:27;;;;;;;;;;;;;;;:38;9455:7;9426:38;;;;;;;;;;;;;;;:72;;;;9306:203;9545:7;9523:71;;9533:10;9523:71;;;9554:13;:27;9569:10;9554:27;;;;;;;;;;;;;;;:38;9583:7;9554:38;;;;;;;;;;;;;;;;9523:71;;;;;;;;;;;;;;;;;;9611:4;9604:11;;;9127:495;;;;:::o;7282:358::-;7354:4;7370:16;7389:29;7400:16;;7389:5;:9;;:29;;;;:::i;:::-;7370:48;;7457:42;7489:8;7457:12;:26;7471:10;7457:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;7428:12;:26;7442:10;7428:26;;;;;;;;;;;;;;;:71;;;;7530:34;7554:8;7530:12;:18;7544:2;7530:18;;;;;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;7509:12;:18;7523:2;7509:18;;;;;;;;;;;;;;;:55;;;;7601:2;7579:33;;7589:10;7579:33;;;7605:5;7579:33;;;;;;;;;;;;;;;;;;7629:4;7622:11;;;7282:358;;;;:::o;4045:471::-;4112:4;4152:11;;;;;;;;;;;4138:25;;:10;:25;;;4129:36;;;;;;4212:1;4184:30;;:16;:30;;;;4175:41;;;;;;4244:16;4226:15;;:34;;;;;;;;;;;;;;;;;;3217:15;3157:1;3148:11;3465:38;;;;;;3157:1;3148:11;3450:54;4270:12;:31;4284:15;;;;;;;;;;;4270:31;;;;;;;;;;;;;;;:44;;;;4354:15;;;;;;;;;;;4330:55;;4348:3;4330:55;;;4371:12;;4330:55;;;;;;;;;;;;;;;;;;4400:45;4427:16;4400:45;;;;;;;;;;;;;;;;;;;;4486:1;4464:11;;:24;;;;;;;;;;;;;;;;;;4505:4;4498:11;;4045:471;;;:::o;1072:749:7:-;1308:8;1289:15;:27;;1281:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1356:18;480:66;1410:15;;1427:5;1434:7;1443:6;1451:24;:7;:14;1459:5;1451:14;;;;;;;;;;;;;;;:22;:24::i;:::-;1477:8;1399:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1389:98;;;;;;1356:131;;1498:13;1548:6;1557:16;;1575:10;1524:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1514:73;;;;;;1498:89;;1598:14;1615:25;1625:5;1632:1;1635;1638;1615:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1598:42;;1676:1;1658:20;;:6;:20;;;;:39;;;;;1692:5;1682:15;;:6;:15;;;1658:39;1650:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:26;:7;:14;1754:5;1746:14;;;;;;;;;;;;;;;:24;:26::i;:::-;1782:32;1791:5;1798:7;1807:6;1782:8;:32::i;:::-;1072:749;;;;;;;;;;:::o;7646:153:5:-;7731:7;7758:13;:23;7773:6;7758:23;;;;;;;;;;;;;;;:34;7783:7;7758:34;;;;;;;;;;;;;;;;7751:41;;7646:153;;;;:::o;2533:30::-;;;;;;;;;;;;;:::o;961:130:4:-;1019:7;1045:39;1049:1;1052;1045:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;1038:46;;961:130;;;;:::o;714:241::-;772:7;800:1;795;:6;791:45;;;824:1;817:8;;;;791:45;846:9;862:1;858;:5;846:17;;890:1;885;881;:5;;;;;;:10;873:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:1;940:8;;;714:241;;;;;:::o;199:176::-;257:7;276:9;292:1;288;:5;276:17;;316:1;311;:6;;303:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;367:1;360:8;;;199:176;;;;:::o;5919:680:5:-;6016:4;6033:18;6054:47;6079:20;6054:19;6067:4;6054:7;:11;;:19;;;;:::i;:::-;:23;;:47;;;;:::i;:::-;6033:68;;6112:7;6126:311;;;;;;;;6156:6;6126:311;;;;6184:13;6126:311;;;;6245:20;6126:311;;;;6297:19;:17;:19::i;:::-;6126:311;;;;6345:7;6126:311;;;;6373:7;:5;:7::i;:::-;6126:311;;;;6414:12;6126:311;;;6112:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6473:6;6462:50;6481:15;6498:12;;6462:50;;;;;;;;;;;;;;;;;;;;;;;;6538:6;6527:43;6546:13;6561:7;:5;:7::i;:::-;6527:43;;;;;;;;;;;;;;;;;;;;;;;;6588:4;6581:11;;;5919:680;;;;;:::o;381:134:4:-;439:7;465:43;469:1;472;465:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;458:50;;381:134;;;;:::o;532:112:3:-;597:7;623;:14;;;616:21;;532:112;;;:::o;650:178::-;820:1;802:7;:14;;;:19;;;;;;;;;;;650:178;:::o;8602:195:5:-;8737:5;8705:13;:20;8719:5;8705:20;;;;;;;;;;;;;;;:29;8726:7;8705:29;;;;;;;;;;;;;;;:37;;;;8774:7;8757:33;;8767:5;8757:33;;;8783:5;8757:33;;;;;;;;;;;;;;;;;;8602:195;;;:::o;1097:269:4:-;1183:7;1214:1;1210;:5;1217:12;1202:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:9;1256:1;1252;:5;;;;;;1240:17;;1291:1;1287;:5;;;;;;1283:1;1279;:5;:13;1274:1;:18;1267:26;;;;1358:1;1351:8;;;1097:269;;;;;:::o;521:187::-;607:7;639:1;634;:6;;642:12;626:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:9;681:1;677;:5;665:17;;700:1;693:8;;;521:187;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2328400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1050",
								"INDEX()": "1073",
								"PERMIT_TYPEHASH()": "301",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22408",
								"balanceForGons(uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"circulatingSupply()": "infinite",
								"decimals()": "1167",
								"decreaseAllowance(address,uint256)": "infinite",
								"gonsForBalance(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"index()": "infinite",
								"initialize(address)": "68507",
								"initializer()": "1114",
								"manager()": "1101",
								"name()": "infinite",
								"nonces(address)": "1334",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"pullManagement()": "infinite",
								"pushManagement(address)": "infinite",
								"rebase(uint256,uint256)": "infinite",
								"rebases(uint256)": "7042",
								"renounceManagement()": "24353",
								"setIndex(uint256)": "infinite",
								"stakingContract()": "1157",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_storeRebase(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3829,
									"end": 4039,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 3829,
									"end": 4039,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3829,
									"end": 4039,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3829,
									"end": 4039,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3829,
									"end": 4039,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3829,
									"end": 4039,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3829,
									"end": 4039,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3829,
									"end": 4039,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3829,
									"end": 4039,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3829,
									"end": 4039,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3829,
									"end": 4039,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "5374616B6564204F6C796D707573000000000000000000000000000000000000"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "734F484D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3875,
									"end": 3876,
									"name": "PUSH",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1146,
									"end": 1151,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1167,
									"end": 1174,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1164,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1192,
									"end": 1201,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1189,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1180,
									"end": 1189,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 616,
									"end": 631,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 684,
									"name": "CHAINID",
									"source": 7
								},
								{
									"begin": 664,
									"end": 684,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 664,
									"end": 684,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 757,
									"end": 852,
									"name": "PUSH",
									"source": 7,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 882,
									"end": 886,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 882,
									"end": 886,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 882,
									"end": 886,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 882,
									"end": 888,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 882,
									"end": 888,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 866,
									"end": 890,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 866,
									"end": 890,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 866,
									"end": 890,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 866,
									"end": 890,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 866,
									"end": 890,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 866,
									"end": 890,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 914,
									"end": 924,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 914,
									"end": 924,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 914,
									"end": 924,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 914,
									"end": 924,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 914,
									"end": 924,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 914,
									"end": 924,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 914,
									"end": 924,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 914,
									"end": 924,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 914,
									"end": 924,
									"name": "PUSH",
									"source": 7,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 914,
									"end": 924,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 914,
									"end": 924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 904,
									"end": 925,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 904,
									"end": 925,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 904,
									"end": 925,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 904,
									"end": 925,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 925,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 904,
									"end": 925,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 950,
									"end": 957,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 979,
									"end": 983,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 723,
									"end": 995,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 723,
									"end": 995,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 723,
									"end": 995,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 723,
									"end": 995,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 723,
									"end": 995,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 723,
									"end": 995,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 704,
									"end": 720,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 704,
									"end": 995,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 704,
									"end": 995,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 704,
									"end": 995,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 704,
									"end": 995,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 591,
									"end": 1002,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1413,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1400,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1394,
									"end": 1400,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1394,
									"end": 1413,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1453,
									"end": 1454,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "PUSH",
									"source": 5,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1428,
									"end": 1465,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 3916,
									"end": 3926,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3913,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 3902,
									"end": 3913,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 3926,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3217,
									"end": 3232,
									"name": "PUSH",
									"source": 5,
									"value": "11C37937E08000"
								},
								{
									"begin": 3936,
									"end": 3948,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3936,
									"end": 3975,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3936,
									"end": 3975,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3936,
									"end": 3975,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3936,
									"end": 3975,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4004,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 4019,
									"end": 4031,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 4019,
									"end": 4031,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3217,
									"end": 3232,
									"name": "PUSH",
									"source": 5,
									"value": "11C37937E08000"
								},
								{
									"begin": 3157,
									"end": 3158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3148,
									"end": 3159,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "MOD",
									"source": 5
								},
								{
									"begin": 3157,
									"end": 3158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3148,
									"end": 3159,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3450,
									"end": 3504,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4004,
									"end": 4018,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 4004,
									"end": 4018,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4004,
									"end": 4018,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 4004,
									"end": 4018,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18446744073709551740"
								},
								{
									"begin": 4004,
									"end": 4018,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4004,
									"end": 4018,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4004,
									"end": 4032,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4004,
									"end": 4032,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4004,
									"end": 4032,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4004,
									"end": 4032,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 4004,
									"end": 4032,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 4004,
									"end": 4032,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 4004,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3985,
									"end": 4001,
									"name": "PUSH",
									"source": 5,
									"value": "E"
								},
								{
									"begin": 3985,
									"end": 4032,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3985,
									"end": 4032,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3985,
									"end": 4032,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3985,
									"end": 4032,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1361,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1286,
									"end": 1361,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1336,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1351,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1361,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1361,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1019,
									"end": 1026,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1049,
									"end": 1050,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 4,
									"value": "1A"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 4,
									"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1038,
									"end": 1084,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1038,
									"end": 1084,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1190,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1214,
									"end": 1215,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1210,
									"end": 1211,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1210,
									"end": 1215,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1217,
									"end": 1229,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1240,
									"end": 1249,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1253,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1240,
									"end": 1257,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1240,
									"end": 1257,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1291,
									"end": 1292,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "MOD",
									"source": 4
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1279,
									"end": 1280,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1279,
									"end": 1284,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1279,
									"end": 1292,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1274,
									"end": 1275,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1274,
									"end": 1292,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1359,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2346,
									"end": 9624,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203755e0dc73a5551ac490d90c8a80ae81bf369634d20e56a9bcf2da6b44fae5f364736f6c63430007050033",
									".code": [
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "481C6A75"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "C4D66DE8"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "C4D66DE8"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "D505ACCF"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "EE99205C"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "9CE110D7"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "73C69EB7"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "73C69EB7"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "7965D56D"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "7ECEBE00"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "9358928B"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "481C6A75"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "5A96AC0A"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "2986C0E5"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "3644E515"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "3644E515"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "40A5737F"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "46F68EE9"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "2986C0E5"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "2DF75CB1"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "30ADF81F"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "1BD39674"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "58ECDB4"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "89208D8"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 9624,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 438,
											"end": 546,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 553,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4947,
											"end": 4954,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2507,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2478,
											"end": 2507,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2488,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2507,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2478,
											"end": 2507,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2469,
											"end": 2509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2509,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2509,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2469,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5026,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5026,
											"end": 5045,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5026,
											"end": 5045,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5026,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4997,
											"end": 5045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4997,
											"end": 5045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5068,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5073,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5056,
											"end": 5420,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5056,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5056,
											"end": 5420,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4"
										},
										{
											"begin": 5114,
											"end": 5129,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5145,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 5175,
											"end": 5181,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "PUSH",
											"source": 5,
											"value": "6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2"
										},
										{
											"begin": 5183,
											"end": 5184,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 5186,
											"end": 5193,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5186,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5186,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5228,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5216,
											"end": 5228,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5209,
											"end": 5228,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5209,
											"end": 5228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5209,
											"end": 5228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5209,
											"end": 5228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5209,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5209,
											"end": 5228,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5056,
											"end": 5420,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5056,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5271,
											"end": 5272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5250,
											"end": 5268,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5272,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5245,
											"end": 5420,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5245,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5245,
											"end": 5420,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5336,
											"end": 5354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5316,
											"end": 5328,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5316,
											"end": 5328,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5310,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5303,
											"end": 5314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5303,
											"end": 5334,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5245,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5245,
											"end": 5420,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5245,
											"end": 5420,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5245,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5409,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5245,
											"end": 5420,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5245,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5463,
											"end": 5475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5457,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5445,
											"end": 5457,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5445,
											"end": 5461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5477,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5445,
											"end": 5477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5477,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5445,
											"end": 5477,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5445,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5442,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5430,
											"end": 5477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5477,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3631,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5508,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5508,
											"end": 5518,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5505,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5493,
											"end": 5505,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5518,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5571,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5488,
											"end": 5571,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3631,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5550,
											"end": 5560,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5550,
											"end": 5560,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5535,
											"end": 5560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5560,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5571,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5488,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5616,
											"end": 5628,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5616,
											"end": 5628,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3232,
											"name": "PUSH",
											"source": 5,
											"value": "11C37937E08000"
										},
										{
											"begin": 3157,
											"end": 3158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3159,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 3157,
											"end": 3158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3159,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3504,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5600,
											"end": 5614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5630,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5630,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5630,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5630,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5600,
											"end": 5630,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5600,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 5581,
											"end": 5630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5630,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5655,
											"end": 5673,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5675,
											"end": 5682,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5684,
											"end": 5690,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5641,
											"end": 5692,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5641,
											"end": 5692,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5641,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5722,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5710,
											"end": 5722,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5703,
											"end": 5722,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5703,
											"end": 5722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5703,
											"end": 5722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5703,
											"end": 5722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 5729,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1336,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1634,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1852,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8414,
											"end": 8418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8472,
											"end": 8477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8444,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8446,
											"end": 8456,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8467,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8431,
											"end": 8469,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8477,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8515,
											"end": 8522,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8503,
											"end": 8513,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8524,
											"end": 8529,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8531,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 8549,
											"end": 8553,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8542,
											"end": 8553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8542,
											"end": 8553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8560,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6850,
											"end": 6866,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 6850,
											"end": 6866,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6838,
											"end": 6844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6838,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 6838,
											"end": 6848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6838,
											"end": 6868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6838,
											"end": 6868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6838,
											"end": 6868,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6838,
											"end": 6868,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6838,
											"end": 6868,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6838,
											"end": 6868,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6838,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6831,
											"end": 6868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6831,
											"end": 6868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6875,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7950,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 7991,
											"end": 7996,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7963,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7965,
											"end": 7969,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7950,
											"end": 7971,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7973,
											"end": 7983,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7985,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7950,
											"end": 7989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7998,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7998,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7950,
											"end": 7998,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7998,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7950,
											"end": 7998,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 7950,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7925,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7927,
											"end": 7931,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7935,
											"end": 7945,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7998,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8028,
											"end": 8038,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8022,
											"end": 8026,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8041,
											"end": 8062,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8064,
											"end": 8074,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8076,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8078,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 8089,
											"end": 8105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 8124,
											"end": 8129,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8108,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 8108,
											"end": 8131,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8108,
											"end": 8131,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 8108,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8089,
											"end": 8131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8089,
											"end": 8131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 8188,
											"end": 8196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8176,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8181,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8164,
											"end": 8186,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8198,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8198,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8164,
											"end": 8198,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8198,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8164,
											"end": 8198,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 8164,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8155,
											"end": 8159,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8198,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8251,
											"end": 8259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8241,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8242,
											"end": 8244,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8245,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 8229,
											"end": 8249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8261,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8229,
											"end": 8261,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8261,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8229,
											"end": 8261,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8229,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8220,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8222,
											"end": 8224,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8261,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8292,
											"end": 8294,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8286,
											"end": 8290,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8296,
											"end": 8301,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8303,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8314,
											"end": 8325,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8314,
											"end": 8325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8314,
											"end": 8325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 8332,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 7262,
											"end": 7267,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 7262,
											"end": 7267,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7246,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 7246,
											"end": 7269,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7246,
											"end": 7269,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 7246,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 480,
											"end": 546,
											"name": "PUSH",
											"source": 7,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 553,
											"end": 584,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8894,
											"end": 8898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8951,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8995,
											"end": 9005,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8966,
											"end": 8976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8951,
											"end": 8978,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8987,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8989,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 8951,
											"end": 8993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 9007,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 9007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 9007,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8951,
											"end": 9007,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 9007,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8951,
											"end": 9007,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8951,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8923,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8925,
											"end": 8935,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8939,
											"end": 8946,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 9007,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 9007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 9007,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 9007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9044,
											"end": 9051,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9032,
											"end": 9042,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9053,
											"end": 9066,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9068,
											"end": 9078,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9080,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9082,
											"end": 9089,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9114,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9103,
											"end": 9114,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 9121,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1634,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4623,
											"end": 4624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4614,
											"end": 4624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 4605,
											"end": 4626,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4626,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4605,
											"end": 4626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4626,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4626,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 4605,
											"end": 4626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4644,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4660,
											"end": 4666,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4644,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4644,
											"end": 4668,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4644,
											"end": 4668,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4644,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4636,
											"end": 4641,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 4636,
											"end": 4668,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4636,
											"end": 4668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4636,
											"end": 4668,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4636,
											"end": 4668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4689,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4678,
											"end": 4689,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4696,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1634,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1634,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1605,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH data",
											"source": 5,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1951,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2077,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2087,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 2115,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1566,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2204,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH data",
											"source": 5,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2185,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "PUSH",
											"source": 5,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2342,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6670,
											"end": 6677,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6697,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6722,
											"end": 6738,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 6722,
											"end": 6738,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6709,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6711,
											"end": 6714,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6716,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6697,
											"end": 6720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6740,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6740,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6697,
											"end": 6740,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6740,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6697,
											"end": 6740,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6697,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6690,
											"end": 6740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6690,
											"end": 6740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6940,
											"end": 6944,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6964,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 6974,
											"end": 6990,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 6974,
											"end": 6990,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 6968,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6964,
											"end": 6972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 6992,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 6992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 6992,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6964,
											"end": 6992,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 6992,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6964,
											"end": 6992,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 6964,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6957,
											"end": 6992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6957,
											"end": 6992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6999,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 1952,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1984,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1971,
											"end": 1995,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1971,
											"end": 1995,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1971,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1964,
											"end": 1995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1964,
											"end": 1995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7102,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 7140,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7140,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 7140,
											"end": 7168,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7140,
											"end": 7168,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 7140,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7122,
											"end": 7134,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7122,
											"end": 7134,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7122,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7122,
											"end": 7138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7122,
											"end": 7170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7122,
											"end": 7170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7122,
											"end": 7170,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7122,
											"end": 7170,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7122,
											"end": 7170,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7122,
											"end": 7170,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 7122,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7177,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1526,
											"end": 1539,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2595,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9223,
											"end": 9227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9271,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9273,
											"end": 9283,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9287,
											"end": 9294,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9296,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9239,
											"end": 9296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9239,
											"end": 9296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9329,
											"end": 9337,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9310,
											"end": 9325,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9310,
											"end": 9337,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9306,
											"end": 9509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 9306,
											"end": 9509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9394,
											"end": 9395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9366,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9378,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9380,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9382,
											"end": 9389,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9391,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9395,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9306,
											"end": 9509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 9306,
											"end": 9509,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9306,
											"end": 9509,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 9306,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9467,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9481,
											"end": 9496,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9467,
											"end": 9475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9467,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 9467,
											"end": 9479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9467,
											"end": 9498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9467,
											"end": 9498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9467,
											"end": 9498,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9467,
											"end": 9498,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9467,
											"end": 9498,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9467,
											"end": 9498,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9467,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9439,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9441,
											"end": 9451,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9455,
											"end": 9462,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9426,
											"end": 9464,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9498,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9306,
											"end": 9509,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 9306,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9545,
											"end": 9552,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9533,
											"end": 9543,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9554,
											"end": 9567,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9569,
											"end": 9579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9554,
											"end": 9581,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9583,
											"end": 9590,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9592,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9594,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9615,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9604,
											"end": 9615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9604,
											"end": 9615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9604,
											"end": 9615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9622,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7354,
											"end": 7358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 7400,
											"end": 7416,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 7400,
											"end": 7416,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7394,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 7389,
											"end": 7398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7418,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7418,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7389,
											"end": 7418,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7418,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7389,
											"end": 7418,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 7389,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 7489,
											"end": 7497,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7469,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7471,
											"end": 7481,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7457,
											"end": 7487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7499,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7499,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7499,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7499,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7457,
											"end": 7499,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 7457,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7440,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7442,
											"end": 7452,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7454,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7499,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 7554,
											"end": 7562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7542,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7546,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7530,
											"end": 7552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7564,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7564,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7530,
											"end": 7564,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7564,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7530,
											"end": 7564,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 7530,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7523,
											"end": 7525,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7564,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7599,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7605,
											"end": 7610,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7612,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 7629,
											"end": 7633,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7622,
											"end": 7633,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7622,
											"end": 7633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7622,
											"end": 7633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7640,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4163,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4138,
											"end": 4163,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4148,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4163,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4138,
											"end": 4163,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4163,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4129,
											"end": 4165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4165,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4165,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4165,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4129,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4212,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4200,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4175,
											"end": 4216,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4216,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4216,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4175,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4241,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 4226,
											"end": 4241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3232,
											"name": "PUSH",
											"source": 5,
											"value": "11C37937E08000"
										},
										{
											"begin": 3157,
											"end": 3158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3159,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3503,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 3157,
											"end": 3158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3159,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3504,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4282,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4301,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4314,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4369,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 4354,
											"end": 4369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4369,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4369,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4354,
											"end": 4369,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4369,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4369,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4354,
											"end": 4369,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4371,
											"end": 4383,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4371,
											"end": 4383,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4385,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "PUSH",
											"source": 5,
											"value": "817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1"
										},
										{
											"begin": 4427,
											"end": 4443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4445,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 4486,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4475,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 4464,
											"end": 4475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4509,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4498,
											"end": 4509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4516,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1316,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1289,
											"end": 1304,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1289,
											"end": 1316,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1289,
											"end": 1316,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 7,
											"value": "5065726D69743A206578706972656420646561646C696E650000000000000000"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 546,
											"name": "PUSH",
											"source": 7,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 1410,
											"end": 1425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1425,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1464,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1485,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1487,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1487,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1487,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1487,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1487,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1554,
											"name": "PUSH",
											"source": 7,
											"value": "1901"
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1585,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "F0"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1587,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1587,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1587,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1625,
											"end": 1630,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1632,
											"end": 1633,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1677,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH data",
											"source": 7,
											"value": "5EF653EDFC38C403EA52D691304FEFFA27A665E594B07A1719AC6B055D64DBEE"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1759,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1746,
											"end": 1772,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1772,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1746,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1782,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1798,
											"end": 1805,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1782,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1782,
											"end": 1814,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1814,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1782,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 7738,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7758,
											"end": 7771,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7783,
											"end": 7790,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7792,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7751,
											"end": 7792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7751,
											"end": 7792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7799,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 4,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 772,
											"end": 779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 801,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 795,
											"end": 796,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 795,
											"end": 801,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 791,
											"end": 836,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 791,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 824,
											"end": 825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 817,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 791,
											"end": 836,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 858,
											"end": 859,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 858,
											"end": 863,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 846,
											"end": 863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 846,
											"end": 863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 890,
											"end": 891,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 885,
											"end": 886,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 881,
											"end": 882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 881,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 881,
											"end": 886,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 881,
											"end": 886,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 881,
											"end": 891,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH data",
											"source": 4,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 873,
											"end": 929,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 947,
											"end": 948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 940,
											"end": 948,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 940,
											"end": 948,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 940,
											"end": 948,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 714,
											"end": 955,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 714,
											"end": 955,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 714,
											"end": 955,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 714,
											"end": 955,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 714,
											"end": 955,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 199,
											"end": 375,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 199,
											"end": 375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 257,
											"end": 264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 288,
											"end": 289,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 288,
											"end": 293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 276,
											"end": 293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 276,
											"end": 293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 316,
											"end": 317,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 311,
											"end": 312,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 311,
											"end": 317,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 311,
											"end": 317,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 303,
											"end": 349,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 360,
											"end": 368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 360,
											"end": 368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 360,
											"end": 368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 199,
											"end": 375,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 199,
											"end": 375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 199,
											"end": 375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 199,
											"end": 375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 199,
											"end": 375,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5919,
											"end": 6599,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5919,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 6020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 6079,
											"end": 6099,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6054,
											"end": 6061,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 6054,
											"end": 6065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 6054,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6054,
											"end": 6077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6119,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6156,
											"end": 6162,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6245,
											"end": 6265,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6297,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 6297,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 6297,
											"end": 6316,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6297,
											"end": 6316,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 6297,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6345,
											"end": 6352,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6373,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 6373,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 6373,
											"end": 6380,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6373,
											"end": 6380,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 6373,
											"end": 6380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6414,
											"end": 6426,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6126,
											"end": 6437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "PUSH",
											"source": 5,
											"value": "917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4"
										},
										{
											"begin": 6481,
											"end": 6496,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6512,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 6538,
											"end": 6544,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "PUSH",
											"source": 5,
											"value": "6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2"
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 6561,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6570,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6592,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6581,
											"end": 6592,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6581,
											"end": 6592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6581,
											"end": 6592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6599,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6599,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6599,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 515,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 381,
											"end": 515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 439,
											"end": 446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 469,
											"end": 470,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 472,
											"end": 473,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 4,
											"value": "1E"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 4,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 465,
											"end": 508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 465,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 381,
											"end": 515,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 381,
											"end": 515,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 381,
											"end": 515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 381,
											"end": 515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 381,
											"end": 515,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 532,
											"end": 644,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 532,
											"end": 644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 597,
											"end": 604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 623,
											"end": 637,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 637,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 623,
											"end": 637,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 616,
											"end": 637,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 616,
											"end": 637,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 644,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 532,
											"end": 644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 532,
											"end": 644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 644,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 650,
											"end": 828,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 650,
											"end": 828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 820,
											"end": 821,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 802,
											"end": 809,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 802,
											"end": 816,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 816,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 802,
											"end": 816,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 821,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 802,
											"end": 821,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 802,
											"end": 821,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 802,
											"end": 821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 802,
											"end": 821,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 802,
											"end": 821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 802,
											"end": 821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 802,
											"end": 821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 802,
											"end": 821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 802,
											"end": 821,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 802,
											"end": 821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 650,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 650,
											"end": 828,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8602,
											"end": 8797,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 8602,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8737,
											"end": 8742,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8718,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8719,
											"end": 8724,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8726,
											"end": 8733,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8734,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8742,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8742,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8742,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8742,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8774,
											"end": 8781,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8767,
											"end": 8772,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8783,
											"end": 8788,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8790,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 8602,
											"end": 8797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8602,
											"end": 8797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8602,
											"end": 8797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8602,
											"end": 8797,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1183,
											"end": 1190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1215,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1279,
											"end": 1284,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1279,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 708,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 521,
											"end": 708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 607,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 640,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 634,
											"end": 640,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 634,
											"end": 640,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 654,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 665,
											"end": 674,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 677,
											"end": 682,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 665,
											"end": 682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 665,
											"end": 682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 700,
											"end": 701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 693,
											"end": 701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 693,
											"end": 701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 693,
											"end": 701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 521,
											"end": 708,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 521,
											"end": 708,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 521,
											"end": 708,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
										"5EF653EDFC38C403EA52D691304FEFFA27A665E594B07A1719AC6B055D64DBEE": "5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"INDEX()": "2df75cb1",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceForGons(uint256)": "7965d56d",
							"balanceOf(address)": "70a08231",
							"circulatingSupply()": "9358928b",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"gonsForBalance(uint256)": "1bd39674",
							"increaseAllowance(address,uint256)": "39509351",
							"index()": "2986c0e5",
							"initialize(address)": "c4d66de8",
							"initializer()": "9ce110d7",
							"manager()": "481c6a75",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"rebase(uint256,uint256)": "058ecdb4",
							"rebases(uint256)": "73c69eb7",
							"renounceManagement()": "089208d8",
							"setIndex(uint256)": "40a5737f",
							"stakingContract()": "ee99205c",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LogRebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingContract\",\"type\":\"address\"}],\"name\":\"LogStakingContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"LogSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gons\",\"type\":\"uint256\"}],\"name\":\"balanceForGons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"gonsForBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingContract_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"profit_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epoch_\",\"type\":\"uint256\"}],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rebases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountRebased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberOccured\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_INDEX\",\"type\":\"uint256\"}],\"name\":\"setIndex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC2612Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC2612Permit-permit}.\"},\"rebase(uint256,uint256)\":{\"params\":{\"profit_\":\"uint256\"},\"returns\":{\"_0\":\"uint256\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rebase(uint256,uint256)\":{\"notice\":\"increases sOHM supply to increase staking balances relative to profit_\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"sOlympus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/interfaces/IERC2612Permit.sol\":{\"keccak256\":\"0x2b28bfc4e0621eb60b914917dc916cc08ba97eee0a3b06d98fe56ff9ce2c0d59\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b5ddc8c3db72e2cd69a8defcc016910454578b7f46899a7ce0bdec603e58640\",\"dweb:/ipfs/QmYNhiaGjMdGXhooPCTxW3AYNWFii9WSkUcR4KkPqvRM3S\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]},\"contracts/libraries/Counters.sol\":{\"keccak256\":\"0x7803a8db31ab4407c907b44536f70e1c460835997bb31cdf67a7f8ed0edf7f9e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://a6b92404baa42cc67f22266ea5f6967cc1039b1443f9743a151b78994ee97820\",\"dweb:/ipfs/Qmdm7doaGJN599BEQCrmY6VKNSynmYrzhYnBK9LK9mXnJo\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x785093256153ed3bcee1e666d88a596cd03c2af12b9962d51f4271ecf455094d\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://aefbf404918518679ed39de9b9a1740403e60b28d83a05072642f58743517348\",\"dweb:/ipfs/QmcwTTRe29fy4Dvj8vhp4DCaqtAKuEqvnuNMAsVatUEUwY\"]},\"contracts/types/ERC20.sol\":{\"keccak256\":\"0xa1b58a3231d7efe286f6bf32ecbdbd2a8a8395c70da96d960e3e0ecf1a6e0aa2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8fcb5129cdae755dabf3798f92161941944f899154a0eaab2dda0a1e5f78ee03\",\"dweb:/ipfs/QmSRzMKPL8kYhc521GKDuzgyHvqFsP5VMxw532XXadyBNV\"]},\"contracts/types/ERC20Permit.sol\":{\"keccak256\":\"0xea1d7e9f03035c6e454dddd84ca8693b6305868b4a85de215bea6ed487ae52bd\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ceb0f9bc321a996264ca07300e6fe5eefddfa05ed1c230b6ebdde3f395067604\",\"dweb:/ipfs/QmbrBvTNjEQjCkNgLTucBBMmRFzNqY9xPmMZuNiHzPJcPq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1839,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1845,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1847,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1849,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1851,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1853,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 2332,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)559_storage)"
							},
							{
								"astId": 2337,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							},
							{
								"astId": 968,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 970,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_newOwner",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1113,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "stakingContract",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1115,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "initializer",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1153,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "rebases",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_struct(Rebase)1150_storage)dyn_storage"
							},
							{
								"astId": 1155,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "INDEX",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1186,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_gonsPerFragment",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1190,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_gonBalances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1196,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_allowedValue",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Rebase)1150_storage)dyn_storage": {
								"base": "t_struct(Rebase)1150_storage",
								"encoding": "dynamic_array",
								"label": "struct sOlympus.Rebase[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)559_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)559_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)559_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 558,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Rebase)1150_storage": {
								"encoding": "inplace",
								"label": "struct sOlympus.Rebase",
								"members": [
									{
										"astId": 1137,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "epoch",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1139,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "rebase",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1141,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "totalStakedBefore",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1143,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "totalStakedAfter",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1145,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "amountRebased",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1147,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "index",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1149,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "blockNumberOccured",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"rebase(uint256,uint256)": {
								"notice": "increases sOHM supply to increase staking balances relative to profit_"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/types/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/types/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/types/ERC20.sol\":{\"keccak256\":\"0xa1b58a3231d7efe286f6bf32ecbdbd2a8a8395c70da96d960e3e0ecf1a6e0aa2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8fcb5129cdae755dabf3798f92161941944f899154a0eaab2dda0a1e5f78ee03\",\"dweb:/ipfs/QmSRzMKPL8kYhc521GKDuzgyHvqFsP5VMxw532XXadyBNV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1839,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1845,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1847,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1849,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1851,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1853,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/types/ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC2612Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC2612Permit-permit}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC2612Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC2612Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/types/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/interfaces/IERC2612Permit.sol\":{\"keccak256\":\"0x2b28bfc4e0621eb60b914917dc916cc08ba97eee0a3b06d98fe56ff9ce2c0d59\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b5ddc8c3db72e2cd69a8defcc016910454578b7f46899a7ce0bdec603e58640\",\"dweb:/ipfs/QmYNhiaGjMdGXhooPCTxW3AYNWFii9WSkUcR4KkPqvRM3S\"]},\"contracts/libraries/Counters.sol\":{\"keccak256\":\"0x7803a8db31ab4407c907b44536f70e1c460835997bb31cdf67a7f8ed0edf7f9e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://a6b92404baa42cc67f22266ea5f6967cc1039b1443f9743a151b78994ee97820\",\"dweb:/ipfs/Qmdm7doaGJN599BEQCrmY6VKNSynmYrzhYnBK9LK9mXnJo\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/types/ERC20.sol\":{\"keccak256\":\"0xa1b58a3231d7efe286f6bf32ecbdbd2a8a8395c70da96d960e3e0ecf1a6e0aa2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8fcb5129cdae755dabf3798f92161941944f899154a0eaab2dda0a1e5f78ee03\",\"dweb:/ipfs/QmSRzMKPL8kYhc521GKDuzgyHvqFsP5VMxw532XXadyBNV\"]},\"contracts/types/ERC20Permit.sol\":{\"keccak256\":\"0xea1d7e9f03035c6e454dddd84ca8693b6305868b4a85de215bea6ed487ae52bd\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ceb0f9bc321a996264ca07300e6fe5eefddfa05ed1c230b6ebdde3f395067604\",\"dweb:/ipfs/QmbrBvTNjEQjCkNgLTucBBMmRFzNqY9xPmMZuNiHzPJcPq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1839,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1845,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1847,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1849,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1851,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1853,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 2332,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)559_storage)"
							},
							{
								"astId": 2337,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)559_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)559_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)559_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 558,
										"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							76
						]
					},
					"id": 77,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "80:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 76,
							"linearizedBaseContracts": [
								76
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "126:62:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "237:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:0"
									},
									"scope": 76,
									"src": "191:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "250:68:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 15,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:17:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "380:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:9:0"
									},
									"scope": 76,
									"src": "321:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "393:197:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "611:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "630:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:35:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "664:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "664:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:6:0"
									},
									"scope": 76,
									"src": "593:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "674:252:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "963:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:32:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1003:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:9:0"
									},
									"scope": 76,
									"src": "929:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1016:616:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1669:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1651:33:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1703:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 42,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:6:0"
									},
									"scope": 76,
									"src": "1635:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1713:280:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2018:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2034:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2053:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2017:51:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2087:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2086:6:0"
									},
									"scope": 76,
									"src": "1996:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "2097:148:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 66,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2263:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2285:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2305:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:57:0"
									},
									"src": "2248:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2324:142:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 75,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2484:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2507:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2532:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:63:0"
									},
									"src": "2469:78:0"
								}
							],
							"scope": 77,
							"src": "105:2444:0"
						}
					],
					"src": "80:2469:0"
				},
				"id": 0
			},
			"contracts/interfaces/IERC2612Permit.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC2612Permit.sol",
					"exportedSymbols": {
						"IERC2612Permit": [
							105
						]
					},
					"id": 106,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 105,
							"linearizedBaseContracts": [
								105
							],
							"name": "IERC2612Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "103:834:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "990:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1015:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1039:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1065:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 88,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1065:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1082:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 90,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1101:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:159:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1125:0:1"
									},
									"scope": 105,
									"src": "942:184:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1132:302:1",
										"text": " @dev Returns the current ERC2612 nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1455:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:15:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:1"
									},
									"scope": 105,
									"src": "1439:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 106,
							"src": "72:1432:1"
						}
					],
					"src": "46:1458:1"
				},
				"id": 1
			},
			"contracts/libraries/Address.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Address.sol",
					"exportedSymbols": {
						"Address": [
							550
						]
					},
					"id": 551,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 107,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "78:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 550,
							"linearizedBaseContracts": [
								550
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "807:347:2",
										"statements": [
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 123,
														"src": "1004:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1004:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"nodeType": "VariableDeclarationStatement",
												"src": "1004:12:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1091:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1093:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1113:7:2"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1101:11:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:20:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1093:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 110,
														"isOffset": false,
														"isSlot": false,
														"src": "1113:7:2",
														"valueSize": 1
													},
													{
														"declaration": 116,
														"isOffset": false,
														"isSlot": false,
														"src": "1093:4:2",
														"valueSize": 1
													}
												],
												"id": 118,
												"nodeType": "InlineAssembly",
												"src": "1082:41:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 119,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1139:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1146:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1139:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 114,
												"id": 122,
												"nodeType": "Return",
												"src": "1132:15:2"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "171:565:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "761:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:17:2"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "801:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "801:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:6:2"
									},
									"scope": 550,
									"src": "741:413:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "2142:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 135,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2168:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$550",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$550",
																				"typeString": "library Address"
																			}
																		],
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2160:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 133,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2160:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2160:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2160:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 138,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2185:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2160:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2152:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2152:73:2"
											},
											{
												"assignments": [
													144,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "2314:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 143,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2314:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 151,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2364:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 145,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "2332:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2332:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 147,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2355:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2332:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2332:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2313:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "2385:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2394:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2377:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2377:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "2377:78:2"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "1160:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2090:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2117:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:43:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2142:0:2"
									},
									"scope": 550,
									"src": "2071:391:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "3292:82:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "3320:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "3328:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3334:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 168,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															175,
															195
														],
														"referencedDeclaration": 195,
														"src": "3307:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3307:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "3300:67:2"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "2468:730:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3225:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3241:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3241:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:35:2"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3278:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3278:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3277:14:2"
									},
									"scope": 550,
									"src": "3203:171:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "3713:77:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 188,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "3753:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "3761:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3767:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 191,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3770:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 187,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3730:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3730:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 193,
												"nodeType": "Return",
												"src": "3723:60:2"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "3380:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3618:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3618:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3634:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3634:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3653:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3653:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3617:63:2"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3699:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3699:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3698:14:2"
									},
									"scope": 550,
									"src": "3596:194:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "4265:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "4304:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "4312:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 210,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "4318:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 207,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															215,
															265
														],
														"referencedDeclaration": 265,
														"src": "4282:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4282:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 206,
												"id": 213,
												"nodeType": "Return",
												"src": "4275:94:2"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "3796:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4183:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4199:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4218:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4182:50:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4251:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4251:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4250:14:2"
									},
									"scope": 550,
									"src": "4152:224:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "5095:382:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 232,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5121:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$550",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$550",
																				"typeString": "library Address"
																			}
																		],
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5113:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 230,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5113:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5113:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5113:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 235,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "5138:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5113:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5145:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5105:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "5105:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 242,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "5215:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 241,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "5204:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5204:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5224:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5196:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5196:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "5196:60:2"
											},
											{
												"assignments": [
													248,
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 264,
														"src": "5327:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5327:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 264,
														"src": "5341:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 249,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5341:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"arguments": [
														{
															"id": 255,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "5396:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 251,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "5368:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5368:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 253,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "5388:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5368:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5326:75:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 259,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "5436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 260,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "5445:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 261,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "5457:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 258,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "5418:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5418:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 228,
												"id": 263,
												"nodeType": "Return",
												"src": "5411:59:2"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "4382:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "4985:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4985:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "5001:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5001:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "5020:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "5035:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5035:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4984:78:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "5081:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5081:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5080:14:2"
									},
									"scope": 550,
									"src": "4954:523:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "5627:814:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 280,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5656:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 279,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "5645:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5645:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5665:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5637:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5637:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "5637:60:2"
											},
											{
												"assignments": [
													286,
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "5768:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 285,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "5782:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 287,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5782:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": {
													"arguments": [
														{
															"id": 293,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "5840:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 289,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "5809:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5809:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 291,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "5829:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5809:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5767:78:2"
											},
											{
												"condition": {
													"id": 296,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 286,
													"src": "5859:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "5916:519:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 300,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "6000:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6000:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6000:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 310,
																"nodeType": "Block",
																"src": "6372:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 307,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 273,
																					"src": "6397:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 306,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6390:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6390:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 309,
																		"nodeType": "ExpressionStatement",
																		"src": "6390:20:2"
																	}
																]
															},
															"id": 311,
															"nodeType": "IfStatement",
															"src": "5996:429:2",
															"trueBody": {
																"id": 305,
																"nodeType": "Block",
																"src": "6023:343:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6207:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6229:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6258:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6252:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6252:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6233:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6301:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6305:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6297:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6297:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6318:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6290:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6290:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6290:44:2"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 288,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6258:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 288,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6305:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 304,
																		"nodeType": "InlineAssembly",
																		"src": "6198:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "5855:580:2",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5868:42:2",
													"statements": [
														{
															"expression": {
																"id": 297,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "5889:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 277,
															"id": 298,
															"nodeType": "Return",
															"src": "5882:17:2"
														}
													]
												}
											}
										]
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "5515:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "5531:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5531:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "5550:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5550:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "5568:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5568:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5514:81:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "5613:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5613:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5612:14:2"
									},
									"scope": 550,
									"src": "5483:958:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "6716:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "6752:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "6760:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6766:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 325,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															332,
															367
														],
														"referencedDeclaration": 367,
														"src": "6733:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6733:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 324,
												"id": 330,
												"nodeType": "Return",
												"src": "6726:80:2"
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "6445:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "6644:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6644:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "6660:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6660:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6643:35:2"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "6702:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6702:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6701:14:2"
									},
									"scope": 550,
									"src": "6616:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "7125:288:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 346,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "7154:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 345,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "7143:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7143:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7163:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7135:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7135:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "7135:67:2"
											},
											{
												"assignments": [
													352,
													354
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 366,
														"src": "7273:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 351,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7273:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 354,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 366,
														"src": "7287:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 353,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7287:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"id": 357,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "7332:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 355,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "7314:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "7314:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7314:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7272:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "7372:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 362,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "7381:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 363,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "7393:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 360,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "7354:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7354:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 343,
												"id": 365,
												"nodeType": "Return",
												"src": "7347:59:2"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "6819:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "7025:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "7041:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7041:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "7060:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 338,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7060:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:63:2"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "7111:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7111:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7110:14:2"
									},
									"scope": 550,
									"src": "6997:416:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "7689:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "7727:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "7735:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7741:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 377,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															384,
															419
														],
														"referencedDeclaration": 419,
														"src": "7706:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7706:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 376,
												"id": 382,
												"nodeType": "Return",
												"src": "7699:84:2"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "7419:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "7622:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7622:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "7638:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7638:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7621:35:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "7675:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7675:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7674:14:2"
									},
									"scope": 550,
									"src": "7592:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "8101:292:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 398,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8130:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 397,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "8119:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8119:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8139:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8111:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8111:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "8111:69:2"
											},
											{
												"assignments": [
													404,
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 404,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "8251:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 403,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8251:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "8265:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 405,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8265:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"arguments": [
														{
															"id": 409,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8312:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 407,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8292:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "8292:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8292:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8250:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "8352:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 414,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "8361:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 415,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "8373:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 412,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "8334:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8334:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 395,
												"id": 417,
												"nodeType": "Return",
												"src": "8327:59:2"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "7796:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "8006:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "8022:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8022:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "8041:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 390,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8041:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8005:63:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "8087:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8087:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8086:14:2"
									},
									"scope": 550,
									"src": "7976:417:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "8528:596:2",
										"statements": [
											{
												"condition": {
													"id": 430,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 421,
													"src": "8542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 446,
													"nodeType": "Block",
													"src": "8599:519:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 434,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "8683:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8683:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8703:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8683:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 444,
																"nodeType": "Block",
																"src": "9055:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 441,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 425,
																					"src": "9080:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 440,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "9073:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9073:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 443,
																		"nodeType": "ExpressionStatement",
																		"src": "9073:20:2"
																	}
																]
															},
															"id": 445,
															"nodeType": "IfStatement",
															"src": "8679:429:2",
															"trueBody": {
																"id": 439,
																"nodeType": "Block",
																"src": "8706:343:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8890:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8912:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8941:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8935:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8935:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8916:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8984:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8988:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8980:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8980:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "9001:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8973:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8973:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8973:44:2"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 423,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8941:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 423,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8988:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 438,
																		"nodeType": "InlineAssembly",
																		"src": "8881:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 447,
												"nodeType": "IfStatement",
												"src": "8538:580:2",
												"trueBody": {
													"id": 433,
													"nodeType": "Block",
													"src": "8551:42:2",
													"statements": [
														{
															"expression": {
																"id": 431,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "8572:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 429,
															"id": 432,
															"nodeType": "Return",
															"src": "8565:17:2"
														}
													]
												}
											}
										]
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "8426:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8426:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "8440:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8440:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "8465:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8465:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8425:67:2"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "8514:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8514:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8513:14:2"
									},
									"scope": 550,
									"src": "8399:725:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "9210:407:2",
										"statements": [
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "_bytes",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "9220:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 456,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9220:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 462,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "9253:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9245:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 460,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9245:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9245:17:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9237:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 458,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9237:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9237:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9220:43:2"
											},
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "HEX",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "9273:16:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 466,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9273:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 469,
												"initialValue": {
													"hexValue": "30313233343536373839616263646566",
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9292:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
														"typeString": "literal_string \"0123456789abcdef\""
													},
													"value": "0123456789abcdef"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9273:37:2"
											},
											{
												"assignments": [
													471
												],
												"declarations": [
													{
														"constant": false,
														"id": 471,
														"mutability": "mutable",
														"name": "_addr",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "9320:18:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 470,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9320:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 476,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3432",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9351:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															},
															"value": "42"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															}
														],
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9341:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 472,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9345:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9341:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9320:34:2"
											},
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 477,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "9365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 479,
														"indexExpression": {
															"hexValue": "30",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9371:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9365:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9376:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "9365:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "9365:14:2"
											},
											{
												"expression": {
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 483,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "9389:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 485,
														"indexExpression": {
															"hexValue": "31",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9395:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9389:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9400:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "9389:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "9389:14:2"
											},
											{
												"body": {
													"id": 541,
													"nodeType": "Block",
													"src": "9446:133:2",
													"statements": [
														{
															"expression": {
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 499,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "9460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 505,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "32",
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9466:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 501,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 490,
																				"src": "9468:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9470:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "9468:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9466:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9460:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 506,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "9475:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 517,
																	"indexExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 509,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 457,
																						"src": "9485:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 513,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 512,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 510,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 490,
																							"src": "9492:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3132",
																							"id": 511,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9496:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "9492:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9485:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "34",
																					"id": 514,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9503:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				},
																				"src": "9485:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9479:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 507,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "9479:5:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9479:26:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9475:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "9460:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 519,
															"nodeType": "ExpressionStatement",
															"src": "9460:46:2"
														},
														{
															"expression": {
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 520,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "9520:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 526,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9526:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 522,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 490,
																				"src": "9528:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9530:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "9528:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9526:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9520:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 527,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "9535:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 538,
																	"indexExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 530,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 457,
																						"src": "9545:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 534,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 531,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 490,
																							"src": "9552:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3132",
																							"id": 532,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9556:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "9552:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9545:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"hexValue": "30783066",
																					"id": 535,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9562:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_15_by_1",
																						"typeString": "int_const 15"
																					},
																					"value": "0x0f"
																				},
																				"src": "9545:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9539:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 528,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "9539:5:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9539:28:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9535:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "9520:48:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 540,
															"nodeType": "ExpressionStatement",
															"src": "9520:48:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 493,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "9433:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3230",
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9437:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "9433:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 542,
												"initializationExpression": {
													"assignments": [
														490
													],
													"declarations": [
														{
															"constant": false,
															"id": 490,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 542,
															"src": "9418:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 489,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9418:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 492,
													"initialValue": {
														"hexValue": "30",
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9430:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9418:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9441:3:2",
														"subExpression": {
															"id": 496,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "9441:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 498,
													"nodeType": "ExpressionStatement",
													"src": "9441:3:2"
												},
												"nodeType": "ForStatement",
												"src": "9414:165:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "9603:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9596:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 543,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "9596:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9596:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 455,
												"id": 547,
												"nodeType": "Return",
												"src": "9589:20:2"
											}
										]
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addressToString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "9155:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9155:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9154:18:2"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "9195:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 453,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9195:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9194:15:2"
									},
									"scope": 550,
									"src": "9130:487:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 551,
							"src": "149:9470:2"
						}
					],
					"src": "78:9541:2"
				},
				"id": 2
			},
			"contracts/libraries/Counters.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							599
						],
						"SafeMath": [
							939
						]
					},
					"id": 600,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 552,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:3"
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 553,
							"nodeType": "ImportDirective",
							"scope": 600,
							"sourceUnit": 940,
							"src": "70:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 599,
							"linearizedBaseContracts": [
								599
							],
							"name": "Counters",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 556,
									"libraryName": {
										"id": 554,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 939,
										"src": "125:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$939",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "119:27:3",
									"typeName": {
										"id": 555,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "138:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Counters.Counter",
									"id": 559,
									"members": [
										{
											"constant": false,
											"id": 558,
											"mutability": "mutable",
											"name": "_value",
											"nodeType": "VariableDeclaration",
											"scope": 559,
											"src": "491:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 557,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "491:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nodeType": "StructDefinition",
									"scope": 599,
									"src": "152:374:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "606:38:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 566,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "623:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$559_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 558,
													"src": "623:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 565,
												"id": 568,
												"nodeType": "Return",
												"src": "616:21:3"
											}
										]
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "549:23:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$559_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 560,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 559,
													"src": "549:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$559_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:25:3"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "597:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:9:3"
									},
									"scope": 599,
									"src": "532:112:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "703:125:3",
										"statements": [
											{
												"expression": {
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 575,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$559_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 577,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 558,
														"src": "802:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "820:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "802:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "802:19:3"
											}
										]
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "669:23:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$559_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 571,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 559,
													"src": "669:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$559_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:25:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:0:3"
									},
									"scope": 599,
									"src": "650:178:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "887:55:3",
										"statements": [
											{
												"expression": {
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 587,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "897:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$559_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 558,
														"src": "897:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "933:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"expression": {
																	"id": 590,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$559_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 558,
																"src": "914:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 642,
															"src": "914:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "914:21:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "897:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "897:38:3"
											}
										]
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "853:23:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$559_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 583,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 559,
													"src": "853:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$559_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:25:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:3"
									},
									"scope": 599,
									"src": "834:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 600,
							"src": "96:848:3"
						}
					],
					"src": "46:898:3"
				},
				"id": 3
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							939
						]
					},
					"id": 940,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 601,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "79:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 939,
							"linearizedBaseContracts": [
								939
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "266:109:4",
										"statements": [
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "276:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 610,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "276:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 615,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 612,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "288:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 613,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "292:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "288:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "276:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 617,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "311:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 618,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "316:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "311:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "319:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "303:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "303:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "303:46:4"
											},
											{
												"expression": {
													"id": 623,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 611,
													"src": "367:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 609,
												"id": 624,
												"nodeType": "Return",
												"src": "360:8:4"
											}
										]
									},
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "212:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "223:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "211:22:4"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "257:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:9:4"
									},
									"scope": 939,
									"src": "199:176:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "448:67:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 636,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "469:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 637,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "472:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "475:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 635,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															642,
															669
														],
														"referencedDeclaration": 669,
														"src": "465:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "465:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 634,
												"id": 640,
												"nodeType": "Return",
												"src": "458:50:4"
											}
										]
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "394:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "405:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:22:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "439:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:9:4"
									},
									"scope": 939,
									"src": "381:134:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "616:92:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 654,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "634:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 655,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "639:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "634:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 657,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "642:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "626:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "626:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "626:29:4"
											},
											{
												"assignments": [
													661
												],
												"declarations": [
													{
														"constant": false,
														"id": 661,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "665:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 660,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "665:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 665,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 662,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "677:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 663,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "681:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "677:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "665:17:4"
											},
											{
												"expression": {
													"id": 666,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 661,
													"src": "700:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 652,
												"id": 667,
												"nodeType": "Return",
												"src": "693:8:4"
											}
										]
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "534:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "545:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "556:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:50:4"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "607:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:9:4"
									},
									"scope": 939,
									"src": "521:187:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "781:174:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "795:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "800:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "795:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 684,
												"nodeType": "IfStatement",
												"src": "791:45:4",
												"trueBody": {
													"id": 683,
													"nodeType": "Block",
													"src": "803:33:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "824:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 677,
															"id": 682,
															"nodeType": "Return",
															"src": "817:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "846:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "846:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 690,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 687,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "858:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 688,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "862:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "858:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "846:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 692,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "881:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 693,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "885:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "881:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 695,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "890:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "881:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "893:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "873:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "873:56:4"
											},
											{
												"expression": {
													"id": 700,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 686,
													"src": "947:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 677,
												"id": 701,
												"nodeType": "Return",
												"src": "940:8:4"
											}
										]
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "727:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "738:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "726:22:4"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "772:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:9:4"
									},
									"scope": 939,
									"src": "714:241:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "1028:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 713,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "1049:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 714,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "1052:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1055:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 712,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															719,
															758
														],
														"referencedDeclaration": 758,
														"src": "1045:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 711,
												"id": 717,
												"nodeType": "Return",
												"src": "1038:46:4"
											}
										]
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "974:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "985:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:22:4"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "1019:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:4"
									},
									"scope": 939,
									"src": "961:130:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "1192:174:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 731,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "1210:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1210:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 734,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "1217:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1202:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "1202:28:4"
											},
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 757,
														"src": "1240:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1240:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 742,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "1252:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 740,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "1256:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1252:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1240:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 744,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "1274:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 745,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "1279:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 746,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "1283:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1279:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 748,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "1287:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 749,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "1291:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1287:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1279:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1274:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 743,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1267:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1267:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "1267:26:4"
											},
											{
												"expression": {
													"id": 755,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 738,
													"src": "1358:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 756,
												"nodeType": "Return",
												"src": "1351:8:4"
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1110:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1132:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 724,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1132:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:50:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1183:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:9:4"
									},
									"scope": 939,
									"src": "1097:269:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "1476:265:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 765,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "1490:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1494:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1490:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 805,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "1697:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1697:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 813,
													"nodeType": "IfStatement",
													"src": "1693:42:4",
													"trueBody": {
														"id": 812,
														"nodeType": "Block",
														"src": "1705:30:4",
														"statements": [
															{
																"expression": {
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 808,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "1719:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1719:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 811,
																"nodeType": "ExpressionStatement",
																"src": "1719:5:4"
															}
														]
													}
												},
												"id": 814,
												"nodeType": "IfStatement",
												"src": "1486:249:4",
												"trueBody": {
													"id": 804,
													"nodeType": "Block",
													"src": "1497:190:4",
													"statements": [
														{
															"expression": {
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 768,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "1511:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 769,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "1515:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1511:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 771,
															"nodeType": "ExpressionStatement",
															"src": "1511:5:4"
														},
														{
															"assignments": [
																773
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 773,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 804,
																	"src": "1530:6:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 772,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1530:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 781,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 776,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "1549:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1552:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 775,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				719,
																				758
																			],
																			"referencedDeclaration": 719,
																			"src": "1544:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1544:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1556:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 774,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "1539:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1539:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1530:29:4"
														},
														{
															"body": {
																"id": 802,
																"nodeType": "Block",
																"src": "1587:90:4",
																"statements": [
																	{
																		"expression": {
																			"id": 787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 785,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "1605:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 786,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "1609:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1605:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 788,
																		"nodeType": "ExpressionStatement",
																		"src": "1605:5:4"
																	},
																	{
																		"expression": {
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 789,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "1628:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 793,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 760,
																										"src": "1647:1:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 794,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 773,
																										"src": "1650:1:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 792,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										719,
																										758
																									],
																									"referencedDeclaration": 719,
																									"src": "1642:3:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 795,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1642:11:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 796,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 773,
																								"src": "1655:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 791,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 626,
																							"src": "1637:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 797,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1637:20:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 798,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1659:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 790,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						719,
																						758
																					],
																					"referencedDeclaration": 719,
																					"src": "1632:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1632:30:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1628:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 801,
																		"nodeType": "ExpressionStatement",
																		"src": "1628:34:4"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 782,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "1580:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 783,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "1584:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1580:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 803,
															"nodeType": "WhileStatement",
															"src": "1573:104:4"
														}
													]
												}
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1434:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:11:4"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1468:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:8:4"
									},
									"scope": 939,
									"src": "1419:322:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "1862:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 827,
																	"name": "total_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "1889:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 828,
																	"name": "percentage_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "1897:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 826,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "1884:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1884:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31303030",
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1912:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"id": 825,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															719,
															758
														],
														"referencedDeclaration": 719,
														"src": "1879:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1879:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 824,
												"id": 832,
												"nodeType": "Return",
												"src": "1872:46:4"
											}
										]
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentageAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1777:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "percentage_",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1793:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 819,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1775:37:4"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "percentAmount_",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1837:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:26:4"
									},
									"scope": 939,
									"src": "1750:175:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "2105:83:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "total_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "2127:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 847,
																			"name": "total_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 836,
																			"src": "2145:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 848,
																			"name": "percentageToSub_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 838,
																			"src": "2153:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 846,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "2140:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2140:31:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"id": 845,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	719,
																	758
																],
																"referencedDeclaration": 719,
																"src": "2135:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2135:44:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															642,
															669
														],
														"referencedDeclaration": 642,
														"src": "2122:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 842,
												"id": 853,
												"nodeType": "Return",
												"src": "2115:66:4"
											}
										]
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "substractPercentage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "2022:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "percentageToSub_",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "2038:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 837,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2038:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:42:4"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "result_",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "2087:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:19:4"
									},
									"scope": 939,
									"src": "1992:196:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "2297:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 866,
																	"name": "part_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "2323:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2330:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"id": 865,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "2319:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2319:15:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 869,
															"name": "total_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "2337:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 864,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															719,
															758
														],
														"referencedDeclaration": 719,
														"src": "2314:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 863,
												"id": 871,
												"nodeType": "Return",
												"src": "2307:38:4"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentageOfTotal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "part_",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2222:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:33:4"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "percent_",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2278:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2276:20:4"
									},
									"scope": 939,
									"src": "2194:158:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "2620:119:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 883,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "2692:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2696:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2692:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 886,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2691:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 887,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "2702:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2706:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2702:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 890,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2701:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2691:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 894,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 892,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 876,
																					"src": "2713:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 893,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2717:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2713:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 895,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 878,
																					"src": "2721:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2725:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2721:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2713:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 899,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2712:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2730:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2712:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 902,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2711:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2691:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 882,
												"id": 904,
												"nodeType": "Return",
												"src": "2684:48:4"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "2358:186:4",
										"text": " Taken from Hypersonic https://github.com/M2629/HyperSonic/blob/main/Math.sol\n @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "2566:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "2577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2565:22:4"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "2611:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:9:4"
									},
									"scope": 939,
									"src": "2549:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "2844:61:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 917,
																	"name": "multiplier_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "2873:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 918,
																	"name": "payment_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "2886:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 916,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "2868:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2868:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 915,
														"name": "sqrrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "2861:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2861:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 914,
												"id": 921,
												"nodeType": "Return",
												"src": "2854:44:4"
											}
										]
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quadraticPricing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "payment_",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "2772:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "multiplier_",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "2790:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:41:4"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "2835:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:9:4"
									},
									"scope": 939,
									"src": "2745:160:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "3003:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 933,
															"name": "multiplier_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "3023:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 934,
															"name": "supply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "3036:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 932,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3018:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3018:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 931,
												"id": 936,
												"nodeType": "Return",
												"src": "3011:34:4"
											}
										]
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bondingCurve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "supply_",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "multiplier_",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2949:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:40:4"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2994:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:9:4"
									},
									"scope": 939,
									"src": "2909:141:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 940,
							"src": "175:2877:4"
						}
					],
					"src": "79:2975:4"
				},
				"id": 4
			},
			"contracts/sOHM.sol": {
				"ast": {
					"absolutePath": "contracts/sOHM.sol",
					"exportedSymbols": {
						"Address": [
							550
						],
						"Counters": [
							599
						],
						"ERC20": [
							2316
						],
						"ERC20Permit": [
							2486
						],
						"IERC20": [
							76
						],
						"IERC2612Permit": [
							105
						],
						"IOwnable": [
							964
						],
						"Ownable": [
							1093
						],
						"SafeMath": [
							939
						],
						"sOlympus": [
							1821
						]
					},
					"id": 1822,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 941,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:5"
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 942,
							"nodeType": "ImportDirective",
							"scope": 1822,
							"sourceUnit": 940,
							"src": "137:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Address.sol",
							"file": "./libraries/Address.sol",
							"id": 943,
							"nodeType": "ImportDirective",
							"scope": 1822,
							"sourceUnit": 551,
							"src": "172:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Counters.sol",
							"file": "./libraries/Counters.sol",
							"id": 944,
							"nodeType": "ImportDirective",
							"scope": 1822,
							"sourceUnit": 600,
							"src": "206:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 945,
							"nodeType": "ImportDirective",
							"scope": 1822,
							"sourceUnit": 77,
							"src": "241:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/types/ERC20Permit.sol",
							"file": "./types/ERC20Permit.sol",
							"id": 946,
							"nodeType": "ImportDirective",
							"scope": 1822,
							"sourceUnit": 2487,
							"src": "275:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "311:563:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": false,
							"id": 964,
							"linearizedBaseContracts": [
								964
							],
							"name": "IOwnable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "481c6a75",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "manager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "919:2:5"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "945:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:9:5"
									},
									"scope": 964,
									"src": "903:51:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "089208d8",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "996:0:5"
									},
									"scope": 964,
									"src": "958:39:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46f68ee9",
									"id": 960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1028:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:21:5"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:0:5"
									},
									"scope": 964,
									"src": "1003:54:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a96ac0a",
									"id": 963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:2:5"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1097:0:5"
									},
									"scope": 964,
									"src": "1063:35:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1822,
							"src": "880:220:5"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 965,
										"name": "IOwnable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 964,
										"src": "1122:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOwnable_$964",
											"typeString": "contract IOwnable"
										}
									},
									"id": 966,
									"nodeType": "InheritanceSpecifier",
									"src": "1122:8:5"
								}
							],
							"contractDependencies": [
								964
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1093,
							"linearizedBaseContracts": [
								1093,
								964
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 968,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "1138:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 967,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1138:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 970,
									"mutability": "mutable",
									"name": "_newOwner",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "1167:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 969,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1167:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 976,
									"name": "OwnershipPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1222:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1253:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:57:5"
									},
									"src": "1200:79:5"
								},
								{
									"anonymous": false,
									"id": 982,
									"name": "OwnershipPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1306:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1337:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:57:5"
									},
									"src": "1284:79:5"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "1384:88:5",
										"statements": [
											{
												"expression": {
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "1394:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 986,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "1403:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1403:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1394:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "1394:19:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1453:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1445:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 991,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1445:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1445:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 995,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1457:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 990,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "1428:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1428:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "EmitStatement",
												"src": "1423:42:5"
											}
										]
									},
									"id": 999,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:2:5"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1384:0:5"
									},
									"scope": 1093,
									"src": "1369:103:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										952
									],
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "1536:30:5",
										"statements": [
											{
												"expression": {
													"id": 1005,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 968,
													"src": "1553:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1004,
												"id": 1006,
												"nodeType": "Return",
												"src": "1546:13:5"
											}
										]
									},
									"functionSelector": "481c6a75",
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "manager",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1001,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1509:8:5"
									},
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1494:2:5"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1527:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:9:5"
									},
									"scope": 1093,
									"src": "1478:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "1595:95:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1011,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "1614:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1012,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "1624:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1624:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1614:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1636:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1010,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1605:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1605:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "1605:67:5"
											},
											{
												"id": 1018,
												"nodeType": "PlaceholderStatement",
												"src": "1682:1:5"
											}
										]
									},
									"id": 1020,
									"name": "onlyManager",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1592:2:5"
									},
									"src": "1572:118:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "1764:88:5",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1027,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1796:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1812:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1804:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1028,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1804:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1804:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1026,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "1779:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "EmitStatement",
												"src": "1774:42:5"
											},
											{
												"expression": {
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1034,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "1826:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1843:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1835:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1035,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1835:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1835:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1826:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "1826:19:5"
											}
										]
									},
									"functionSelector": "089208d8",
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1024,
											"modifierName": {
												"id": 1023,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1020,
												"src": "1750:11:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1750:13:5"
										}
									],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1022,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1741:8:5"
									},
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1723:2:5"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1764:0:5"
									},
									"scope": 1093,
									"src": "1696:156:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										960
									],
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "1941:174:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1051,
																"name": "newOwner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "1960:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1981:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1973:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1052,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1973:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1973:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1960:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1985:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1050,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1951:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "1951:75:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1061,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "2058:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "newOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "2066:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1060,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "2041:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2041:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "EmitStatement",
												"src": "2036:41:5"
											},
											{
												"expression": {
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1065,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "2087:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1066,
														"name": "newOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "2099:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2087:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "2087:21:5"
											}
										]
									},
									"functionSelector": "46f68ee9",
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1048,
											"modifierName": {
												"id": 1047,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1020,
												"src": "1927:11:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1927:13:5"
										}
									],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1046,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1918:8:5"
									},
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1883:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1881:21:5"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1941:0:5"
									},
									"scope": 1093,
									"src": "1858:257:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										963
									],
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "2175:167:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1075,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2194:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2194:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1077,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "2208:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2194:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2219:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															},
															"value": "Ownable: must be new owner to pull"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															}
														],
														"id": 1074,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2185:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2185:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "2185:71:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1083,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "2288:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "2296:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1082,
														"name": "OwnershipPulled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "2271:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2271:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "EmitStatement",
												"src": "2266:41:5"
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1087,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "2317:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1088,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "2326:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2317:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "2317:18:5"
											}
										]
									},
									"functionSelector": "5a96ac0a",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1072,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2166:8:5"
									},
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2148:2:5"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2175:0:5"
									},
									"scope": 1093,
									"src": "2125:217:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1822,
							"src": "1102:1242:5"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1094,
										"name": "ERC20Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2486,
										"src": "2367:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Permit_$2486",
											"typeString": "contract ERC20Permit"
										}
									},
									"id": 1095,
									"nodeType": "InheritanceSpecifier",
									"src": "2367:11:5"
								},
								{
									"baseName": {
										"id": 1096,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1093,
										"src": "2380:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1093",
											"typeString": "contract Ownable"
										}
									},
									"id": 1097,
									"nodeType": "InheritanceSpecifier",
									"src": "2380:7:5"
								}
							],
							"contractDependencies": [
								76,
								105,
								964,
								1093,
								2316,
								2486
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1821,
							"linearizedBaseContracts": [
								1821,
								1093,
								964,
								2486,
								105,
								2316,
								76
							],
							"name": "sOlympus",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1100,
									"libraryName": {
										"id": 1098,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 939,
										"src": "2401:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$939",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2395:27:5",
									"typeName": {
										"id": 1099,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2414:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "2459:68:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1103,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2478:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2478:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1105,
																"name": "stakingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "2492:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2478:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2469:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2469:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "2469:40:5"
											},
											{
												"id": 1109,
												"nodeType": "PlaceholderStatement",
												"src": "2519:1:5"
											}
										]
									},
									"id": 1111,
									"name": "onlyStakingContract",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2456:2:5"
									},
									"src": "2428:99:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ee99205c",
									"id": 1113,
									"mutability": "mutable",
									"name": "stakingContract",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "2533:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1112,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2533:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ce110d7",
									"id": 1115,
									"mutability": "mutable",
									"name": "initializer",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "2569:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1114,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2569:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1123,
									"name": "LogSupply",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "2618:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2618:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "2641:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "2660:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2617:64:5"
									},
									"src": "2602:80:5"
								},
								{
									"anonymous": false,
									"id": 1131,
									"name": "LogRebase",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2704:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": false,
												"mutability": "mutable",
												"name": "rebase",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2743:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:56:5"
									},
									"src": "2687:72:5"
								},
								{
									"anonymous": false,
									"id": 1135,
									"name": "LogStakingContractUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakingContract",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "2797:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:27:5"
									},
									"src": "2764:59:5"
								},
								{
									"canonicalName": "sOlympus.Rebase",
									"id": 1150,
									"members": [
										{
											"constant": false,
											"id": 1137,
											"mutability": "mutable",
											"name": "epoch",
											"nodeType": "VariableDeclaration",
											"scope": 1150,
											"src": "2853:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1136,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2853:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1139,
											"mutability": "mutable",
											"name": "rebase",
											"nodeType": "VariableDeclaration",
											"scope": 1150,
											"src": "2873:11:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1138,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2873:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1141,
											"mutability": "mutable",
											"name": "totalStakedBefore",
											"nodeType": "VariableDeclaration",
											"scope": 1150,
											"src": "2909:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1140,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2909:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1143,
											"mutability": "mutable",
											"name": "totalStakedAfter",
											"nodeType": "VariableDeclaration",
											"scope": 1150,
											"src": "2941:21:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1142,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2941:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1145,
											"mutability": "mutable",
											"name": "amountRebased",
											"nodeType": "VariableDeclaration",
											"scope": 1150,
											"src": "2972:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1144,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2972:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 1150,
											"src": "3000:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1146,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3000:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "blockNumberOccured",
											"nodeType": "VariableDeclaration",
											"scope": 1150,
											"src": "3020:23:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3020:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Rebase",
									"nodeType": "StructDefinition",
									"scope": 1821,
									"src": "2829:221:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73c69eb7",
									"id": 1153,
									"mutability": "mutable",
									"name": "rebases",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "3055:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Rebase_$1150_storage_$dyn_storage",
										"typeString": "struct sOlympus.Rebase[]"
									},
									"typeName": {
										"baseType": {
											"id": 1151,
											"name": "Rebase",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1150,
											"src": "3055:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Rebase_$1150_storage_ptr",
												"typeString": "struct sOlympus.Rebase"
											}
										},
										"id": 1152,
										"nodeType": "ArrayTypeName",
										"src": "3055:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Rebase_$1150_storage_$dyn_storage_ptr",
											"typeString": "struct sOlympus.Rebase[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2df75cb1",
									"id": 1155,
									"mutability": "mutable",
									"name": "INDEX",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "3085:17:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1154,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3085:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1162,
									"mutability": "constant",
									"name": "MAX_UINT256",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "3109:50:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3109:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1161,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "3148:11:5",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3157:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1158,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "3149:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:5",
													"typeDescriptions": {}
												}
											},
											"id": 1160,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3149:10:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1169,
									"mutability": "constant",
									"name": "INITIAL_FRAGMENTS_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "3165:67:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3165:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										},
										"id": 1168,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35303030303030",
											"id": 1164,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3217:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5000000_by_1",
												"typeString": "int_const 5000000"
											},
											"value": "5000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 1167,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1165,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3227:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 1166,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3231:1:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "3227:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "3217:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1177,
									"mutability": "constant",
									"name": "TOTAL_GONS",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "3412:92:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1170,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3412:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1176,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1171,
											"name": "MAX_UINT256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1162,
											"src": "3450:11:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "MAX_UINT256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "3465:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1173,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "3479:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3465:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1175,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "3464:40:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3450:54:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1184,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "3582:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1178,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3582:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1183,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "3620:11:5",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3629:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1180,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "3621:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint128_$",
													"typeString": "type(uint128)"
												},
												"typeName": {
													"id": 1179,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3621:7:5",
													"typeDescriptions": {}
												}
											},
											"id": 1182,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3621:10:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1186,
									"mutability": "mutable",
									"name": "_gonsPerFragment",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "3654:32:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1185,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3654:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1190,
									"mutability": "mutable",
									"name": "_gonBalances",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "3692:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1189,
										"keyType": {
											"id": 1187,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3700:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3692:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1188,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3711:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1196,
									"mutability": "mutable",
									"name": "_allowedValue",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "3747:75:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1195,
										"keyType": {
											"id": 1191,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3757:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3747:53:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1194,
											"keyType": {
												"id": 1192,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3778:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3768:30:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1193,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3789:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "3892:147:5",
										"statements": [
											{
												"expression": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1206,
														"name": "initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "3902:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1207,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "3916:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3916:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3902:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "3902:24:5"
											},
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1211,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "3936:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1212,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "3951:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3936:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "3936:39:5"
											},
											{
												"expression": {
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1215,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "3985:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1218,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "4019:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1216,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "4004:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 719,
															"src": "4004:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4004:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3985:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "3985:47:5"
											}
										]
									},
									"id": 1223,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5374616b6564204f6c796d707573",
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3849:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_160563d5e45bd2d38a59e1d8c9b2de3959abd8b5800722606b884bf092f59dd7",
														"typeString": "literal_string \"Staked Olympus\""
													},
													"value": "Staked Olympus"
												},
												{
													"hexValue": "734f484d",
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3867:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a7e7eb95bb3e87e8dfaa679c27e8e813bf0f9c0b9b260e19a0ebfd934d15679b",
														"typeString": "literal_string \"sOHM\""
													},
													"value": "sOHM"
												},
												{
													"hexValue": "39",
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3875:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												}
											],
											"id": 1202,
											"modifierName": {
												"id": 1198,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2316,
												"src": "3843:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$2316_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3843:34:5"
										},
										{
											"arguments": [],
											"id": 1204,
											"modifierName": {
												"id": 1203,
												"name": "ERC20Permit",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2486,
												"src": "3878:11:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Permit_$2486_$",
													"typeString": "type(contract ERC20Permit)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3878:13:5"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3840:2:5"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3892:0:5"
									},
									"scope": 1821,
									"src": "3829:210:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "4119:397:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1231,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "4138:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4138:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1233,
																"name": "initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "4152:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4138:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4129:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4129:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "4129:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1238,
																"name": "stakingContract_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "4184:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4212:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4204:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1239,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4204:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4204:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4184:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4175:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4175:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "4175:41:5"
											},
											{
												"expression": {
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1246,
														"name": "stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "4226:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1247,
														"name": "stakingContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "4244:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4226:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "4226:34:5"
											},
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1250,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "4270:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1252,
														"indexExpression": {
															"id": 1251,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "4284:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4270:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1253,
														"name": "TOTAL_GONS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "4304:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4270:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "4270:44:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307830",
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4348:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4340:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1257,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4340:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4340:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1261,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "4354:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1262,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "4371:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1256,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "4330:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "EmitStatement",
												"src": "4325:60:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1266,
															"name": "stakingContract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4427:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1265,
														"name": "LogStakingContractUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "4400:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4400:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "EmitStatement",
												"src": "4395:50:5"
											},
											{
												"expression": {
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1269,
														"name": "initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "4464:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1270,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4478:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4478:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4464:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "4464:24:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4505:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1229,
												"id": 1277,
												"nodeType": "Return",
												"src": "4498:11:5"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "stakingContract_",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "4066:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4066:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:28:5"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "4112:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4112:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4110:8:5"
									},
									"scope": 1821,
									"src": "4045:471:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "4595:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1289,
																"name": "INDEX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "4614:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4623:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4614:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4605:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4605:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "4605:21:5"
											},
											{
												"expression": {
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1294,
														"name": "INDEX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "4636:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1296,
																"name": "_INDEX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "4660:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1295,
															"name": "gonsForBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "4644:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4644:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4636:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "4636:32:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4685:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1287,
												"id": 1301,
												"nodeType": "Return",
												"src": "4678:11:5"
											}
										]
									},
									"functionSelector": "40a5737f",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1284,
											"modifierName": {
												"id": 1283,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1020,
												"src": "4564:11:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4564:13:5"
										}
									],
									"name": "setIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "_INDEX",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "4541:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4541:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4539:15:5"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "4588:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4588:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:8:5"
									},
									"scope": 1821,
									"src": "4522:174:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "4957:772:5",
										"statements": [
											{
												"assignments": [
													1316
												],
												"declarations": [
													{
														"constant": false,
														"id": 1316,
														"mutability": "mutable",
														"name": "rebaseAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1395,
														"src": "4967:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1315,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4967:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1317,
												"nodeType": "VariableDeclarationStatement",
												"src": "4967:20:5"
											},
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "circulatingSupply_",
														"nodeType": "VariableDeclaration",
														"scope": 1395,
														"src": "4997:26:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4997:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1320,
														"name": "circulatingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "5026:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5026:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4997:48:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1323,
														"name": "profit_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "5061:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5072:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5061:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1343,
															"name": "circulatingSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "5250:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5271:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5250:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1361,
														"nodeType": "Block",
														"src": "5373:47:5",
														"statements": [
															{
																"expression": {
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1357,
																		"name": "rebaseAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "5387:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1358,
																		"name": "profit_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "5402:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5387:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1360,
																"nodeType": "ExpressionStatement",
																"src": "5387:22:5"
															}
														]
													},
													"id": 1362,
													"nodeType": "IfStatement",
													"src": "5245:175:5",
													"trueBody": {
														"id": 1356,
														"nodeType": "Block",
														"src": "5274:93:5",
														"statements": [
															{
																"expression": {
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1346,
																		"name": "rebaseAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "5288:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1352,
																				"name": "circulatingSupply_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1319,
																				"src": "5336:18:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1349,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1847,
																						"src": "5316:12:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1347,
																						"name": "profit_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1306,
																						"src": "5303:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1348,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 703,
																					"src": "5303:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5303:27:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 719,
																			"src": "5303:31:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5303:53:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5288:68:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1355,
																"nodeType": "ExpressionStatement",
																"src": "5288:68:5"
															}
														]
													}
												},
												"id": 1363,
												"nodeType": "IfStatement",
												"src": "5056:364:5",
												"trueBody": {
													"id": 1342,
													"nodeType": "Block",
													"src": "5076:163:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1327,
																		"name": "epoch_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "5106:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1328,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "5114:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5114:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1330,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "5131:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1326,
																	"name": "LogSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "5095:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5095:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1332,
															"nodeType": "EmitStatement",
															"src": "5090:55:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1334,
																		"name": "epoch_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "5175:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5183:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1336,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1517,
																			"src": "5186:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5186:7:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1333,
																	"name": "LogRebase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "5164:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5164:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1339,
															"nodeType": "EmitStatement",
															"src": "5159:36:5"
														},
														{
															"expression": {
																"id": 1340,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "5216:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1314,
															"id": 1341,
															"nodeType": "Return",
															"src": "5209:19:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1364,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "5430:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1367,
																"name": "rebaseAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1316,
																"src": "5463:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1365,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "5445:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "5445:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5445:32:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5430:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "5430:47:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1371,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "5493:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1372,
														"name": "MAX_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "5508:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5493:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1379,
												"nodeType": "IfStatement",
												"src": "5488:83:5",
												"trueBody": {
													"id": 1378,
													"nodeType": "Block",
													"src": "5521:50:5",
													"statements": [
														{
															"expression": {
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1374,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "5535:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1375,
																	"name": "MAX_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "5550:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5535:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1377,
															"nodeType": "ExpressionStatement",
															"src": "5535:25:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1380,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "5581:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1383,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "5616:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1381,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "5600:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 719,
															"src": "5600:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5600:30:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5581:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1386,
												"nodeType": "ExpressionStatement",
												"src": "5581:49:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1388,
															"name": "circulatingSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "5655:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1389,
															"name": "profit_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "5675:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1390,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "5684:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1387,
														"name": "_storeRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "5641:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,uint256) returns (bool)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "5641:51:5"
											},
											{
												"expression": {
													"id": 1393,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1847,
													"src": "5710:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1314,
												"id": 1394,
												"nodeType": "Return",
												"src": "5703:19:5"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "4702:153:5",
										"text": "@notice increases sOHM supply to increase staking balances relative to profit_\n@param profit_ uint256\n@return uint256"
									},
									"functionSelector": "058ecdb4",
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1311,
											"modifierName": {
												"id": 1310,
												"name": "onlyStakingContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1111,
												"src": "4915:19:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4915:21:5"
										}
									],
									"name": "rebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "profit_",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "4877:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "4894:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4894:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4875:32:5"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "4947:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4947:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4945:11:5"
									},
									"scope": 1821,
									"src": "4860:869:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "6023:576:5",
										"statements": [
											{
												"assignments": [
													1409
												],
												"declarations": [
													{
														"constant": false,
														"id": 1409,
														"mutability": "mutable",
														"name": "rebasePercent",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "6033:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1408,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6033:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1417,
												"initialValue": {
													"arguments": [
														{
															"id": 1415,
															"name": "previousCirculating_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "6079:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6067:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 1410,
																	"name": "profit_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "6054:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 703,
																"src": "6054:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6054:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 719,
														"src": "6054:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6054:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6033:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1422,
																	"name": "epoch_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "6156:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1423,
																	"name": "rebasePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "6184:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1424,
																	"name": "previousCirculating_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "6245:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1425,
																		"name": "circulatingSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "6297:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6297:19:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1427,
																	"name": "profit_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "6345:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1428,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "6373:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6373:7:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1430,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "6414:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "6414:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1421,
																"name": "Rebase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "6126:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Rebase_$1150_storage_ptr_$",
																	"typeString": "type(struct sOlympus.Rebase storage pointer)"
																}
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"epoch",
																"rebase",
																"totalStakedBefore",
																"totalStakedAfter",
																"amountRebased",
																"index",
																"blockNumberOccured"
															],
															"nodeType": "FunctionCall",
															"src": "6126:311:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Rebase_$1150_memory_ptr",
																"typeString": "struct sOlympus.Rebase memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Rebase_$1150_memory_ptr",
																"typeString": "struct sOlympus.Rebase memory"
															}
														],
														"expression": {
															"id": 1418,
															"name": "rebases",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "6112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Rebase_$1150_storage_$dyn_storage",
																"typeString": "struct sOlympus.Rebase storage ref[] storage ref"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6112:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Rebase_$1150_storage_$returns$__$",
															"typeString": "function (struct sOlympus.Rebase storage ref)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6112:326:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "6112:326:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1436,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "6473:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1437,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "6481:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6481:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1439,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "6498:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1435,
														"name": "LogSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "6462:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6462:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "EmitStatement",
												"src": "6457:55:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1443,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "6538:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1444,
															"name": "rebasePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "6546:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1445,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "6561:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6561:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1442,
														"name": "LogRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "6527:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6527:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "EmitStatement",
												"src": "6522:48:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6588:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1407,
												"id": 1450,
												"nodeType": "Return",
												"src": "6581:11:5"
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "5735:179:5",
										"text": "@notice emits event with data about rebase\n@param previousCirculating_ uint\n@param profit_ uint\n@param epoch_ uint\n@return bool"
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_storeRebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "previousCirculating_",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "5942:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "profit_",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "5969:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5969:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "5983:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5983:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5940:56:5"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "6016:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6014:8:5"
									},
									"scope": 1821,
									"src": "5919:680:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1927
									],
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "6680:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1464,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "6722:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1460,
																"name": "_gonBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "6697:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1462,
															"indexExpression": {
																"id": 1461,
																"name": "who",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "6711:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6697:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 719,
														"src": "6697:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6697:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1459,
												"id": 1466,
												"nodeType": "Return",
												"src": "6690:50:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1456,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6651:8:5"
									},
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "6625:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6625:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:15:5"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "6670:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6670:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6668:11:5"
									},
									"scope": 1821,
									"src": "6605:142:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "6821:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1477,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "6850:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1475,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "6838:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 703,
														"src": "6838:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6838:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1474,
												"id": 1479,
												"nodeType": "Return",
												"src": "6831:37:5"
											}
										]
									},
									"functionSelector": "1bd39674",
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gonsForBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "6778:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6778:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6776:15:5"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "6814:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6814:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6812:8:5"
									},
									"scope": 1821,
									"src": "6753:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "6947:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1490,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "6974:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1488,
															"name": "gons",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "6964:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 719,
														"src": "6964:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6964:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1487,
												"id": 1492,
												"nodeType": "Return",
												"src": "6957:35:5"
											}
										]
									},
									"functionSelector": "7965d56d",
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceForGons",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "gons",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "6906:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6906:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6904:13:5"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "6940:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6940:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6938:8:5"
									},
									"scope": 1821,
									"src": "6881:118:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "7105:72:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1502,
																	"name": "stakingContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "7151:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1501,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1468
																],
																"referencedDeclaration": 1468,
																"src": "7140:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7140:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1499,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "7122:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 642,
														"src": "7122:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7122:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1505,
												"nodeType": "Return",
												"src": "7115:55:5"
											}
										]
									},
									"functionSelector": "9358928b",
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "circulatingSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7073:2:5"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "7098:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7098:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7096:8:5"
									},
									"scope": 1821,
									"src": "7047:130:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "7229:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1513,
															"name": "INDEX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "7262:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1512,
														"name": "balanceForGons",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "7246:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7246:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1511,
												"id": 1515,
												"nodeType": "Return",
												"src": "7239:30:5"
											}
										]
									},
									"functionSelector": "2986c0e5",
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7197:2:5"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "7222:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7222:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7220:8:5"
									},
									"scope": 1821,
									"src": "7183:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1948
									],
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "7360:280:5",
										"statements": [
											{
												"assignments": [
													1528
												],
												"declarations": [
													{
														"constant": false,
														"id": 1528,
														"mutability": "mutable",
														"name": "gonValue",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "7370:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7370:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1533,
												"initialValue": {
													"arguments": [
														{
															"id": 1531,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "7400:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1529,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "7389:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 703,
														"src": "7389:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7389:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7370:48:5"
											},
											{
												"expression": {
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1534,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "7428:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1537,
														"indexExpression": {
															"expression": {
																"id": 1535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7442:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7442:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7428:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1543,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "7489:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1538,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "7457:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1541,
																"indexExpression": {
																	"expression": {
																		"id": 1539,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "7471:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7471:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7457:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 642,
															"src": "7457:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7457:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7428:71:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "7428:71:5"
											},
											{
												"expression": {
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1547,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "7509:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1549,
														"indexExpression": {
															"id": 1548,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "7523:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7509:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1554,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "7554:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1550,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "7530:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1552,
																"indexExpression": {
																	"id": 1551,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "7544:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7530:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "7530:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7530:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7509:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "7509:55:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1559,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7589:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7589:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1561,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "7601:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1562,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "7605:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1558,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "7579:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7579:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1564,
												"nodeType": "EmitStatement",
												"src": "7574:38:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7629:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1526,
												"id": 1566,
												"nodeType": "Return",
												"src": "7622:11:5"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1523,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7336:8:5"
									},
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "7301:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7301:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "7313:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7313:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7299:29:5"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "7354:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7354:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7353:6:5"
									},
									"scope": 1821,
									"src": "7282:358:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1966
									],
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "7741:58:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1578,
															"name": "_allowedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "7758:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1580,
														"indexExpression": {
															"id": 1579,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "7773:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7758:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1582,
													"indexExpression": {
														"id": 1581,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "7783:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7758:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1577,
												"id": 1583,
												"nodeType": "Return",
												"src": "7751:41:5"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1574,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7712:8:5"
									},
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "7666:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7666:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "7682:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7682:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7664:35:5"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "7731:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7731:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7729:11:5"
									},
									"scope": 1821,
									"src": "7646:153:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2025
									],
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "7903:429:5",
										"statements": [
											{
												"expression": {
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1597,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "7912:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1601,
															"indexExpression": {
																"id": 1598,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "7927:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7912:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1602,
														"indexExpression": {
															"expression": {
																"id": 1599,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7935:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7935:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7912:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1610,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "7991:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1603,
																		"name": "_allowedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "7950:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1605,
																	"indexExpression": {
																		"id": 1604,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1587,
																		"src": "7965:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7950:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1608,
																"indexExpression": {
																	"expression": {
																		"id": 1606,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "7973:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7973:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7950:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 642,
															"src": "7950:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7950:48:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7912:86:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "7912:86:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1615,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "8022:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1616,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "8028:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8028:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1618,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "8041:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1620,
																"indexExpression": {
																	"id": 1619,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1587,
																	"src": "8056:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8041:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1623,
															"indexExpression": {
																"expression": {
																	"id": 1621,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "8064:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8064:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8041:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1614,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "8012:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8012:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "EmitStatement",
												"src": "8007:71:5"
											},
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "gonValue",
														"nodeType": "VariableDeclaration",
														"scope": 1662,
														"src": "8089:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8089:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1631,
												"initialValue": {
													"arguments": [
														{
															"id": 1629,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "8124:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1628,
														"name": "gonsForBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "8108:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8108:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8089:42:5"
											},
											{
												"expression": {
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1632,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "8141:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1634,
														"indexExpression": {
															"id": 1633,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "8155:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8141:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1639,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "8188:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1635,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "8164:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1637,
																"indexExpression": {
																	"id": 1636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1587,
																	"src": "8177:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8164:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 642,
															"src": "8164:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8164:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8141:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "8141:57:5"
											},
											{
												"expression": {
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1643,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "8208:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1645,
														"indexExpression": {
															"id": 1644,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "8222:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8208:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1650,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "8251:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1646,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "8229:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1648,
																"indexExpression": {
																	"id": 1647,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "8242:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8229:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "8229:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8229:32:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8208:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "8208:53:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1655,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "8286:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1656,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "8292:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "8296:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1654,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "8276:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8276:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "EmitStatement",
												"src": "8271:32:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8321:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1596,
												"id": 1661,
												"nodeType": "Return",
												"src": "8314:11:5"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1593,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7877:8:5"
									},
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "7828:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7828:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "7842:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "7854:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7854:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7826:43:5"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "7896:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1594,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7896:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7894:8:5"
									},
									"scope": 1821,
									"src": "7805:527:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1987
									],
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "8420:140:5",
										"statements": [
											{
												"expression": {
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1673,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "8431:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1677,
															"indexExpression": {
																"expression": {
																	"id": 1674,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "8446:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8446:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8431:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1678,
														"indexExpression": {
															"id": 1676,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "8460:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8431:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1679,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "8472:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8431:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1681,
												"nodeType": "ExpressionStatement",
												"src": "8431:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1683,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "8503:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8503:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1685,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "8515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1686,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "8524:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1682,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "8493:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8493:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1688,
												"nodeType": "EmitStatement",
												"src": "8488:43:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8549:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1672,
												"id": 1690,
												"nodeType": "Return",
												"src": "8542:11:5"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1669,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8396:8:5"
									},
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "8356:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8356:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "8373:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8373:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8354:34:5"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "8414:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8414:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8413:6:5"
									},
									"scope": 1821,
									"src": "8338:222:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2304
									],
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "8695:102:5",
										"statements": [
											{
												"expression": {
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1702,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "8705:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1705,
															"indexExpression": {
																"id": 1703,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "8719:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8705:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1706,
														"indexExpression": {
															"id": 1704,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "8726:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8705:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1707,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1698,
														"src": "8737:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8705:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "8705:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1711,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "8767:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1712,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "8774:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1713,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "8783:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1710,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "8757:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8757:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "EmitStatement",
												"src": "8752:38:5"
											}
										]
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1700,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8678:8:5"
									},
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "8621:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8621:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "8636:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "8653:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8653:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8619:49:5"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8695:0:5"
									},
									"scope": 1821,
									"src": "8602:195:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2053
									],
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "8900:221:5",
										"statements": [
											{
												"expression": {
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1727,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "8910:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1731,
															"indexExpression": {
																"expression": {
																	"id": 1728,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "8925:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8925:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8910:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1732,
														"indexExpression": {
															"id": 1730,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "8939:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8910:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1740,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "8995:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1733,
																		"name": "_allowedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "8951:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1736,
																	"indexExpression": {
																		"expression": {
																			"id": 1734,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "8966:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8966:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8951:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1738,
																"indexExpression": {
																	"id": 1737,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "8980:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8951:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "8951:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8951:56:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8910:97:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "8910:97:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1745,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "9032:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9032:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1747,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "9044:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1748,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "9053:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1751,
																"indexExpression": {
																	"expression": {
																		"id": 1749,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "9068:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9068:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9053:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1753,
															"indexExpression": {
																"id": 1752,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "9082:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9053:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1744,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "9022:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9022:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1755,
												"nodeType": "EmitStatement",
												"src": "9017:76:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9110:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1726,
												"id": 1757,
												"nodeType": "Return",
												"src": "9103:11:5"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1723,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8876:8:5"
									},
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "8831:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8831:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "8848:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8848:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8829:39:5"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "8894:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8894:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8893:6:5"
									},
									"scope": 1821,
									"src": "8803:318:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2082
									],
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "9229:393:5",
										"statements": [
											{
												"assignments": [
													1770
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "oldValue",
														"nodeType": "VariableDeclaration",
														"scope": 1819,
														"src": "9239:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9239:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1777,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1771,
															"name": "_allowedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "9258:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1774,
														"indexExpression": {
															"expression": {
																"id": 1772,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "9273:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9273:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9258:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1776,
													"indexExpression": {
														"id": 1775,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "9287:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9258:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9239:57:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1778,
														"name": "subtractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "9310:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1779,
														"name": "oldValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "9329:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9310:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1803,
													"nodeType": "Block",
													"src": "9412:97:5",
													"statements": [
														{
															"expression": {
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1791,
																			"name": "_allowedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1196,
																			"src": "9426:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1795,
																		"indexExpression": {
																			"expression": {
																				"id": 1792,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "9441:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9441:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9426:27:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1796,
																	"indexExpression": {
																		"id": 1794,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "9455:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9426:38:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1799,
																			"name": "subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1763,
																			"src": "9481:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1797,
																			"name": "oldValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1770,
																			"src": "9467:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 642,
																		"src": "9467:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9467:31:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9426:72:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1802,
															"nodeType": "ExpressionStatement",
															"src": "9426:72:5"
														}
													]
												},
												"id": 1804,
												"nodeType": "IfStatement",
												"src": "9306:203:5",
												"trueBody": {
													"id": 1790,
													"nodeType": "Block",
													"src": "9339:67:5",
													"statements": [
														{
															"expression": {
																"id": 1788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1781,
																			"name": "_allowedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1196,
																			"src": "9353:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1785,
																		"indexExpression": {
																			"expression": {
																				"id": 1782,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "9368:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9368:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9353:27:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1786,
																	"indexExpression": {
																		"id": 1784,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "9382:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9353:38:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9394:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9353:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1789,
															"nodeType": "ExpressionStatement",
															"src": "9353:42:5"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1806,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "9533:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9533:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1808,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "9545:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1809,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "9554:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1812,
																"indexExpression": {
																	"expression": {
																		"id": 1810,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "9569:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9569:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9554:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1814,
															"indexExpression": {
																"id": 1813,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "9583:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9554:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1805,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "9523:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9523:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1816,
												"nodeType": "EmitStatement",
												"src": "9518:76:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9611:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1768,
												"id": 1818,
												"nodeType": "Return",
												"src": "9604:11:5"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1765,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9205:8:5"
									},
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "9155:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9155:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "9172:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9172:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9153:44:5"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "9223:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9223:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9222:6:5"
									},
									"scope": 1821,
									"src": "9127:495:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1822,
							"src": "2346:7278:5"
						}
					],
					"src": "113:9511:5"
				},
				"id": 5
			},
			"contracts/types/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/types/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							2316
						],
						"IERC20": [
							76
						],
						"SafeMath": [
							939
						]
					},
					"id": 2317,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1823,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "72:23:6"
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 1824,
							"nodeType": "ImportDirective",
							"scope": 2317,
							"sourceUnit": 77,
							"src": "96:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "../libraries/SafeMath.sol",
							"id": 1825,
							"nodeType": "ImportDirective",
							"scope": 2317,
							"sourceUnit": 940,
							"src": "131:35:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1826,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 76,
										"src": "197:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$76",
											"typeString": "contract IERC20"
										}
									},
									"id": 1827,
									"nodeType": "InheritanceSpecifier",
									"src": "197:6:6"
								}
							],
							"contractDependencies": [
								76
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2316,
							"linearizedBaseContracts": [
								2316,
								76
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1830,
									"libraryName": {
										"id": 1828,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 939,
										"src": "215:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$939",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "209:27:6",
									"typeName": {
										"id": 1829,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "228:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1835,
									"mutability": "constant",
									"name": "ERC20TOKEN_ERC1820_INTERFACE_ID",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "277:84:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1831,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "277:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4552433230546f6b656e",
												"id": 1833,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "347:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												},
												"value": "ERC20Token"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												}
											],
											"id": 1832,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "336:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1834,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "336:25:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1839,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "393:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1838,
										"keyType": {
											"id": 1836,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "402:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "393:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1837,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "413:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1845,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "468:70:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1844,
										"keyType": {
											"id": 1840,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "477:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "468:49:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1843,
											"keyType": {
												"id": 1841,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "497:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "488:28:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1842,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "508:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1847,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "566:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1846,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "566:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1849,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "623:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1848,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "623:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1851,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "676:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1850,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "676:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1853,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 2316,
									"src": "731:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1852,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "731:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "1132:74:6",
										"statements": [
											{
												"expression": {
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1863,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "1138:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1864,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "1146:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1138:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "1138:13:6"
											},
											{
												"expression": {
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1867,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "1157:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1868,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1858,
														"src": "1167:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1157:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1870,
												"nodeType": "ExpressionStatement",
												"src": "1157:17:6"
											},
											{
												"expression": {
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1871,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "1180:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1872,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1860,
														"src": "1192:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1180:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "1180:21:6"
											}
										]
									},
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "760:295:6",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1876,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1071:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1855,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1071:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1092:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1092:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1115:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1859,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1115:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:61:6"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1132:0:6"
									},
									"scope": 2316,
									"src": "1058:148:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1884,
										"nodeType": "Block",
										"src": "1338:23:6",
										"statements": [
											{
												"expression": {
													"id": 1882,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1849,
													"src": "1351:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1881,
												"id": 1883,
												"nodeType": "Return",
												"src": "1344:12:6"
											}
										]
									},
									"documentation": {
										"id": 1877,
										"nodeType": "StructuredDocumentation",
										"src": "1210:50:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1299:2:6"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "1323:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1879,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1323:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:6"
									},
									"scope": 2316,
									"src": "1286:75:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "1541:25:6",
										"statements": [
											{
												"expression": {
													"id": 1891,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1851,
													"src": "1554:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1890,
												"id": 1892,
												"nodeType": "Return",
												"src": "1547:14:6"
											}
										]
									},
									"documentation": {
										"id": 1886,
										"nodeType": "StructuredDocumentation",
										"src": "1365:96:6",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1502:2:6"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "1526:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1888,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1526:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1525:15:6"
									},
									"scope": 2316,
									"src": "1487:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1902,
										"nodeType": "Block",
										"src": "2232:27:6",
										"statements": [
											{
												"expression": {
													"id": 1900,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1853,
													"src": "2245:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1899,
												"id": 1901,
												"nodeType": "Return",
												"src": "2238:16:6"
											}
										]
									},
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "1570:588:6",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:6"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "2225:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1897,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2225:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:7:6"
									},
									"scope": 2316,
									"src": "2184:75:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										7
									],
									"body": {
										"id": 1912,
										"nodeType": "Block",
										"src": "2396:30:6",
										"statements": [
											{
												"expression": {
													"id": 1910,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1847,
													"src": "2409:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1909,
												"id": 1911,
												"nodeType": "Return",
												"src": "2402:19:6"
											}
										]
									},
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "2263:45:6",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1906,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2369:8:6"
									},
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:6"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "2387:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2386:9:6"
									},
									"scope": 2316,
									"src": "2334:92:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										15
									],
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "2582:36:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1922,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "2595:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1924,
													"indexExpression": {
														"id": 1923,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "2605:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2595:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1921,
												"id": 1925,
												"nodeType": "Return",
												"src": "2588:25:6"
											}
										]
									},
									"documentation": {
										"id": 1914,
										"nodeType": "StructuredDocumentation",
										"src": "2430:43:6",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1918,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2555:8:6"
									},
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "2518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2517:17:6"
									},
									"returnParameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "2573:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:9:6"
									},
									"scope": 2316,
									"src": "2499:119:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "2962:68:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1939,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2978:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2978:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1941,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "2990:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1942,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "3001:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1938,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "2968:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2968:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1944,
												"nodeType": "ExpressionStatement",
												"src": "2968:40:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3021:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1937,
												"id": 1946,
												"nodeType": "Return",
												"src": "3014:11:6"
											}
										]
									},
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "2622:178:6",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1934,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2938:8:6"
									},
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2888:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2907:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2907:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:35:6"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2956:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2956:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2955:6:6"
									},
									"scope": 2316,
									"src": "2870:160:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										35
									],
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "3211:51:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1959,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "3228:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1961,
														"indexExpression": {
															"id": 1960,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "3240:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3228:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1963,
													"indexExpression": {
														"id": 1962,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1953,
														"src": "3247:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3228:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1958,
												"id": 1964,
												"nodeType": "Return",
												"src": "3221:34:6"
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "3036:47:6",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1955,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3184:8:6"
									},
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "3132:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "3147:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3147:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:32:6"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "3202:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:9:6"
									},
									"scope": 2316,
									"src": "3113:149:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										45
									],
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "3514:75:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1978,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3533:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3533:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1980,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "3545:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1981,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "3554:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1977,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "3524:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3524:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1983,
												"nodeType": "ExpressionStatement",
												"src": "3524:37:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3578:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1976,
												"id": 1985,
												"nodeType": "Return",
												"src": "3571:11:6"
											}
										]
									},
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "3268:127:6",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1973,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3490:8:6"
									},
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "3442:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "3459:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3459:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3441:33:6"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "3508:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1974,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3508:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3507:6:6"
									},
									"scope": 2316,
									"src": "3425:164:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										57
									],
									"body": {
										"id": 2024,
										"nodeType": "Block",
										"src": "4193:201:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2001,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "4213:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2002,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1992,
															"src": "4221:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2003,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "4232:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2000,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "4203:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4203:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2005,
												"nodeType": "ExpressionStatement",
												"src": "4203:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2007,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "4258:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2008,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4266:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4266:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 2017,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1994,
																	"src": "4314:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 2018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4322:42:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2010,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "4278:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2012,
																		"indexExpression": {
																			"id": 2011,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "4290:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4278:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2015,
																	"indexExpression": {
																		"expression": {
																			"id": 2013,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "4298:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4298:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4278:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 669,
																"src": "4278:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4278:87:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2006,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "4249:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:117:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2021,
												"nodeType": "ExpressionStatement",
												"src": "4249:117:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4383:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1999,
												"id": 2023,
												"nodeType": "Return",
												"src": "4376:11:6"
											}
										]
									},
									"documentation": {
										"id": 1988,
										"nodeType": "StructuredDocumentation",
										"src": "3595:456:6",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 2025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1996,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4169:8:6"
									},
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "4103:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "4119:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4119:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "4138:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4138:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:51:6"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "4187:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4187:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:6:6"
									},
									"scope": 2316,
									"src": "4081:313:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "4883:117:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2036,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4902:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4902:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2038,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "4914:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2046,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2030,
																	"src": "4960:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2039,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "4923:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2042,
																		"indexExpression": {
																			"expression": {
																				"id": 2040,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "4935:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4935:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4923:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2044,
																	"indexExpression": {
																		"id": 2043,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2028,
																		"src": "4947:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4923:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 626,
																"src": "4923:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4923:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2035,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "4893:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4893:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2049,
												"nodeType": "ExpressionStatement",
												"src": "4893:79:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4989:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2034,
												"id": 2051,
												"nodeType": "Return",
												"src": "4982:11:6"
											}
										]
									},
									"documentation": {
										"id": 2026,
										"nodeType": "StructuredDocumentation",
										"src": "4400:384:6",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "4816:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "4833:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4815:37:6"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "4877:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4877:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4876:6:6"
									},
									"scope": 2316,
									"src": "4789:211:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "5586:163:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2064,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5605:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5605:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2066,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "5617:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2074,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "5663:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5680:39:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2067,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "5626:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2070,
																		"indexExpression": {
																			"expression": {
																				"id": 2068,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "5638:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5638:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5626:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2072,
																	"indexExpression": {
																		"id": 2071,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "5650:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5626:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 669,
																"src": "5626:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5626:94:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2063,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "5596:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5596:125:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2078,
												"nodeType": "ExpressionStatement",
												"src": "5596:125:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5738:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2062,
												"id": 2080,
												"nodeType": "Return",
												"src": "5731:11:6"
											}
										]
									},
									"documentation": {
										"id": 2054,
										"nodeType": "StructuredDocumentation",
										"src": "5006:476:6",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 2082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "5514:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5514:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "5531:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5531:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5513:42:6"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "5580:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2060,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5580:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5579:6:6"
									},
									"scope": 2316,
									"src": "5487:262:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "6280:417:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2093,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "6294:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6312:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6304:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2094,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6304:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6304:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6294:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6316:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 2092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6286:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2101,
												"nodeType": "ExpressionStatement",
												"src": "6286:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2103,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "6370:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6391:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6383:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2104,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6383:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6383:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6370:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6395:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 2102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6362:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6362:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2111,
												"nodeType": "ExpressionStatement",
												"src": "6362:71:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2113,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "6461:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2114,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "6469:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2115,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "6480:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2112,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2315,
														"src": "6440:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6440:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2117,
												"nodeType": "ExpressionStatement",
												"src": "6440:47:6"
											},
											{
												"expression": {
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2118,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "6494:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2120,
														"indexExpression": {
															"id": 2119,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "6504:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6494:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2125,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "6536:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6544:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2121,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "6514:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2123,
																"indexExpression": {
																	"id": 2122,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "6524:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6514:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 669,
															"src": "6514:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6514:71:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6494:91:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "6494:91:6"
											},
											{
												"expression": {
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2130,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "6591:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2132,
														"indexExpression": {
															"id": 2131,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "6601:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6591:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2137,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "6639:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2133,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "6614:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2135,
																"indexExpression": {
																	"id": 2134,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2087,
																	"src": "6624:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6614:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "6614:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6614:32:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6591:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2140,
												"nodeType": "ExpressionStatement",
												"src": "6591:55:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2142,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "6666:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2143,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "6674:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2144,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "6685:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2141,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "6657:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6657:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2146,
												"nodeType": "EmitStatement",
												"src": "6652:40:6"
											}
										]
									},
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "5753:437:6",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "6212:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6212:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "6228:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6228:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "6247:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6247:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6211:51:6"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6280:0:6"
									},
									"scope": 2316,
									"src": "6193:504:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2202,
										"nodeType": "Block",
										"src": "7061:326:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2157,
																"name": "account_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2151,
																"src": "7079:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7099:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7091:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2158,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7091:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7091:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7079:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7103:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 2156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7071:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7071:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2165,
												"nodeType": "ExpressionStatement",
												"src": "7071:66:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2169,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7177:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$2316",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$2316",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7168:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2167,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7168:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7168:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2171,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "7185:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2172,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "7195:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2166,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2315,
														"src": "7147:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7147:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2174,
												"nodeType": "ExpressionStatement",
												"src": "7147:57:6"
											},
											{
												"expression": {
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2175,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "7214:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2178,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2153,
																"src": "7246:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2176,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "7229:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "7229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7229:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7214:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2181,
												"nodeType": "ExpressionStatement",
												"src": "7214:41:6"
											},
											{
												"expression": {
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2182,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "7265:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2184,
														"indexExpression": {
															"id": 2183,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "7275:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7265:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2189,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2153,
																"src": "7311:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2185,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "7287:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2187,
																"indexExpression": {
																	"id": 2186,
																	"name": "account_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2151,
																	"src": "7297:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7287:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "7287:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7287:33:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7265:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2192,
												"nodeType": "ExpressionStatement",
												"src": "7265:55:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2196,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7353:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$2316",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$2316",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7344:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7344:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7344:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2198,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "7361:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2199,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "7371:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2193,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "7335:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7335:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2201,
												"nodeType": "EmitStatement",
												"src": "7330:50:6"
											}
										]
									},
									"documentation": {
										"id": 2149,
										"nodeType": "StructuredDocumentation",
										"src": "6703:260:6",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 2203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "7008:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "ammount_",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "7026:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7007:36:6"
									},
									"returnParameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7061:0:6"
									},
									"scope": 2316,
									"src": "6993:394:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2258,
										"nodeType": "Block",
										"src": "7797:345:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2212,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "7815:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7834:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7826:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2213,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7826:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7826:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7815:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7838:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 2211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7807:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7807:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2220,
												"nodeType": "ExpressionStatement",
												"src": "7807:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2222,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "7906:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7923:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7915:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2223,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7915:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7915:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2227,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "7927:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2221,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2315,
														"src": "7885:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7885:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2229,
												"nodeType": "ExpressionStatement",
												"src": "7885:49:6"
											},
											{
												"expression": {
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2230,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "7945:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2232,
														"indexExpression": {
															"id": 2231,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "7955:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7945:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2237,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "7989:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7997:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2233,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "7966:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2235,
																"indexExpression": {
																	"id": 2234,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "7976:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7966:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 669,
															"src": "7966:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 2239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7966:68:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7945:89:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2241,
												"nodeType": "ExpressionStatement",
												"src": "7945:89:6"
											},
											{
												"expression": {
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2242,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "8044:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2245,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "8076:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2243,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "8059:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 642,
															"src": "8059:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8059:24:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8044:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "8044:39:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2250,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "8107:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8124:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8116:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2251,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8116:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8116:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2255,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "8128:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2249,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "8098:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8098:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2257,
												"nodeType": "EmitStatement",
												"src": "8093:42:6"
											}
										]
									},
									"documentation": {
										"id": 2204,
										"nodeType": "StructuredDocumentation",
										"src": "7393:309:6",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 2259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "7747:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7747:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "7764:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7764:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7746:33:6"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7797:0:6"
									},
									"scope": 2316,
									"src": "7732:410:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2303,
										"nodeType": "Block",
										"src": "8673:257:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2270,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "8691:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8708:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8700:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2271,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8700:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8700:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8691:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8712:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 2269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8683:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8683:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2278,
												"nodeType": "ExpressionStatement",
												"src": "8683:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2280,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2264,
																"src": "8769:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8788:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8780:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8780:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8780:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8769:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8792:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 2279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8761:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8761:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2288,
												"nodeType": "ExpressionStatement",
												"src": "8761:68:6"
											},
											{
												"expression": {
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2289,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "8840:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2292,
															"indexExpression": {
																"id": 2290,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "8852:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8840:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2293,
														"indexExpression": {
															"id": 2291,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "8859:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8840:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2294,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "8870:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8840:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2296,
												"nodeType": "ExpressionStatement",
												"src": "8840:36:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2298,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "8900:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2299,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "8907:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2300,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "8916:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2297,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "8891:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8891:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2302,
												"nodeType": "EmitStatement",
												"src": "8886:37:6"
											}
										]
									},
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "8148:412:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 2304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "8608:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8608:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "8623:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8623:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "8640:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8640:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8607:48:6"
									},
									"returnParameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8673:0:6"
									},
									"scope": 2316,
									"src": "8590:340:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "10149:3:6",
										"statements": []
									},
									"documentation": {
										"id": 2305,
										"nodeType": "StructuredDocumentation",
										"src": "9479:550:6",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "from_",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "10086:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10086:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "to_",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "10101:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10101:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "10114:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10114:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10084:47:6"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10149:0:6"
									},
									"scope": 2316,
									"src": "10055:97:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2317,
							"src": "170:9984:6"
						}
					],
					"src": "72:10082:6"
				},
				"id": 6
			},
			"contracts/types/ERC20Permit.sol": {
				"ast": {
					"absolutePath": "contracts/types/ERC20Permit.sol",
					"exportedSymbols": {
						"Counters": [
							599
						],
						"ERC20": [
							2316
						],
						"ERC20Permit": [
							2486
						],
						"IERC20": [
							76
						],
						"IERC2612Permit": [
							105
						],
						"SafeMath": [
							939
						]
					},
					"id": 2487,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2318,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:7"
						},
						{
							"absolutePath": "contracts/types/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 2319,
							"nodeType": "ImportDirective",
							"scope": 2487,
							"sourceUnit": 2317,
							"src": "70:21:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC2612Permit.sol",
							"file": "../interfaces/IERC2612Permit.sol",
							"id": 2320,
							"nodeType": "ImportDirective",
							"scope": 2487,
							"sourceUnit": 106,
							"src": "92:42:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Counters.sol",
							"file": "../libraries/Counters.sol",
							"id": 2321,
							"nodeType": "ImportDirective",
							"scope": 2487,
							"sourceUnit": 600,
							"src": "135:35:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2322,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2316,
										"src": "205:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$2316",
											"typeString": "contract ERC20"
										}
									},
									"id": 2323,
									"nodeType": "InheritanceSpecifier",
									"src": "205:5:7"
								},
								{
									"baseName": {
										"id": 2324,
										"name": "IERC2612Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 105,
										"src": "212:14:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC2612Permit_$105",
											"typeString": "contract IERC2612Permit"
										}
									},
									"id": 2325,
									"nodeType": "InheritanceSpecifier",
									"src": "212:14:7"
								}
							],
							"contractDependencies": [
								76,
								105,
								2316
							],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 2486,
							"linearizedBaseContracts": [
								2486,
								105,
								2316,
								76
							],
							"name": "ERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2328,
									"libraryName": {
										"id": 2326,
										"name": "Counters",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 599,
										"src": "239:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Counters_$599",
											"typeString": "library Counters"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "233:36:7",
									"typeName": {
										"id": 2327,
										"name": "Counters.Counter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 559,
										"src": "252:16:7",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$559_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 2332,
									"mutability": "mutable",
									"name": "_nonces",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "275:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$559_storage_$",
										"typeString": "mapping(address => struct Counters.Counter)"
									},
									"typeName": {
										"id": 2331,
										"keyType": {
											"id": 2329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "283:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "275:36:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$559_storage_$",
											"typeString": "mapping(address => struct Counters.Counter)"
										},
										"valueType": {
											"id": 2330,
											"name": "Counters.Counter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 559,
											"src": "294:16:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Counter_$559_storage_ptr",
												"typeString": "struct Counters.Counter"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "30adf81f",
									"id": 2335,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "438:108:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2333,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 2334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "480:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3644e515",
									"id": 2337,
									"mutability": "mutable",
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "553:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2336,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "553:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2373,
										"nodeType": "Block",
										"src": "605:397:7",
										"statements": [
											{
												"assignments": [
													2341
												],
												"declarations": [
													{
														"constant": false,
														"id": 2341,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 2373,
														"src": "616:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "616:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2342,
												"nodeType": "VariableDeclarationStatement",
												"src": "616:15:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "650:44:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "664:20:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "675:7:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:9:7"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "664:7:7"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2341,
														"isOffset": false,
														"isSlot": false,
														"src": "664:7:7",
														"valueSize": 1
													}
												],
												"id": 2343,
												"nodeType": "InlineAssembly",
												"src": "641:53:7"
											},
											{
												"expression": {
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2344,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2337,
														"src": "704:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 2349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "767:84:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 2348,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "757:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "757:95:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2354,
																							"name": "name",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1885,
																							"src": "882:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																								"typeString": "function () view returns (string memory)"
																							}
																						},
																						"id": 2355,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "882:6:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 2353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "876:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 2352,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "876:5:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "876:13:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 2351,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "866:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "866:24:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 2361,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "920:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 2360,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "914:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 2359,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "914:5:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "914:10:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 2358,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "904:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "904:21:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2364,
																		"name": "chainID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "950:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2367,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "979:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20Permit_$2486",
																					"typeString": "contract ERC20Permit"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20Permit_$2486",
																					"typeString": "contract ERC20Permit"
																				}
																			],
																			"id": 2366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "971:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2365,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "971:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "971:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2346,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "733:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "733:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "733:261:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2345,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -8,
															"src": "723:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "723:272:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "704:291:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2372,
												"nodeType": "ExpressionStatement",
												"src": "704:291:7"
											}
										]
									},
									"id": 2374,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "602:2:7"
									},
									"returnParameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:0:7"
									},
									"scope": 2486,
									"src": "591:411:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										96
									],
									"body": {
										"id": 2468,
										"nodeType": "Block",
										"src": "1271:550:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2394,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "1289:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1289:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2396,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2383,
																"src": "1308:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1289:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5065726d69743a206578706972656420646561646c696e65",
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1318:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															},
															"value": "Permit: expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															}
														],
														"id": 2393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1281:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1281:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2400,
												"nodeType": "ExpressionStatement",
												"src": "1281:64:7"
											},
											{
												"assignments": [
													2402
												],
												"declarations": [
													{
														"constant": false,
														"id": 2402,
														"mutability": "mutable",
														"name": "hashStruct",
														"nodeType": "VariableDeclaration",
														"scope": 2468,
														"src": "1356:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2401,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1356:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2418,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2406,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2335,
																	"src": "1410:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2407,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2377,
																	"src": "1427:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2408,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2379,
																	"src": "1434:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2409,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2381,
																	"src": "1443:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"baseExpression": {
																				"id": 2410,
																				"name": "_nonces",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2332,
																				"src": "1451:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$559_storage_$",
																					"typeString": "mapping(address => struct Counters.Counter storage ref)"
																				}
																			},
																			"id": 2412,
																			"indexExpression": {
																				"id": 2411,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2377,
																				"src": "1459:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1451:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$559_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 2413,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 570,
																		"src": "1451:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$559_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$559_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1451:24:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2415,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2383,
																	"src": "1477:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2404,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1399:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1399:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1399:87:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2403,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "1389:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1389:98:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1356:131:7"
											},
											{
												"assignments": [
													2420
												],
												"declarations": [
													{
														"constant": false,
														"id": 2420,
														"mutability": "mutable",
														"name": "_hash",
														"nodeType": "VariableDeclaration",
														"scope": 2468,
														"src": "1498:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2419,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1498:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2432,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "307831393031",
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1548:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			},
																			"value": "0x1901"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			}
																		],
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1541:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 2424,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "1541:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1541:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																{
																	"id": 2428,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2337,
																	"src": "1557:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2429,
																	"name": "hashStruct",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "1575:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2422,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1524:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1524:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1524:62:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2421,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "1514:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1514:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1498:89:7"
											},
											{
												"assignments": [
													2434
												],
												"declarations": [
													{
														"constant": false,
														"id": 2434,
														"mutability": "mutable",
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 2468,
														"src": "1598:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2433,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1598:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2441,
												"initialValue": {
													"arguments": [
														{
															"id": 2436,
															"name": "_hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2420,
															"src": "1625:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2437,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "1632:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2438,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "1635:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2439,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "1638:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2435,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "1615:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1615:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1598:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2443,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2434,
																	"src": "1658:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1676:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1668:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2444,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1668:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1668:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "1658:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2449,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2434,
																	"src": "1682:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2450,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2377,
																	"src": "1692:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1682:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1658:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265",
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1699:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee",
																"typeString": "literal_string \"ZeroSwapPermit: Invalid signature\""
															},
															"value": "ZeroSwapPermit: Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee",
																"typeString": "literal_string \"ZeroSwapPermit: Invalid signature\""
															}
														],
														"id": 2442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1650:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1650:85:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2455,
												"nodeType": "ExpressionStatement",
												"src": "1650:85:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 2456,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "1746:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$559_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 2458,
															"indexExpression": {
																"id": 2457,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "1754:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1746:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$559_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2459,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 582,
														"src": "1746:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$559_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$559_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2461,
												"nodeType": "ExpressionStatement",
												"src": "1746:26:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2463,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2377,
															"src": "1791:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2464,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2379,
															"src": "1798:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2465,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "1807:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2462,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "1782:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1782:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2467,
												"nodeType": "ExpressionStatement",
												"src": "1782:32:7"
											}
										]
									},
									"documentation": {
										"id": 2375,
										"nodeType": "StructuredDocumentation",
										"src": "1008:59:7",
										"text": " @dev See {IERC2612Permit-permit}."
									},
									"functionSelector": "d505accf",
									"id": 2469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2391,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1262:8:7"
									},
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1097:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1120:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1145:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1169:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1195:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2384,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1195:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1212:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "1231:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2388,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:159:7"
									},
									"returnParameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1271:0:7"
									},
									"scope": 2486,
									"src": "1072:749:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										104
									],
									"body": {
										"id": 2484,
										"nodeType": "Block",
										"src": "1954:48:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 2478,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "1971:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$559_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 2480,
															"indexExpression": {
																"id": 2479,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "1979:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1971:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$559_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2481,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 570,
														"src": "1971:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$559_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$559_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2477,
												"id": 2483,
												"nodeType": "Return",
												"src": "1964:31:7"
											}
										]
									},
									"documentation": {
										"id": 2470,
										"nodeType": "StructuredDocumentation",
										"src": "1827:52:7",
										"text": " @dev See {IERC2612Permit-nonces}."
									},
									"functionSelector": "7ecebe00",
									"id": 2485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2474,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1927:8:7"
									},
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "1900:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:15:7"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "1945:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:9:7"
									},
									"scope": 2486,
									"src": "1884:118:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2487,
							"src": "172:1832:7"
						}
					],
					"src": "46:1958:7"
				},
				"id": 7
			}
		}
	}
}