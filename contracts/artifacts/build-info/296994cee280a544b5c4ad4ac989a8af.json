{
	"id": "296994cee280a544b5c4ad4ac989a8af",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sOHM.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2021-06-12\n*/\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"./libraries/SafeMath.sol\";\nimport \"./libraries/Address.sol\";\nimport \"./libraries/Counters.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./types/ERC20Permit.sol\";\nimport \"./Ownable.sol\";\n\n\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\n\n\ncontract sOlympus is ERC20Permit, Ownable {\n\n    using SafeMath for uint256;\n\n    // Staking Contract만 호출 할 수 있는 접근제한자 Modifier\n    modifier onlyStakingContract() {\n        require( msg.sender == stakingContract );\n        _;\n    }\n    \n    // stakingContract 주소값 변수\n    address public stakingContract;\n    // initailzier 주소값 변수\n    address public initializer;\n\n\n    event LogSupply(uint256 indexed epoch, uint256 timestamp, uint256 totalSupply );\n    event LogRebase( uint256 indexed epoch, uint256 rebase, uint256 index );\n    event LogStakingContractUpdated( address stakingContract );\n\n    // Rebase 구조체\n    struct Rebase {\n        uint epoch;\n        uint rebase; // 18 decimals\n        uint totalStakedBefore;\n        uint totalStakedAfter;\n        uint amountRebased;\n        uint index;\n        uint blockNumberOccured;\n    }\n\n    // Rebase 구조체 자료형의 배열을 rebases로 선언\n    Rebase[] public rebases;\n\n    uint public INDEX;\n    // uint256 MAX값 = 2 ** 256 - 1 = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    uint256 private constant MAX_UINT256 = ~uint256(0);\n    // sOHM 초기 파편 발행량?? 5백만개\n    uint256 private constant INITIAL_FRAGMENTS_SUPPLY = 5000000 * 10**9;\n\n    // TOTAL_GONS is a multiple of INITIAL_FRAGMENTS_SUPPLY so that _gonsPerFragment is an integer.\n    // Use the highest value that fits in a uint256 for max granularity.\n\n    // ToTAL_GONS = MAX_UINT256 - 4007913129639936\n    uint256 private constant TOTAL_GONS = MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY);\n\n    // MAX_SUPPLY = maximum integer < (sqrt(4*TOTAL_GONS + 1) - 1) / 2\n    // 340282366920938463463374607431768211455 = (2 ** 128) - 1\n    uint256 private constant MAX_SUPPLY = ~uint128(0);  // (2^128) - 1\n\n    uint256 private _gonsPerFragment;\n    mapping(address => uint256) private _gonBalances;\n\n    mapping ( address => mapping ( address => uint256 ) ) private _allowedValue;\n\n    /*  Token 이름 : Staked Olympus\n        Token Symbol : sOHM\n        decimal : 9 초기 값 세팅\n        initializer = 컨트랙트 발행한 사람의 주소\n        총 발행량 = 5000000 * 10 ** 9개\n        _gonsPerFragment = 총 Gons / 총 발행량\n    */\n    constructor() ERC20(\"Staked Olympus\", \"sOHM\", 9) ERC20Permit() {\n        initializer = msg.sender;\n        _totalSupply = INITIAL_FRAGMENTS_SUPPLY;\n        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);\n    }\n\n    /*\n    initialize에 매개변수로 stakingContract 주소값을 넣으면\n    함수 호출을 위한 조건 : 컨트랙트 발행한 사람 이어야함, 매개변수로 넣은 주소는 0x0000000000~~~ 의 주소가 아니어야함\n    stakingContract의 변수 값을 매개변수로 넣은 주소값으로 저장\n    stakingContract의 _gonBalances 값이 TOTAL_GONS로 저장\n    */\n\n    function initialize( address stakingContract_ ) external returns ( bool ) {\n        require( msg.sender == initializer,\"Not owner\" );\n        require( stakingContract_ != address(0) );\n        stakingContract = stakingContract_;\n        _gonBalances[ stakingContract ] = TOTAL_GONS;\n\n        emit Transfer( address(0x0), stakingContract, _totalSupply );\n        emit LogStakingContractUpdated( stakingContract_ );\n        \n        initializer = address(0);\n        return true;\n    }\n\n    function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {\n        require( INDEX == 0 );\n        INDEX = gonsForBalance( _INDEX );\n        return true;\n    }\n\n    /**\n        @notice increases sOHM supply to increase staking balances relative to profit_\n        @param profit_ uint256\n        @return uint256\n     */\n    function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {\n        uint256 rebaseAmount;\n        uint256 circulatingSupply_ = circulatingSupply();\n\n        if ( profit_ == 0 ) {\n            emit LogSupply( epoch_, block.timestamp, _totalSupply );\n            emit LogRebase( epoch_, 0, index() );\n            return _totalSupply;\n        } else if ( circulatingSupply_ > 0 ){\n            rebaseAmount = profit_.mul( _totalSupply ).div( circulatingSupply_ );\n        } else {\n            rebaseAmount = profit_;\n        }\n\n        _totalSupply = _totalSupply.add( rebaseAmount );\n\n        if ( _totalSupply > MAX_SUPPLY ) {\n            _totalSupply = MAX_SUPPLY;\n        }\n\n        _gonsPerFragment = TOTAL_GONS.div( _totalSupply );\n\n        _storeRebase( circulatingSupply_, profit_, epoch_ );\n\n        return _totalSupply;\n    }\n\n    /**\n        @notice emits event with data about rebase\n        @param previousCirculating_ uint\n        @param profit_ uint\n        @param epoch_ uint\n        @return bool\n     */\n    function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {\n        uint rebasePercent = profit_.mul( 1e18 ).div( previousCirculating_ );\n\n        rebases.push( Rebase ( {\n            epoch: epoch_,\n            rebase: rebasePercent, // 18 decimals\n            totalStakedBefore: previousCirculating_,\n            totalStakedAfter: circulatingSupply(),\n            amountRebased: profit_,\n            index: index(),\n            blockNumberOccured: block.number\n        }));\n        \n        emit LogSupply( epoch_, block.timestamp, _totalSupply );\n        emit LogRebase( epoch_, rebasePercent, index() );\n\n        return true;\n    }\n\n    function balanceOf( address who ) public view override returns ( uint256 ) {\n        return _gonBalances[ who ].div( _gonsPerFragment );\n    }\n\n    function gonsForBalance( uint amount ) public view returns ( uint ) {\n        return amount.mul( _gonsPerFragment );\n    }\n\n    function balanceForGons( uint gons ) public view returns ( uint ) {\n        return gons.div( _gonsPerFragment );\n    }\n\n    // Staking contract holds excess sOHM\n    function circulatingSupply() public view returns ( uint ) {\n        return _totalSupply.sub( balanceOf( stakingContract ) );\n    }\n\n    function index() public view returns ( uint ) {\n        return balanceForGons( INDEX );\n    }\n\n    function transfer( address to, uint256 value ) public override returns (bool) {\n        uint256 gonValue = value.mul( _gonsPerFragment );\n        _gonBalances[ msg.sender ] = _gonBalances[ msg.sender ].sub( gonValue );\n        _gonBalances[ to ] = _gonBalances[ to ].add( gonValue );\n        emit Transfer( msg.sender, to, value );\n        return true;\n    }\n\n    function allowance( address owner_, address spender ) public view override returns ( uint256 ) {\n        return _allowedValue[ owner_ ][ spender ];\n    }\n\n    function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {\n       _allowedValue[ from ][ msg.sender ] = _allowedValue[ from ][ msg.sender ].sub( value );\n       emit Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] );\n\n        uint256 gonValue = gonsForBalance( value );\n        _gonBalances[ from ] = _gonBalances[from].sub( gonValue );\n        _gonBalances[ to ] = _gonBalances[to].add( gonValue );\n        emit Transfer( from, to, value );\n\n        return true;\n    }\n\n    function approve( address spender, uint256 value ) public override returns (bool) {\n         _allowedValue[ msg.sender ][ spender ] = value;\n         emit Approval( msg.sender, spender, value );\n         return true;\n    }\n\n    // What gets called in a permit\n    function _approve( address owner, address spender, uint256 value ) internal override virtual {\n        _allowedValue[owner][spender] = value;\n        emit Approval( owner, spender, value );\n    }\n\n    function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {\n        _allowedValue[ msg.sender ][ spender ] = _allowedValue[ msg.sender ][ spender ].add( addedValue );\n        emit Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] );\n        return true;\n    }\n\n    function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {\n        uint256 oldValue = _allowedValue[ msg.sender ][ spender ];\n        if (subtractedValue >= oldValue) {\n            _allowedValue[ msg.sender ][ spender ] = 0;\n        } else {\n            _allowedValue[ msg.sender ][ spender ] = oldValue.sub( subtractedValue );\n        }\n        emit Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] );\n        return true;\n    }\n}"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\nimport \"./interfaces/IOwnable.sol\";\n\ncontract Ownable is IOwnable {\n\n    address internal _owner;\n    address internal _newOwner;\n\n    event OwnershipPushed(address indexed previousOwner, address indexed newOwner);\n    event OwnershipPulled(address indexed previousOwner, address indexed newOwner);\n\n    constructor () {\n        _owner = msg.sender;\n        emit OwnershipPushed( address(0), _owner );\n    }\n\n    function manager() public view override returns (address) {\n        return _owner;\n    }\n\n    modifier onlyManager() {\n        require( _owner == msg.sender, \"Ownable: caller is not the owner\" );\n        _;\n    }\n\n    function renounceManagement() public virtual override onlyManager() {\n        emit OwnershipPushed( _owner, address(0) );\n        _owner = address(0);\n    }\n\n    function pushManagement( address newOwner_ ) public virtual override onlyManager() {\n        require( newOwner_ != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipPushed( _owner, newOwner_ );\n        _newOwner = newOwner_;\n    }\n    \n    function pullManagement() public virtual override {\n        require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\");\n        emit OwnershipPulled( _owner, _newOwner );\n        _owner = _newOwner;\n    }\n}"
			},
			"contracts/types/ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"./ERC20.sol\";\nimport \"../interfaces/IERC2612Permit.sol\";\nimport \"../libraries/Counters.sol\";\n\nabstract contract ERC20Permit is ERC20, IERC2612Permit {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    bytes32 public DOMAIN_SEPARATOR;\n\n    constructor() {\n\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        DOMAIN_SEPARATOR = keccak256(abi.encode(\n            keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n            keccak256(bytes(name())),\n            keccak256(bytes(\"1\")), // Version\n            chainID,\n            address(this)\n        ));\n    }\n\n    /**\n     * @dev See {IERC2612Permit-permit}.\n     *\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"Permit: expired deadline\");\n\n        bytes32 hashStruct =\n            keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline));\n\n        bytes32 _hash = keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct));\n\n        address signer = ecrecover(_hash, v, r, s);\n        require(signer != address(0) && signer == owner, \"ZeroSwapPermit: Invalid signature\");\n\n        _nonces[owner].increment();\n        _approve(owner, spender, amount);\n    }\n\n    /**\n     * @dev See {IERC2612Permit-nonces}.\n     */\n    function nonces(address owner) public view override returns (uint256) {\n        return _nonces[owner].current();\n    }\n}"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\n// File: interfaces/IERC20.sol\n\n\npragma solidity ^0.7.5;\n\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"contracts/libraries/Counters.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"./SafeMath.sol\";\n\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}"
			},
			"contracts/libraries/Address.sol": {
				"content": "// File: libraries/Address.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\n\n// TODO(zx): replace with OZ implementation.\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    // function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n    //     require(address(this).balance >= value, \"Address: insufficient balance for call\");\n    //     return _functionCallWithValue(target, data, value, errorMessage);\n    // }\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n  /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n    function addressToString(address _address) internal pure returns(string memory) {\n        bytes32 _bytes = bytes32(uint256(_address));\n        bytes memory HEX = \"0123456789abcdef\";\n        bytes memory _addr = new bytes(42);\n\n        _addr[0] = '0';\n        _addr[1] = 'x';\n\n        for(uint256 i = 0; i < 20; i++) {\n            _addr[2+i*2] = HEX[uint8(_bytes[i + 12] >> 4)];\n            _addr[3+i*2] = HEX[uint8(_bytes[i + 12] & 0x0f)];\n        }\n\n        return string(_addr);\n\n    }\n}"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// File: libraries/SafeMath.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\n\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\nlibrary SafeMath {\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    // Only used in the  BondingCalculator.sol\n    function sqrrt(uint256 a) internal pure returns (uint c) {\n        if (a > 3) {\n            c = a;\n            uint b = add( div( a, 2), 1 );\n            while (b < c) {\n                c = b;\n                b = div( add( div( a, b ), b), 2 );\n            }\n        } else if (a != 0) {\n            c = 1;\n        }\n    }   \n\n    function percentageAmount( uint256 total_, uint8 percentage_ ) internal pure returns ( uint256 percentAmount_ ) {\n        return div( mul( total_, percentage_ ), 1000 );\n    }\n\n    /*\n     * Expects percentage to be trailed by 00,\n    */\n    function substractPercentage( uint256 total_, uint8 percentageToSub_ ) internal pure returns ( uint256 result_ ) {\n        return sub( total_, div( mul( total_, percentageToSub_ ), 1000 ) );\n    }\n\n    function percentageOfTotal( uint256 part_, uint256 total_ ) internal pure returns ( uint256 percent_ ) {\n        return div( mul(part_, 100) , total_ );\n    }\n\n    /**\n     * Taken from Hypersonic https://github.com/M2629/HyperSonic/blob/main/Math.sol\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n\n    function quadraticPricing( uint256 payment_, uint256 multiplier_ ) internal pure returns (uint256) {\n        return sqrrt( mul( multiplier_, payment_ ) );\n    }\n\n  function bondingCurve( uint256 supply_, uint256 multiplier_ ) internal pure returns (uint256) {\n      return mul( multiplier_, supply_ );\n  }\n}\n\n"
			},
			"contracts/interfaces/IERC2612Permit.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\n\ninterface IERC2612Permit {\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current ERC2612 nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n}"
			},
			"contracts/types/ERC20.sol": {
				"content": "// File: types/ERC20.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"../interfaces/IERC20.sol\";\nimport \"../libraries/SafeMath.sol\";\n\n\n\nabstract contract ERC20 is IERC20 {\n\n  using SafeMath for uint256;\n\n  // TODO comment actual hash value.\n  bytes32 constant private ERC20TOKEN_ERC1820_INTERFACE_ID = keccak256( \"ERC20Token\" );\n    \n  // Present in ERC777\n  mapping (address => uint256) internal _balances;\n\n  // Present in ERC777\n  mapping (address => mapping (address => uint256)) internal _allowances;\n\n  // Present in ERC777\n  uint256 internal _totalSupply;\n\n  // Present in ERC777\n  string internal _name;\n    \n  // Present in ERC777\n  string internal _symbol;\n    \n  // Present in ERC777\n  uint8 internal _decimals;\n\n  /**\n   * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n   * a default value of 18.\n   *\n   * To select a different value for {decimals}, use {_setupDecimals}.\n   *\n   * All three of these values are immutable: they can only be set once during\n   * construction.\n   */\n  constructor (string memory name_, string memory symbol_, uint8 decimals_) {\n    _name = name_;\n    _symbol = symbol_;\n    _decimals = decimals_;\n  }\n\n  /**\n   * @dev Returns the name of the token.\n   */\n  // Present in ERC777\n  function name() public view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev Returns the symbol of the token, usually a shorter version of the\n   * name.\n   */\n  // Present in ERC777\n  function symbol() public view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n   * @dev Returns the number of decimals used to get its user representation.\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\n   * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n   *\n   * Tokens usually opt for a value of 18, imitating the relationship between\n   * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n   * called.\n   *\n   * NOTE: This information is only used for _display_ purposes: it in\n   * no way affects any of the arithmetic of the contract, including\n   * {IERC20-balanceOf} and {IERC20-transfer}.\n   */\n  // Present in ERC777\n  function decimals() public view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev See {IERC20-totalSupply}.\n   */\n  // Present in ERC777\n  function totalSupply() public view override returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {IERC20-balanceOf}.\n   */\n  // Present in ERC777\n  function balanceOf(address account) public view virtual override returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {IERC20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  // Overrideen in ERC777\n  // Confirm that this behavior changes \n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n    _transfer(msg.sender, recipient, amount);\n    return true;\n  }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    // Present in ERC777\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    // Present in ERC777\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    // Present in ERC777\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n    require(sender != address(0), \"ERC20: transfer from the zero address\");\n    require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n    _beforeTokenTransfer(sender, recipient, amount);\n\n    _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    // Present in ERC777\n    function _mint(address account_, uint256 ammount_) internal virtual {\n        require(account_ != address(0), \"ERC20: mint to the zero address\");\n        _beforeTokenTransfer(address( this ), account_, ammount_);\n        _totalSupply = _totalSupply.add(ammount_);\n        _balances[account_] = _balances[account_].add(ammount_);\n        emit Transfer(address( this ), account_, ammount_);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    // Present in ERC777\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    // Present in ERC777\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    // Considering deprication to reduce size of bytecode as changing _decimals to internal acheived the same functionality.\n    // function _setupDecimals(uint8 decimals_) internal {\n    //     _decimals = decimals_;\n    // }\n\n  /**\n   * @dev Hook that is called before any transfer of tokens. This includes\n   * minting and burning.\n   *\n   * Calling conditions:\n   *\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n   * will be to transferred to `to`.\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n   * - `from` and `to` are never both zero.\n   *\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n   */\n  // Present in ERC777\n  function _beforeTokenTransfer( address from_, address to_, uint256 amount_ ) internal virtual { }\n}"
			},
			"contracts/interfaces/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\ninterface IOwnable {\n  function manager() external view returns (address);\n\n  function renounceManagement() external;\n  \n  function pushManagement( address newOwner_ ) external;\n  \n  function pullManagement() external;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":108:1350  contract Ownable is IOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":375:478  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":409:419  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":400:406  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":400:419  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":463:469  _owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":434:471  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":459:460  0 */\n  0x00\n    /* \"contracts/Ownable.sol\":434:471  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":108:1350  contract Ownable is IOwnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":108:1350  contract Ownable is IOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x089208d8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x481c6a75\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5a96ac0a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":702:858  function renounceManagement() public virtual override onlyManager() {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Ownable.sol\":864:1121  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/Ownable.sol\":484:572  function manager() public view override returns (address) {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1131:1348  function pullManagement() public virtual override {... */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/Ownable.sol\":702:858  function renounceManagement() public virtual override onlyManager() {... */\n    tag_8:\n        /* \"contracts/Ownable.sol\":630:640  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":620:640  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":620:626  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":620:640  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":611:678  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"contracts/Ownable.sol\":818:819  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":785:822  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":802:808  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":785:822  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":849:850  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":832:838  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":832:851  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":702:858  function renounceManagement() public virtual override onlyManager() {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":864:1121  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_11:\n        /* \"contracts/Ownable.sol\":630:640  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":620:640  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":620:626  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":620:640  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":611:678  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/Ownable.sol\":987:988  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":966:989  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":966:975  newOwner_ */\n      dup2\n        /* \"contracts/Ownable.sol\":966:989  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":957:1032  require( newOwner_ != address(0), \"Ownable: new owner is the zero address\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/Ownable.sol\":1072:1081  newOwner_ */\n      dup1\n        /* \"contracts/Ownable.sol\":1047:1083  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1064:1070  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1047:1083  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1105:1114  newOwner_ */\n      dup1\n        /* \"contracts/Ownable.sol\":1093:1102  _newOwner */\n      0x01\n      0x00\n        /* \"contracts/Ownable.sol\":1093:1114  _newOwner = newOwner_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":864:1121  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":484:572  function manager() public view override returns (address) {... */\n    tag_13:\n        /* \"contracts/Ownable.sol\":533:540  address */\n      0x00\n        /* \"contracts/Ownable.sol\":559:565  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":552:565  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":484:572  function manager() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1131:1348  function pullManagement() public virtual override {... */\n    tag_15:\n        /* \"contracts/Ownable.sol\":1214:1223  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1200:1223  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1200:1210  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1200:1223  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1191:1262  require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/Ownable.sol\":1302:1311  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1277:1313  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1294:1300  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1277:1313  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1332:1341  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1323:1329  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":1323:1341  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":1131:1348  function pullManagement() public virtual override {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n\n    auxdata: 0xa26469706673582212206c150af68763b00cd08ced63c693bd7cd6231c719fc31969a254a4cf4f2e9cd764736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36106ae806100db6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089208d81461005157806346f68ee91461005b578063481c6a751461009f5780635a96ac0a146100d3575b600080fd5b6100596100dd565b005b61009d6004803603602081101561007157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025c565b005b6100a7610461565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100db61048a565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461019e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106316026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806106576022913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca26469706673582212206c150af68763b00cd08ced63c693bd7cd6231c719fc31969a254a4cf4f2e9cd764736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6AE DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89208D8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x631 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x657 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0xA26469706673582212206C150A 0xF6 DUP8 PUSH4 0xB00CD08C 0xED PUSH4 0xC693BD7C 0xD6 0x23 SHR PUSH18 0x9FC31969A254A4CF4F2E9CD764736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "108:1242:0:-:0;;;375:103;;;;;;;;;;409:10;400:6;;:19;;;;;;;;;;;;;;;;;;463:6;;;;;;;;;;434:37;;459:1;434:37;;;;;;;;;;;;108:1242;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089208d81461005157806346f68ee91461005b578063481c6a751461009f5780635a96ac0a146100d3575b600080fd5b6100596100dd565b005b61009d6004803603602081101561007157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025c565b005b6100a7610461565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100db61048a565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461019e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106316026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806106576022913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca26469706673582212206c150af68763b00cd08ced63c693bd7cd6231c719fc31969a254a4cf4f2e9cd764736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89208D8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x631 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x657 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0xA26469706673582212206C150A 0xF6 DUP8 PUSH4 0xB00CD08C 0xED PUSH4 0xC693BD7C 0xD6 0x23 SHR PUSH18 0x9FC31969A254A4CF4F2E9CD764736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "108:1242:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:156;;;:::i;:::-;;864:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;484:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1131:217;;;:::i;:::-;;702:156;630:10;620:20;;:6;;;;;;;;;;:20;;;611:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;818:1:::1;785:37;;802:6;::::0;::::1;;;;;;;;785:37;;;;;;;;;;;;849:1;832:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;702:156::o:0;864:257::-;630:10;620:20;;:6;;;;;;;;;;:20;;;611:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:1:::1;966:23;;:9;:23;;;;957:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1072:9;1047:36;;1064:6;::::0;::::1;;;;;;;;1047:36;;;;;;;;;;;;1105:9;1093;;:21;;;;;;;;;;;;;;;;;;864:257:::0;:::o;484:88::-;533:7;559:6;;;;;;;;;;;552:13;;484:88;:::o;1131:217::-;1214:9;;;;;;;;;;;1200:23;;:10;:23;;;1191:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1302:9;;;;;;;;;;;1277:36;;1294:6;;;;;;;;;;1277:36;;;;;;;;;;;;1332:9;;;;;;;;;;;1323:6;;:18;;;;;;;;;;;;;;;;;;1131:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "342000",
								"executionCost": "23624",
								"totalCost": "365624"
							},
							"external": {
								"manager()": "1077",
								"pullManagement()": "infinite",
								"pushManagement(address)": "infinite",
								"renounceManagement()": "24234"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 108,
									"end": 1350,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 108,
									"end": 1350,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 108,
									"end": 1350,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 375,
									"end": 478,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 375,
									"end": 478,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 375,
									"end": 478,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 375,
									"end": 478,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 375,
									"end": 478,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 375,
									"end": 478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 375,
									"end": 478,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 375,
									"end": 478,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 375,
									"end": 478,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 375,
									"end": 478,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 375,
									"end": 478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 409,
									"end": 419,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 400,
									"end": 406,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 406,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 400,
									"end": 419,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 400,
									"end": 419,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 400,
									"end": 419,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 469,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 463,
									"end": 469,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 463,
									"end": 469,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 434,
									"end": 471,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 459,
									"end": 460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 434,
									"end": 471,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 434,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 434,
									"end": 471,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 434,
									"end": 471,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 1350,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 108,
									"end": 1350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 108,
									"end": 1350,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 108,
									"end": 1350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 1350,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 108,
									"end": 1350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 1350,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206c150af68763b00cd08ced63c693bd7cd6231c719fc31969a254a4cf4f2e9cd764736f6c63430007050033",
									".code": [
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "89208D8"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "46F68EE9"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "481C6A75"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "5A96AC0A"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 108,
											"end": 1350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 702,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 858,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 640,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 818,
											"end": 819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 785,
											"end": 822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 785,
											"end": 822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 785,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 849,
											"end": 850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 832,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 832,
											"end": 851,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 832,
											"end": 851,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 832,
											"end": 851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 858,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 640,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 987,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 989,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 966,
											"end": 989,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1093,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 559,
											"end": 565,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 559,
											"end": 565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 552,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1210,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH data",
											"source": 0,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "PUSH",
											"source": 0,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c"
									}
								}
							}
						},
						"methodIdentifiers": {
							"manager()": "481c6a75",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xc06b738394e17f021133584ce4d7fff480d90e9fcacf2605c22e6a3b31c1cb94\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e140b3042cc6c26467e60a0c78fd5a1e86fbe956ef6d8dbab07da22467641c04\",\"dweb:/ipfs/QmZPNj1VkWVmaWpu3CwB7hHq8oiAdyiPsPiEeCcz79KSMq\"]},\"contracts/interfaces/IOwnable.sol\":{\"keccak256\":\"0xcbe7146e57c25291f32af9e051e9c3a15f42f79f25c2fbef37a667dd82e00357\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://648792fddf1a8dc11deb4973ee579ae8cf66ce084f37c5b956c2157fb951e832\",\"dweb:/ipfs/QmNS7Jn8tGipLFmbm7MLGsMMrXMBENbvnYENK45SBnSkeG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 8,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC2612Permit.sol": {
				"IERC2612Permit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC2612Permit.sol\":\"IERC2612Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC2612Permit.sol\":{\"keccak256\":\"0x2b28bfc4e0621eb60b914917dc916cc08ba97eee0a3b06d98fe56ff9ce2c0d59\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b5ddc8c3db72e2cd69a8defcc016910454578b7f46899a7ce0bdec603e58640\",\"dweb:/ipfs/QmYNhiaGjMdGXhooPCTxW3AYNWFii9WSkUcR4KkPqvRM3S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"manager()": "481c6a75",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IOwnable.sol\":{\"keccak256\":\"0xcbe7146e57c25291f32af9e051e9c3a15f42f79f25c2fbef37a667dd82e00357\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://648792fddf1a8dc11deb4973ee579ae8cf66ce084f37c5b956c2157fb951e832\",\"dweb:/ipfs/QmNS7Jn8tGipLFmbm7MLGsMMrXMBENbvnYENK45SBnSkeG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Address.sol\":149:9619  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Address.sol\":149:9619  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x5FE0C6F99DEA5E 0xAA CHAINID PUSH13 0xCD5A2E5C35138FB5FE40169983 0xC1 ORIGIN 0x1E 0x4E RETURNDATASIZE PUSH13 0xEC7A64736F6C63430007050033 ",
							"sourceMap": "149:9470:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x5FE0C6F99DEA5E 0xAA CHAINID PUSH13 0xCD5A2E5C35138FB5FE40169983 0xC1 ORIGIN 0x1E 0x4E RETURNDATASIZE PUSH13 0xEC7A64736F6C63430007050033 ",
							"sourceMap": "149:9470:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"addressToString(address)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033",
									".code": [
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Counters.sol\":96:944  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Counters.sol\":96:944  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220887312eb5d827a2dd9b8affac8617c307d0992ed131f50d26cfcac0c6b3dac2e64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220887312eb5d827a2dd9b8affac8617c307d0992ed131f50d26cfcac0c6b3dac2e64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH20 0x12EB5D827A2DD9B8AFFAC8617C307D0992ED131F POP 0xD2 PUSH13 0xFCAC0C6B3DAC2E64736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "96:848:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220887312eb5d827a2dd9b8affac8617c307d0992ed131f50d26cfcac0c6b3dac2e64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH20 0x12EB5D827A2DD9B8AFFAC8617C307D0992ED131F POP 0xD2 PUSH13 0xFCAC0C6B3DAC2E64736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "96:848:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 96,
									"end": 944,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220887312eb5d827a2dd9b8affac8617c307d0992ed131f50d26cfcac0c6b3dac2e64736f6c63430007050033",
									".code": [
										{
											"begin": 96,
											"end": 944,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 96,
											"end": 944,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 96,
											"end": 944,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 96,
											"end": 944,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 96,
											"end": 944,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 944,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 96,
											"end": 944,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 944,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 96,
											"end": 944,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Counters.sol\":{\"keccak256\":\"0x7803a8db31ab4407c907b44536f70e1c460835997bb31cdf67a7f8ed0edf7f9e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://a6b92404baa42cc67f22266ea5f6967cc1039b1443f9743a151b78994ee97820\",\"dweb:/ipfs/Qmdm7doaGJN599BEQCrmY6VKNSynmYrzhYnBK9LK9mXnJo\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":175:3052  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":175:3052  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 0x4C 0x4C PUSH14 0xFF67B13F174443E5BDD67E29FD1D 0xE3 0xDA CALLDATACOPY PUSH16 0x2A96F1346627D2D79E64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "175:2877:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 0x4C 0x4C PUSH14 0xFF67B13F174443E5BDD67E29FD1D 0xE3 0xDA CALLDATACOPY PUSH16 0x2A96F1346627D2D79E64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "175:2877:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"bondingCurve(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"percentageAmount(uint256,uint8)": "infinite",
								"percentageOfTotal(uint256,uint256)": "infinite",
								"quadraticPricing(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"substractPercentage(uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
									".code": [
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/sOHM.sol": {
				"sOlympus": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rebase",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "LogRebase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "stakingContract",
									"type": "address"
								}
							],
							"name": "LogStakingContractUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"name": "LogSupply",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gons",
									"type": "uint256"
								}
							],
							"name": "balanceForGons",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "circulatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "gonsForBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingContract_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initializer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "profit_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "epoch_",
									"type": "uint256"
								}
							],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rebases",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rebase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedBefore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountRebased",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockNumberOccured",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_INDEX",
									"type": "uint256"
								}
							],
							"name": "setIndex",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC2612Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC2612Permit-permit}."
							},
							"rebase(uint256,uint256)": {
								"params": {
									"profit_": "uint256"
								},
								"returns": {
									"_0": "uint256"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":902:9384  contract sOlympus is ERC20Permit, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/sOHM.sol\":3182:3392  constructor() ERC20(\"Staked Olympus\", \"sOHM\", 9) ERC20Permit() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/types/ERC20.sol\":1058:1206  constructor (string memory name_, string memory symbol_, uint8 decimals_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x5374616b6564204f6c796d707573000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x734f484d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/sOHM.sol\":3228:3229  9 */\n  0x09\n    /* \"contracts/types/ERC20.sol\":1146:1151  name_ */\n  dup3\n    /* \"contracts/types/ERC20.sol\":1138:1143  _name */\n  0x03\n    /* \"contracts/types/ERC20.sol\":1138:1151  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/types/ERC20.sol\":1167:1174  symbol_ */\n  dup2\n    /* \"contracts/types/ERC20.sol\":1157:1164  _symbol */\n  0x04\n    /* \"contracts/types/ERC20.sol\":1157:1174  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/types/ERC20.sol\":1192:1201  decimals_ */\n  dup1\n    /* \"contracts/types/ERC20.sol\":1180:1189  _decimals */\n  0x05\n  0x00\n    /* \"contracts/types/ERC20.sol\":1180:1201  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/types/ERC20.sol\":1058:1206  constructor (string memory name_, string memory symbol_, uint8 decimals_) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/types/ERC20Permit.sol\":616:631  uint256 chainID */\n  0x00\n    /* \"contracts/types/ERC20Permit.sol\":675:684  chainid() */\n  chainid\n    /* \"contracts/types/ERC20Permit.sol\":664:684  chainID := chainid() */\n  swap1\n  pop\n    /* \"contracts/types/ERC20Permit.sol\":757:852  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"contracts/types/ERC20Permit.sol\":882:888  name() */\n  tag_11\n    /* \"contracts/types/ERC20Permit.sol\":882:886  name */\n  shl(0x20, tag_12)\n    /* \"contracts/types/ERC20Permit.sol\":882:888  name() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/types/ERC20Permit.sol\":866:890  keccak256(bytes(name())) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/types/ERC20Permit.sol\":914:924  bytes(\"1\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/types/ERC20Permit.sol\":904:925  keccak256(bytes(\"1\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/types/ERC20Permit.sol\":950:957  chainID */\n  dup4\n    /* \"contracts/types/ERC20Permit.sol\":979:983  this */\n  address\n    /* \"contracts/types/ERC20Permit.sol\":733:994  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/types/ERC20Permit.sol\":723:995  keccak256(abi.encode(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/types/ERC20Permit.sol\":704:720  DOMAIN_SEPARATOR */\n  0x07\n    /* \"contracts/types/ERC20Permit.sol\":704:995  DOMAIN_SEPARATOR = keccak256(abi.encode(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/types/ERC20Permit.sol\":591:1002  constructor() {... */\n  pop\n    /* \"contracts/Ownable.sol\":409:419  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":400:406  _owner */\n  0x08\n  0x00\n    /* \"contracts/Ownable.sol\":400:419  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":463:469  _owner */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":434:471  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":459:460  0 */\n  0x00\n    /* \"contracts/Ownable.sol\":434:471  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/sOHM.sol\":3269:3279  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":3255:3266  initializer */\n  0x0b\n  0x00\n    /* \"contracts/sOHM.sol\":3255:3279  initializer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":2184:2199  5000000 * 10**9 */\n  0x11c37937e08000\n    /* \"contracts/sOHM.sol\":3289:3301  _totalSupply */\n  0x02\n    /* \"contracts/sOHM.sol\":3289:3328  _totalSupply = INITIAL_FRAGMENTS_SUPPLY */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":3357:3385  TOTAL_GONS.div(_totalSupply) */\n  tag_15\n    /* \"contracts/sOHM.sol\":3372:3384  _totalSupply */\n  sload(0x02)\n    /* \"contracts/sOHM.sol\":2184:2199  5000000 * 10**9 */\n  0x11c37937e08000\n    /* \"contracts/sOHM.sol\":2075:2076  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":2066:2077  ~uint256(0) */\n  not\n    /* \"contracts/sOHM.sol\":2484:2522  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n  dup2\n  tag_16\n  jumpi\n  invalid\ntag_16:\n  mod\n    /* \"contracts/sOHM.sol\":2075:2076  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":2066:2077  ~uint256(0) */\n  not\n    /* \"contracts/sOHM.sol\":2469:2523  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n  sub\n    /* \"contracts/sOHM.sol\":3357:3371  TOTAL_GONS.div */\n  or(tag_0_124, shl(0x20, tag_17))\n  swap1\n    /* \"contracts/sOHM.sol\":3357:3385  TOTAL_GONS.div(_totalSupply) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/sOHM.sol\":3338:3354  _gonsPerFragment */\n  0x0e\n    /* \"contracts/sOHM.sol\":3338:3385  _gonsPerFragment = TOTAL_GONS.div(_totalSupply) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":902:9384  contract sOlympus is ERC20Permit, Ownable {... */\n  jump(tag_18)\n    /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\ntag_12:\n    /* \"contracts/types/ERC20.sol\":1323:1336  string memory */\n  0x60\n    /* \"contracts/types/ERC20.sol\":1351:1356  _name */\n  0x03\n    /* \"contracts/types/ERC20.sol\":1344:1356  return _name */\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  0x1f\n  add\n  0x20\n  dup1\n  swap2\n  div\n  mul\n  0x20\n  add\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  swap3\n  swap2\n  swap1\n  dup2\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  iszero\n  tag_20\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_21\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  0x20\n  add\n  swap2\n  jump(tag_20)\ntag_21:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_22:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_22\n  jumpi\n  dup3\n  swap1\n  sub\n  0x1f\n  and\n  dup3\n  add\n  swap2\ntag_20:\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n    /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_17:\n    /* \"contracts/libraries/SafeMath.sol\":1019:1026  uint256 */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  tag_24\n    /* \"contracts/libraries/SafeMath.sol\":1049:1050  a */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1052:1053  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1a\n  dup2\n  mstore\n  0x20\n  add\n  0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1045:1048  div */\n  shl(0x20, tag_25)\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"contracts/libraries/SafeMath.sol\":1038:1084  return div(a, b, \"SafeMath: division by zero\") */\n  swap1\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\ntag_25:\n    /* \"contracts/libraries/SafeMath.sol\":1183:1190  uint256 */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1214:1215  0 */\n  dup1\n    /* \"contracts/libraries/SafeMath.sol\":1210:1211  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1210:1215  b > 0 */\n  gt\n    /* \"contracts/libraries/SafeMath.sol\":1217:1229  errorMessage */\n  dup3\n    /* \"contracts/libraries/SafeMath.sol\":1202:1230  require(b > 0, errorMessage) */\n  swap1\n  tag_27\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_28:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_30\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_28)\ntag_30:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_31\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_31:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_27:\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1240:1249  uint256 c */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1256:1257  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1252:1253  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1252:1257  a / b */\n  dup2\n  tag_32\n  jumpi\n  invalid\ntag_32:\n  div\n    /* \"contracts/libraries/SafeMath.sol\":1240:1257  uint256 c = a / b */\n  swap1\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1291:1292  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1287:1288  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1287:1292  a % b */\n  dup2\n  tag_33\n  jumpi\n  invalid\ntag_33:\n  mod\n    /* \"contracts/libraries/SafeMath.sol\":1283:1284  c */\n  dup2\n    /* \"contracts/libraries/SafeMath.sol\":1279:1280  b */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1279:1284  b * c */\n  mul\n    /* \"contracts/libraries/SafeMath.sol\":1279:1292  b * c + a % b */\n  add\n    /* \"contracts/libraries/SafeMath.sol\":1274:1275  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1274:1292  a == b * c + a % b */\n  eq\n    /* \"contracts/libraries/SafeMath.sol\":1267:1293  assert(a == b * c + a % b) */\n  tag_34\n  jumpi\n  invalid\ntag_34:\n    /* \"contracts/libraries/SafeMath.sol\":1358:1359  c */\n  dup1\n    /* \"contracts/libraries/SafeMath.sol\":1351:1359  return c */\n  swap2\n  pop\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/sOHM.sol\":902:9384  contract sOlympus is ERC20Permit, Ownable {... */\ntag_8:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_36\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_35)\ntag_36:\n  dup3\n  0x1f\n  lt\n  tag_37\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_35)\ntag_37:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_35\n  jumpi\n  swap2\n  dup3\n  add\ntag_38:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_39\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_38)\ntag_39:\ntag_35:\n  pop\n  swap1\n  pop\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  pop\n  swap1\n  jump\t// out\ntag_41:\ntag_42:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_43\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_42)\ntag_43:\n  pop\n  swap1\n  jump\t// out\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":902:9384  contract sOlympus is ERC20Permit, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x481c6a75\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xc4d66de8\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xee99205c\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9ce110d7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x73c69eb7\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x73c69eb7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7965d56d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9358928b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x481c6a75\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5a96ac0a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2986c0e5\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x3644e515\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x40a5737f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x2986c0e5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2df75cb1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x095ea7b3\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1bd39674\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x058ecdb4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x089208d8\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sOHM.sol\":4620:5489  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n    tag_3:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\n    tag_4:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_45:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_45)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_48\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_48:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":702:858  function renounceManagement() public virtual override onlyManager() {... */\n    tag_5:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/sOHM.sol\":8098:8320  function approve( address spender, uint256 value ) public override returns (bool) {... */\n    tag_6:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":2334:2426  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":6513:6635  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n    tag_8:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":7565:8092  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n    tag_9:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":6943:7036  function index() public view returns ( uint ) {... */\n    tag_10:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":1886:1903  uint public INDEX */\n    tag_11:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20Permit.sol\":438:546  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_12:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":2184:2259  function decimals() public view returns (uint8) {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20Permit.sol\":553:584  bytes32 public DOMAIN_SEPARATOR */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":8563:8881  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":4282:4456  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":864:1121  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/Ownable.sol\":484:572  function manager() public view override returns (address) {... */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1131:1348  function pullManagement() public virtual override {... */\n    tag_19:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/sOHM.sol\":6365:6507  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n    tag_20:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":1856:1879  Rebase[] public rebases */\n    tag_21:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      dup9\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":6641:6759  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n    tag_22:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20Permit.sol\":1884:2002  function nonces(address owner) public view override returns (uint256) {... */\n    tag_23:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":6807:6937  function circulatingSupply() public view returns ( uint ) {... */\n    tag_24:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":1487:1566  function symbol() public view returns (string memory) {... */\n    tag_25:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_101:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_101)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_104:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":1279:1305  address public initializer */\n    tag_26:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":8887:9382  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n    tag_27:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":7042:7400  function transfer( address to, uint256 value ) public override returns (bool) {... */\n    tag_28:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":3793:4276  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n    tag_29:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20Permit.sol\":1072:1821  function permit(... */\n    tag_30:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xe0\n      dup2\n      lt\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/sOHM.sol\":7406:7559  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n    tag_31:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":1207:1237  address public stakingContract */\n    tag_32:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":4620:5489  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n    tag_42:\n        /* \"contracts/sOHM.sol\":4707:4714  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":1122:1137  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1108:1137  msg.sender == stakingContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":1108:1118  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":1108:1137  msg.sender == stakingContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":1099:1139  require( msg.sender == stakingContract ) */\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n        /* \"contracts/sOHM.sol\":4727:4747  uint256 rebaseAmount */\n      0x00\n        /* \"contracts/sOHM.sol\":4757:4783  uint256 circulatingSupply_ */\n      dup1\n        /* \"contracts/sOHM.sol\":4786:4805  circulatingSupply() */\n      tag_128\n        /* \"contracts/sOHM.sol\":4786:4803  circulatingSupply */\n      tag_98\n        /* \"contracts/sOHM.sol\":4786:4805  circulatingSupply() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/sOHM.sol\":4757:4805  uint256 circulatingSupply_ = circulatingSupply() */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":4832:4833  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":4821:4828  profit_ */\n      dup6\n        /* \"contracts/sOHM.sol\":4821:4833  profit_ == 0 */\n      eq\n        /* \"contracts/sOHM.sol\":4816:5180  if ( profit_ == 0 ) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/sOHM.sol\":4866:4872  epoch_ */\n      dup4\n        /* \"contracts/sOHM.sol\":4855:4905  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      0x917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da4\n        /* \"contracts/sOHM.sol\":4874:4889  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":4891:4903  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":4855:4905  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":4935:4941  epoch_ */\n      dup4\n        /* \"contracts/sOHM.sol\":4924:4955  LogRebase( epoch_, 0, index() ) */\n      0x6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2\n        /* \"contracts/sOHM.sol\":4943:4944  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":4946:4953  index() */\n      tag_130\n        /* \"contracts/sOHM.sol\":4946:4951  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":4946:4953  index() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/sOHM.sol\":4924:4955  LogRebase( epoch_, 0, index() ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":4976:4988  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":4969:4988  return _totalSupply */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_127)\n        /* \"contracts/sOHM.sol\":4816:5180  if ( profit_ == 0 ) {... */\n    tag_129:\n        /* \"contracts/sOHM.sol\":5031:5032  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":5010:5028  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":5010:5032  circulatingSupply_ > 0 */\n      gt\n        /* \"contracts/sOHM.sol\":5005:5180  if ( circulatingSupply_ > 0 ){... */\n      iszero\n      tag_132\n      jumpi\n        /* \"contracts/sOHM.sol\":5063:5116  profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      tag_133\n        /* \"contracts/sOHM.sol\":5096:5114  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":5063:5090  profit_.mul( _totalSupply ) */\n      tag_134\n        /* \"contracts/sOHM.sol\":5076:5088  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":5063:5070  profit_ */\n      dup9\n        /* \"contracts/sOHM.sol\":5063:5074  profit_.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":5063:5090  profit_.mul( _totalSupply ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/sOHM.sol\":5063:5094  profit_.mul( _totalSupply ).div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":5063:5116  profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/sOHM.sol\":5048:5116  rebaseAmount = profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      swap2\n      pop\n        /* \"contracts/sOHM.sol\":5005:5180  if ( circulatingSupply_ > 0 ){... */\n      jump(tag_136)\n    tag_132:\n        /* \"contracts/sOHM.sol\":5162:5169  profit_ */\n      dup5\n        /* \"contracts/sOHM.sol\":5147:5169  rebaseAmount = profit_ */\n      swap2\n      pop\n        /* \"contracts/sOHM.sol\":5005:5180  if ( circulatingSupply_ > 0 ){... */\n    tag_136:\n        /* \"contracts/sOHM.sol\":5205:5237  _totalSupply.add( rebaseAmount ) */\n      tag_137\n        /* \"contracts/sOHM.sol\":5223:5235  rebaseAmount */\n      dup3\n        /* \"contracts/sOHM.sol\":5205:5217  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":5205:5221  _totalSupply.add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":5205:5237  _totalSupply.add( rebaseAmount ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/sOHM.sol\":5190:5202  _totalSupply */\n      0x02\n        /* \"contracts/sOHM.sol\":5190:5237  _totalSupply = _totalSupply.add( rebaseAmount ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":2712:2713  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":2703:2714  ~uint128(0) */\n      not\n        /* \"contracts/sOHM.sol\":5268:5278  MAX_SUPPLY */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":5253:5265  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":5253:5278  _totalSupply > MAX_SUPPLY */\n      gt\n        /* \"contracts/sOHM.sol\":5248:5331  if ( _totalSupply > MAX_SUPPLY ) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/sOHM.sol\":2712:2713  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":2703:2714  ~uint128(0) */\n      not\n        /* \"contracts/sOHM.sol\":5310:5320  MAX_SUPPLY */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":5295:5307  _totalSupply */\n      0x02\n        /* \"contracts/sOHM.sol\":5295:5320  _totalSupply = MAX_SUPPLY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":5248:5331  if ( _totalSupply > MAX_SUPPLY ) {... */\n    tag_139:\n        /* \"contracts/sOHM.sol\":5360:5390  TOTAL_GONS.div( _totalSupply ) */\n      tag_140\n        /* \"contracts/sOHM.sol\":5376:5388  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":2184:2199  5000000 * 10**9 */\n      0x11c37937e08000\n        /* \"contracts/sOHM.sol\":2075:2076  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":2066:2077  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":2484:2522  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      dup2\n      tag_141\n      jumpi\n      invalid\n    tag_141:\n      mod\n        /* \"contracts/sOHM.sol\":2075:2076  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":2066:2077  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":2469:2523  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      sub\n        /* \"contracts/sOHM.sol\":5360:5374  TOTAL_GONS.div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":5360:5390  TOTAL_GONS.div( _totalSupply ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"contracts/sOHM.sol\":5341:5357  _gonsPerFragment */\n      0x0e\n        /* \"contracts/sOHM.sol\":5341:5390  _gonsPerFragment = TOTAL_GONS.div( _totalSupply ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":5401:5452  _storeRebase( circulatingSupply_, profit_, epoch_ ) */\n      tag_142\n        /* \"contracts/sOHM.sol\":5415:5433  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":5435:5442  profit_ */\n      dup7\n        /* \"contracts/sOHM.sol\":5444:5450  epoch_ */\n      dup7\n        /* \"contracts/sOHM.sol\":5401:5413  _storeRebase */\n      tag_143\n        /* \"contracts/sOHM.sol\":5401:5452  _storeRebase( circulatingSupply_, profit_, epoch_ ) */\n      jump\t// in\n    tag_142:\n      pop\n        /* \"contracts/sOHM.sol\":5470:5482  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":5463:5482  return _totalSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":1149:1150  _ */\n    tag_127:\n        /* \"contracts/sOHM.sol\":4620:5489  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\n    tag_44:\n        /* \"contracts/types/ERC20.sol\":1323:1336  string memory */\n      0x60\n        /* \"contracts/types/ERC20.sol\":1351:1356  _name */\n      0x03\n        /* \"contracts/types/ERC20.sol\":1344:1356  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":702:858  function renounceManagement() public virtual override onlyManager() {... */\n    tag_50:\n        /* \"contracts/Ownable.sol\":630:640  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":620:640  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":620:626  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":620:640  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":611:678  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/Ownable.sol\":818:819  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":785:822  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":802:808  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":785:822  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":849:850  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":832:838  _owner */\n      0x08\n      0x00\n        /* \"contracts/Ownable.sol\":832:851  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":702:858  function renounceManagement() public virtual override onlyManager() {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":8098:8320  function approve( address spender, uint256 value ) public override returns (bool) {... */\n    tag_53:\n        /* \"contracts/sOHM.sol\":8174:8178  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":8232:8237  value */\n      dup2\n        /* \"contracts/sOHM.sol\":8191:8204  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":8191:8218  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8206:8216  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":8191:8218  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8191:8229  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8220:8227  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":8191:8229  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8191:8237  _allowedValue[ msg.sender ][ spender ] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":8275:8282  spender */\n      dup3\n        /* \"contracts/sOHM.sol\":8253:8291  Approval( msg.sender, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":8263:8273  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":8253:8291  Approval( msg.sender, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":8284:8289  value */\n      dup5\n        /* \"contracts/sOHM.sol\":8253:8291  Approval( msg.sender, spender, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":8309:8313  true */\n      0x01\n        /* \"contracts/sOHM.sol\":8302:8313  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":8098:8320  function approve( address spender, uint256 value ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":2334:2426  function totalSupply() public view override returns (uint256) {... */\n    tag_55:\n        /* \"contracts/types/ERC20.sol\":2387:2394  uint256 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":2409:2421  _totalSupply */\n      sload(0x02)\n        /* \"contracts/types/ERC20.sol\":2402:2421  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":2334:2426  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":6513:6635  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n    tag_58:\n        /* \"contracts/sOHM.sol\":6574:6578  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":6598:6628  amount.mul( _gonsPerFragment ) */\n      tag_154\n        /* \"contracts/sOHM.sol\":6610:6626  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":6598:6604  amount */\n      dup4\n        /* \"contracts/sOHM.sol\":6598:6608  amount.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":6598:6628  amount.mul( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/sOHM.sol\":6591:6628  return amount.mul( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":6513:6635  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":7565:8092  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n    tag_61:\n        /* \"contracts/sOHM.sol\":7656:7660  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":7710:7758  _allowedValue[ from ][ msg.sender ].sub( value ) */\n      tag_156\n        /* \"contracts/sOHM.sol\":7751:7756  value */\n      dup3\n        /* \"contracts/sOHM.sol\":7710:7723  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":7710:7731  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7725:7729  from */\n      dup8\n        /* \"contracts/sOHM.sol\":7710:7731  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7710:7745  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7733:7743  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":7710:7745  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":7710:7749  _allowedValue[ from ][ msg.sender ].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":7710:7758  _allowedValue[ from ][ msg.sender ].sub( value ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/sOHM.sol\":7672:7685  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":7672:7693  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7687:7691  from */\n      dup7\n        /* \"contracts/sOHM.sol\":7672:7693  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7672:7707  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7695:7705  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":7672:7707  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7672:7758  _allowedValue[ from ][ msg.sender ] = _allowedValue[ from ][ msg.sender ].sub( value ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":7788:7798  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":7772:7838  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":7782:7786  from */\n      dup5\n        /* \"contracts/sOHM.sol\":7772:7838  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":7801:7814  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":7801:7822  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7816:7820  from */\n      dup9\n        /* \"contracts/sOHM.sol\":7801:7822  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7801:7836  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7824:7834  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":7801:7836  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":7772:7838  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":7849:7865  uint256 gonValue */\n      0x00\n        /* \"contracts/sOHM.sol\":7868:7891  gonsForBalance( value ) */\n      tag_158\n        /* \"contracts/sOHM.sol\":7884:7889  value */\n      dup4\n        /* \"contracts/sOHM.sol\":7868:7882  gonsForBalance */\n      tag_58\n        /* \"contracts/sOHM.sol\":7868:7891  gonsForBalance( value ) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/sOHM.sol\":7849:7891  uint256 gonValue = gonsForBalance( value ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":7924:7958  _gonBalances[from].sub( gonValue ) */\n      tag_159\n        /* \"contracts/sOHM.sol\":7948:7956  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":7924:7936  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":7924:7942  _gonBalances[from] */\n      0x00\n        /* \"contracts/sOHM.sol\":7937:7941  from */\n      dup9\n        /* \"contracts/sOHM.sol\":7924:7942  _gonBalances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":7924:7946  _gonBalances[from].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":7924:7958  _gonBalances[from].sub( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"contracts/sOHM.sol\":7901:7913  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":7901:7921  _gonBalances[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7915:7919  from */\n      dup8\n        /* \"contracts/sOHM.sol\":7901:7921  _gonBalances[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7901:7958  _gonBalances[ from ] = _gonBalances[from].sub( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":7989:8021  _gonBalances[to].add( gonValue ) */\n      tag_160\n        /* \"contracts/sOHM.sol\":8011:8019  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":7989:8001  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":7989:8005  _gonBalances[to] */\n      0x00\n        /* \"contracts/sOHM.sol\":8002:8004  to */\n      dup8\n        /* \"contracts/sOHM.sol\":7989:8005  _gonBalances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":7989:8009  _gonBalances[to].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":7989:8021  _gonBalances[to].add( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"contracts/sOHM.sol\":7968:7980  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":7968:7986  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7982:7984  to */\n      dup7\n        /* \"contracts/sOHM.sol\":7968:7986  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7968:8021  _gonBalances[ to ] = _gonBalances[to].add( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":8052:8054  to */\n      dup4\n        /* \"contracts/sOHM.sol\":8036:8063  Transfer( from, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":8046:8050  from */\n      dup6\n        /* \"contracts/sOHM.sol\":8036:8063  Transfer( from, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":8056:8061  value */\n      dup6\n        /* \"contracts/sOHM.sol\":8036:8063  Transfer( from, to, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":8081:8085  true */\n      0x01\n        /* \"contracts/sOHM.sol\":8074:8085  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":7565:8092  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":6943:7036  function index() public view returns ( uint ) {... */\n    tag_63:\n        /* \"contracts/sOHM.sol\":6982:6986  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":7006:7029  balanceForGons( INDEX ) */\n      tag_162\n        /* \"contracts/sOHM.sol\":7022:7027  INDEX */\n      sload(0x0d)\n        /* \"contracts/sOHM.sol\":7006:7020  balanceForGons */\n      tag_93\n        /* \"contracts/sOHM.sol\":7006:7029  balanceForGons( INDEX ) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/sOHM.sol\":6999:7029  return balanceForGons( INDEX ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":6943:7036  function index() public view returns ( uint ) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":1886:1903  uint public INDEX */\n    tag_65:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/types/ERC20Permit.sol\":438:546  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_67:\n        /* \"contracts/types/ERC20Permit.sol\":480:546  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/types/ERC20Permit.sol\":438:546  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":2184:2259  function decimals() public view returns (uint8) {... */\n    tag_69:\n        /* \"contracts/types/ERC20.sol\":2225:2230  uint8 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":2245:2254  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/types/ERC20.sol\":2238:2254  return _decimals */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":2184:2259  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/types/ERC20Permit.sol\":553:584  bytes32 public DOMAIN_SEPARATOR */\n    tag_71:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":8563:8881  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n    tag_74:\n        /* \"contracts/sOHM.sol\":8654:8658  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":8711:8767  _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      tag_165\n        /* \"contracts/sOHM.sol\":8755:8765  addedValue */\n      dup3\n        /* \"contracts/sOHM.sol\":8711:8724  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":8711:8738  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8726:8736  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":8711:8738  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8711:8749  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8740:8747  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":8711:8749  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":8711:8753  _allowedValue[ msg.sender ][ spender ].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":8711:8767  _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"contracts/sOHM.sol\":8670:8683  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":8670:8697  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8685:8695  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":8670:8697  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8670:8708  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8699:8706  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":8670:8708  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8670:8767  _allowedValue[ msg.sender ][ spender ] = _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":8804:8811  spender */\n      dup3\n        /* \"contracts/sOHM.sol\":8782:8853  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":8792:8802  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":8782:8853  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":8813:8826  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":8813:8840  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8828:8838  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":8813:8840  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8813:8851  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":8842:8849  spender */\n      dup8\n        /* \"contracts/sOHM.sol\":8813:8851  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":8782:8853  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":8870:8874  true */\n      0x01\n        /* \"contracts/sOHM.sol\":8863:8874  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":8563:8881  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":4282:4456  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n    tag_77:\n        /* \"contracts/sOHM.sol\":4348:4352  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":630:640  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":620:640  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":620:626  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":620:640  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":611:678  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/sOHM.sol\":4383:4384  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":4374:4379  INDEX */\n      sload(0x0d)\n        /* \"contracts/sOHM.sol\":4374:4384  INDEX == 0 */\n      eq\n        /* \"contracts/sOHM.sol\":4365:4386  require( INDEX == 0 ) */\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n        /* \"contracts/sOHM.sol\":4404:4428  gonsForBalance( _INDEX ) */\n      tag_170\n        /* \"contracts/sOHM.sol\":4420:4426  _INDEX */\n      dup3\n        /* \"contracts/sOHM.sol\":4404:4418  gonsForBalance */\n      tag_58\n        /* \"contracts/sOHM.sol\":4404:4428  gonsForBalance( _INDEX ) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/sOHM.sol\":4396:4401  INDEX */\n      0x0d\n        /* \"contracts/sOHM.sol\":4396:4428  INDEX = gonsForBalance( _INDEX ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":4445:4449  true */\n      0x01\n        /* \"contracts/sOHM.sol\":4438:4449  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":4282:4456  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":864:1121  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_80:\n        /* \"contracts/Ownable.sol\":630:640  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":620:640  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":620:626  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":620:640  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":611:678  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/Ownable.sol\":987:988  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":966:989  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":966:975  newOwner_ */\n      dup2\n        /* \"contracts/Ownable.sol\":966:989  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":957:1032  require( newOwner_ != address(0), \"Ownable: new owner is the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/Ownable.sol\":1072:1081  newOwner_ */\n      dup1\n        /* \"contracts/Ownable.sol\":1047:1083  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1064:1070  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1047:1083  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1105:1114  newOwner_ */\n      dup1\n        /* \"contracts/Ownable.sol\":1093:1102  _newOwner */\n      0x09\n      0x00\n        /* \"contracts/Ownable.sol\":1093:1114  _newOwner = newOwner_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":864:1121  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":484:572  function manager() public view override returns (address) {... */\n    tag_82:\n        /* \"contracts/Ownable.sol\":533:540  address */\n      0x00\n        /* \"contracts/Ownable.sol\":559:565  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":552:565  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":484:572  function manager() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1131:1348  function pullManagement() public virtual override {... */\n    tag_84:\n        /* \"contracts/Ownable.sol\":1214:1223  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1200:1223  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1200:1210  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1200:1223  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1191:1262  require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/Ownable.sol\":1302:1311  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1277:1313  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1294:1300  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1277:1313  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1332:1341  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1323:1329  _owner */\n      0x08\n      0x00\n        /* \"contracts/Ownable.sol\":1323:1341  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":1131:1348  function pullManagement() public virtual override {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":6365:6507  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n    tag_87:\n        /* \"contracts/sOHM.sol\":6430:6437  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":6457:6500  _gonBalances[ who ].div( _gonsPerFragment ) */\n      tag_179\n        /* \"contracts/sOHM.sol\":6482:6498  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":6457:6469  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":6457:6476  _gonBalances[ who ] */\n      0x00\n        /* \"contracts/sOHM.sol\":6471:6474  who */\n      dup6\n        /* \"contracts/sOHM.sol\":6457:6476  _gonBalances[ who ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":6457:6480  _gonBalances[ who ].div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":6457:6500  _gonBalances[ who ].div( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"contracts/sOHM.sol\":6450:6500  return _gonBalances[ who ].div( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":6365:6507  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":1856:1879  Rebase[] public rebases */\n    tag_90:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"contracts/sOHM.sol\":6641:6759  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n    tag_93:\n        /* \"contracts/sOHM.sol\":6700:6704  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":6724:6752  gons.div( _gonsPerFragment ) */\n      tag_183\n        /* \"contracts/sOHM.sol\":6734:6750  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":6724:6728  gons */\n      dup4\n        /* \"contracts/sOHM.sol\":6724:6732  gons.div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":6724:6752  gons.div( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"contracts/sOHM.sol\":6717:6752  return gons.div( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":6641:6759  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20Permit.sol\":1884:2002  function nonces(address owner) public view override returns (uint256) {... */\n    tag_96:\n        /* \"contracts/types/ERC20Permit.sol\":1945:1952  uint256 */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1971:1995  _nonces[owner].current() */\n      tag_185\n        /* \"contracts/types/ERC20Permit.sol\":1971:1978  _nonces */\n      0x06\n        /* \"contracts/types/ERC20Permit.sol\":1971:1985  _nonces[owner] */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1979:1984  owner */\n      dup5\n        /* \"contracts/types/ERC20Permit.sol\":1971:1985  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20Permit.sol\":1971:1993  _nonces[owner].current */\n      tag_186\n        /* \"contracts/types/ERC20Permit.sol\":1971:1995  _nonces[owner].current() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/types/ERC20Permit.sol\":1964:1995  return _nonces[owner].current() */\n      swap1\n      pop\n        /* \"contracts/types/ERC20Permit.sol\":1884:2002  function nonces(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":6807:6937  function circulatingSupply() public view returns ( uint ) {... */\n    tag_98:\n        /* \"contracts/sOHM.sol\":6858:6862  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":6882:6930  _totalSupply.sub( balanceOf( stakingContract ) ) */\n      tag_188\n        /* \"contracts/sOHM.sol\":6900:6928  balanceOf( stakingContract ) */\n      tag_189\n        /* \"contracts/sOHM.sol\":6911:6926  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":6900:6909  balanceOf */\n      tag_87\n        /* \"contracts/sOHM.sol\":6900:6928  balanceOf( stakingContract ) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/sOHM.sol\":6882:6894  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":6882:6898  _totalSupply.sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":6882:6930  _totalSupply.sub( balanceOf( stakingContract ) ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"contracts/sOHM.sol\":6875:6930  return _totalSupply.sub( balanceOf( stakingContract ) ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":6807:6937  function circulatingSupply() public view returns ( uint ) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":1487:1566  function symbol() public view returns (string memory) {... */\n    tag_100:\n        /* \"contracts/types/ERC20.sol\":1526:1539  string memory */\n      0x60\n        /* \"contracts/types/ERC20.sol\":1554:1561  _symbol */\n      0x04\n        /* \"contracts/types/ERC20.sol\":1547:1561  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_192\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_191)\n    tag_192:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_193:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_193\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":1487:1566  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":1279:1305  address public initializer */\n    tag_106:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":8887:9382  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n    tag_109:\n        /* \"contracts/sOHM.sol\":8983:8987  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":8999:9015  uint256 oldValue */\n      dup1\n        /* \"contracts/sOHM.sol\":9018:9031  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":9018:9045  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9033:9043  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":9018:9045  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9018:9056  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9047:9054  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":9018:9056  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":8999:9056  uint256 oldValue = _allowedValue[ msg.sender ][ spender ] */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":9089:9097  oldValue */\n      dup1\n        /* \"contracts/sOHM.sol\":9070:9085  subtractedValue */\n      dup4\n        /* \"contracts/sOHM.sol\":9070:9097  subtractedValue >= oldValue */\n      lt\n        /* \"contracts/sOHM.sol\":9066:9269  if (subtractedValue >= oldValue) {... */\n      tag_195\n      jumpi\n        /* \"contracts/sOHM.sol\":9154:9155  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":9113:9126  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":9113:9140  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9128:9138  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":9113:9140  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9113:9151  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9142:9149  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":9113:9151  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9113:9155  _allowedValue[ msg.sender ][ spender ] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":9066:9269  if (subtractedValue >= oldValue) {... */\n      jump(tag_196)\n    tag_195:\n        /* \"contracts/sOHM.sol\":9227:9258  oldValue.sub( subtractedValue ) */\n      tag_197\n        /* \"contracts/sOHM.sol\":9241:9256  subtractedValue */\n      dup4\n        /* \"contracts/sOHM.sol\":9227:9235  oldValue */\n      dup3\n        /* \"contracts/sOHM.sol\":9227:9239  oldValue.sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":9227:9258  oldValue.sub( subtractedValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"contracts/sOHM.sol\":9186:9199  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":9186:9213  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9201:9211  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":9186:9213  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9186:9224  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9215:9222  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":9186:9224  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9186:9258  _allowedValue[ msg.sender ][ spender ] = oldValue.sub( subtractedValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":9066:9269  if (subtractedValue >= oldValue) {... */\n    tag_196:\n        /* \"contracts/sOHM.sol\":9305:9312  spender */\n      dup4\n        /* \"contracts/sOHM.sol\":9283:9354  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":9293:9303  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":9283:9354  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":9314:9327  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":9314:9341  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9329:9339  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":9314:9341  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":9314:9352  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":9343:9350  spender */\n      dup9\n        /* \"contracts/sOHM.sol\":9314:9352  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":9283:9354  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":9371:9375  true */\n      0x01\n        /* \"contracts/sOHM.sol\":9364:9375  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":8887:9382  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":7042:7400  function transfer( address to, uint256 value ) public override returns (bool) {... */\n    tag_112:\n        /* \"contracts/sOHM.sol\":7114:7118  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":7130:7146  uint256 gonValue */\n      dup1\n        /* \"contracts/sOHM.sol\":7149:7178  value.mul( _gonsPerFragment ) */\n      tag_199\n        /* \"contracts/sOHM.sol\":7160:7176  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":7149:7154  value */\n      dup5\n        /* \"contracts/sOHM.sol\":7149:7158  value.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":7149:7178  value.mul( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"contracts/sOHM.sol\":7130:7178  uint256 gonValue = value.mul( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":7217:7259  _gonBalances[ msg.sender ].sub( gonValue ) */\n      tag_200\n        /* \"contracts/sOHM.sol\":7249:7257  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":7217:7229  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":7217:7243  _gonBalances[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7231:7241  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":7217:7243  _gonBalances[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":7217:7247  _gonBalances[ msg.sender ].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":7217:7259  _gonBalances[ msg.sender ].sub( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/sOHM.sol\":7188:7200  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":7188:7214  _gonBalances[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7202:7212  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":7188:7214  _gonBalances[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7188:7259  _gonBalances[ msg.sender ] = _gonBalances[ msg.sender ].sub( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":7290:7324  _gonBalances[ to ].add( gonValue ) */\n      tag_201\n        /* \"contracts/sOHM.sol\":7314:7322  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":7290:7302  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":7290:7308  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7304:7306  to */\n      dup8\n        /* \"contracts/sOHM.sol\":7290:7308  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":7290:7312  _gonBalances[ to ].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":7290:7324  _gonBalances[ to ].add( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"contracts/sOHM.sol\":7269:7281  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":7269:7287  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7283:7285  to */\n      dup7\n        /* \"contracts/sOHM.sol\":7269:7287  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7269:7324  _gonBalances[ to ] = _gonBalances[ to ].add( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":7361:7363  to */\n      dup4\n        /* \"contracts/sOHM.sol\":7339:7372  Transfer( msg.sender, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":7349:7359  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":7339:7372  Transfer( msg.sender, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":7365:7370  value */\n      dup6\n        /* \"contracts/sOHM.sol\":7339:7372  Transfer( msg.sender, to, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":7389:7393  true */\n      0x01\n        /* \"contracts/sOHM.sol\":7382:7393  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":7042:7400  function transfer( address to, uint256 value ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":3793:4276  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n    tag_115:\n        /* \"contracts/sOHM.sol\":3860:3864  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":3900:3911  initializer */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":3886:3911  msg.sender == initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":3886:3896  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":3886:3911  msg.sender == initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":3877:3925  require( msg.sender == initializer,\"Not owner\" ) */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f74206f776e65720000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/sOHM.sol\":3972:3973  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":3944:3974  stakingContract_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":3944:3960  stakingContract_ */\n      dup3\n        /* \"contracts/sOHM.sol\":3944:3974  stakingContract_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":3935:3976  require( stakingContract_ != address(0) ) */\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/sOHM.sol\":4004:4020  stakingContract_ */\n      dup2\n        /* \"contracts/sOHM.sol\":3986:4001  stakingContract */\n      0x0a\n      0x00\n        /* \"contracts/sOHM.sol\":3986:4020  stakingContract = stakingContract_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":2184:2199  5000000 * 10**9 */\n      0x11c37937e08000\n        /* \"contracts/sOHM.sol\":2075:2076  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":2066:2077  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":2484:2522  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      dup2\n      tag_205\n      jumpi\n      invalid\n    tag_205:\n      mod\n        /* \"contracts/sOHM.sol\":2075:2076  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":2066:2077  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":2469:2523  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      sub\n        /* \"contracts/sOHM.sol\":4030:4042  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":4030:4061  _gonBalances[ stakingContract ] */\n      0x00\n        /* \"contracts/sOHM.sol\":4044:4059  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":4030:4061  _gonBalances[ stakingContract ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":4030:4074  _gonBalances[ stakingContract ] = TOTAL_GONS */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":4114:4129  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":4090:4145  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":4108:4111  0x0 */\n      0x00\n        /* \"contracts/sOHM.sol\":4090:4145  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":4131:4143  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":4090:4145  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":4160:4205  LogStakingContractUpdated( stakingContract_ ) */\n      0x817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a1\n        /* \"contracts/sOHM.sol\":4187:4203  stakingContract_ */\n      dup3\n        /* \"contracts/sOHM.sol\":4160:4205  LogStakingContractUpdated( stakingContract_ ) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sOHM.sol\":4246:4247  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":4224:4235  initializer */\n      0x0b\n      0x00\n        /* \"contracts/sOHM.sol\":4224:4248  initializer = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":4265:4269  true */\n      0x01\n        /* \"contracts/sOHM.sol\":4258:4269  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":3793:4276  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20Permit.sol\":1072:1821  function permit(... */\n    tag_118:\n        /* \"contracts/types/ERC20Permit.sol\":1308:1316  deadline */\n      dup4\n        /* \"contracts/types/ERC20Permit.sol\":1289:1304  block.timestamp */\n      timestamp\n        /* \"contracts/types/ERC20Permit.sol\":1289:1316  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/types/ERC20Permit.sol\":1281:1345  require(block.timestamp <= deadline, \"Permit: expired deadline\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5065726d69743a206578706972656420646561646c696e650000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/types/ERC20Permit.sol\":1356:1374  bytes32 hashStruct */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":480:546  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/types/ERC20Permit.sol\":1410:1425  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"contracts/types/ERC20Permit.sol\":1427:1432  owner */\n      dup9\n        /* \"contracts/types/ERC20Permit.sol\":1434:1441  spender */\n      dup9\n        /* \"contracts/types/ERC20Permit.sol\":1443:1449  amount */\n      dup9\n        /* \"contracts/types/ERC20Permit.sol\":1451:1475  _nonces[owner].current() */\n      tag_208\n        /* \"contracts/types/ERC20Permit.sol\":1451:1458  _nonces */\n      0x06\n        /* \"contracts/types/ERC20Permit.sol\":1451:1465  _nonces[owner] */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1459:1464  owner */\n      dup15\n        /* \"contracts/types/ERC20Permit.sol\":1451:1465  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20Permit.sol\":1451:1473  _nonces[owner].current */\n      tag_186\n        /* \"contracts/types/ERC20Permit.sol\":1451:1475  _nonces[owner].current() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/types/ERC20Permit.sol\":1477:1485  deadline */\n      dup10\n        /* \"contracts/types/ERC20Permit.sol\":1399:1486  abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/types/ERC20Permit.sol\":1389:1487  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/types/ERC20Permit.sol\":1356:1487  bytes32 hashStruct =... */\n      swap1\n      pop\n        /* \"contracts/types/ERC20Permit.sol\":1498:1511  bytes32 _hash */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1548:1554  0x1901 */\n      0x1901\n        /* \"contracts/types/ERC20Permit.sol\":1557:1573  DOMAIN_SEPARATOR */\n      sload(0x07)\n        /* \"contracts/types/ERC20Permit.sol\":1575:1585  hashStruct */\n      dup4\n        /* \"contracts/types/ERC20Permit.sol\":1524:1586  abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      0xffff\n      and\n      0xf0\n      shl\n      dup2\n      mstore\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/types/ERC20Permit.sol\":1514:1587  keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/types/ERC20Permit.sol\":1498:1587  bytes32 _hash = keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct)) */\n      swap1\n      pop\n        /* \"contracts/types/ERC20Permit.sol\":1598:1612  address signer */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1615:1640  ecrecover(_hash, v, r, s) */\n      0x01\n        /* \"contracts/types/ERC20Permit.sol\":1625:1630  _hash */\n      dup3\n        /* \"contracts/types/ERC20Permit.sol\":1632:1633  v */\n      dup8\n        /* \"contracts/types/ERC20Permit.sol\":1635:1636  r */\n      dup8\n        /* \"contracts/types/ERC20Permit.sol\":1638:1639  s */\n      dup8\n        /* \"contracts/types/ERC20Permit.sol\":1615:1640  ecrecover(_hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/types/ERC20Permit.sol\":1598:1640  address signer = ecrecover(_hash, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/types/ERC20Permit.sol\":1676:1677  0 */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1658:1678  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20Permit.sol\":1658:1664  signer */\n      dup2\n        /* \"contracts/types/ERC20Permit.sol\":1658:1678  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/types/ERC20Permit.sol\":1658:1697  signer != address(0) && signer == owner */\n      dup1\n      iszero\n      tag_211\n      jumpi\n      pop\n        /* \"contracts/types/ERC20Permit.sol\":1692:1697  owner */\n      dup10\n        /* \"contracts/types/ERC20Permit.sol\":1682:1697  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20Permit.sol\":1682:1688  signer */\n      dup2\n        /* \"contracts/types/ERC20Permit.sol\":1682:1697  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/types/ERC20Permit.sol\":1658:1697  signer != address(0) && signer == owner */\n    tag_211:\n        /* \"contracts/types/ERC20Permit.sol\":1650:1735  require(signer != address(0) && signer == owner, \"ZeroSwapPermit: Invalid signature\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/types/ERC20Permit.sol\":1746:1772  _nonces[owner].increment() */\n      tag_213\n        /* \"contracts/types/ERC20Permit.sol\":1746:1753  _nonces */\n      0x06\n        /* \"contracts/types/ERC20Permit.sol\":1746:1760  _nonces[owner] */\n      0x00\n        /* \"contracts/types/ERC20Permit.sol\":1754:1759  owner */\n      dup13\n        /* \"contracts/types/ERC20Permit.sol\":1746:1760  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20Permit.sol\":1746:1770  _nonces[owner].increment */\n      tag_214\n        /* \"contracts/types/ERC20Permit.sol\":1746:1772  _nonces[owner].increment() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/types/ERC20Permit.sol\":1782:1814  _approve(owner, spender, amount) */\n      tag_215\n        /* \"contracts/types/ERC20Permit.sol\":1791:1796  owner */\n      dup11\n        /* \"contracts/types/ERC20Permit.sol\":1798:1805  spender */\n      dup11\n        /* \"contracts/types/ERC20Permit.sol\":1807:1813  amount */\n      dup11\n        /* \"contracts/types/ERC20Permit.sol\":1782:1790  _approve */\n      tag_216\n        /* \"contracts/types/ERC20Permit.sol\":1782:1814  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/types/ERC20Permit.sol\":1072:1821  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":7406:7559  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n    tag_121:\n        /* \"contracts/sOHM.sol\":7491:7498  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":7518:7531  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":7518:7541  _allowedValue[ owner_ ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7533:7539  owner_ */\n      dup5\n        /* \"contracts/sOHM.sol\":7518:7541  _allowedValue[ owner_ ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":7518:7552  _allowedValue[ owner_ ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":7543:7550  spender */\n      dup4\n        /* \"contracts/sOHM.sol\":7518:7552  _allowedValue[ owner_ ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":7511:7552  return _allowedValue[ owner_ ][ spender ] */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":7406:7559  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":1207:1237  address public stakingContract */\n    tag_123:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"contracts/libraries/SafeMath.sol\":1019:1026  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      tag_219\n        /* \"contracts/libraries/SafeMath.sol\":1049:1050  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1052:1053  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1045:1048  div */\n      tag_220\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_219:\n        /* \"contracts/libraries/SafeMath.sol\":1038:1084  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":714:955  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_135:\n        /* \"contracts/libraries/SafeMath.sol\":772:779  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":800:801  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":795:796  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":795:801  a == 0 */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":791:836  if (a == 0) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/libraries/SafeMath.sol\":824:825  0 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":817:825  return 0 */\n      swap1\n      pop\n      jump(tag_221)\n        /* \"contracts/libraries/SafeMath.sol\":791:836  if (a == 0) {... */\n    tag_222:\n        /* \"contracts/libraries/SafeMath.sol\":846:855  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":862:863  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":858:859  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":858:863  a * b */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":846:863  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":890:891  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":885:886  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":881:882  c */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":881:886  c / a */\n      dup2\n      tag_223\n      jumpi\n      invalid\n    tag_223:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":881:891  c / a == b */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":873:929  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/libraries/SafeMath.sol\":947:948  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":940:948  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":714:955  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_221:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":199:375  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_138:\n        /* \"contracts/libraries/SafeMath.sol\":257:264  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":276:285  uint256 c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":292:293  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":288:289  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":288:293  a + b */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":276:293  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":316:317  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":311:312  c */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":311:317  c >= a */\n      lt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":303:349  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/libraries/SafeMath.sol\":367:368  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":360:368  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":199:375  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":5679:6359  function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {... */\n    tag_143:\n        /* \"contracts/sOHM.sol\":5776:5780  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":5793:5811  uint rebasePercent */\n      dup1\n        /* \"contracts/sOHM.sol\":5814:5861  profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      tag_228\n        /* \"contracts/sOHM.sol\":5839:5859  previousCirculating_ */\n      dup6\n        /* \"contracts/sOHM.sol\":5814:5833  profit_.mul( 1e18 ) */\n      tag_229\n        /* \"contracts/sOHM.sol\":5827:5831  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sOHM.sol\":5814:5821  profit_ */\n      dup8\n        /* \"contracts/sOHM.sol\":5814:5825  profit_.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":5814:5833  profit_.mul( 1e18 ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/sOHM.sol\":5814:5837  profit_.mul( 1e18 ).div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":5814:5861  profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/sOHM.sol\":5793:5861  uint rebasePercent = profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":5872:5879  rebases */\n      0x0c\n        /* \"contracts/sOHM.sol\":5886:6197  Rebase ( {... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/sOHM.sol\":5916:5922  epoch_ */\n      dup6\n        /* \"contracts/sOHM.sol\":5886:6197  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":5944:5957  rebasePercent */\n      dup4\n        /* \"contracts/sOHM.sol\":5886:6197  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":6005:6025  previousCirculating_ */\n      dup8\n        /* \"contracts/sOHM.sol\":5886:6197  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":6057:6076  circulatingSupply() */\n      tag_230\n        /* \"contracts/sOHM.sol\":6057:6074  circulatingSupply */\n      tag_98\n        /* \"contracts/sOHM.sol\":6057:6076  circulatingSupply() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/sOHM.sol\":5886:6197  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":6105:6112  profit_ */\n      dup7\n        /* \"contracts/sOHM.sol\":5886:6197  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":6133:6140  index() */\n      tag_231\n        /* \"contracts/sOHM.sol\":6133:6138  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":6133:6140  index() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/sOHM.sol\":5886:6197  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":6174:6186  block.number */\n      number\n        /* \"contracts/sOHM.sol\":5886:6197  Rebase ( {... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/sOHM.sol\":5872:6198  rebases.push( Rebase ( {... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":6233:6239  epoch_ */\n      dup3\n        /* \"contracts/sOHM.sol\":6222:6272  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      0x917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da4\n        /* \"contracts/sOHM.sol\":6241:6256  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":6258:6270  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":6222:6272  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":6298:6304  epoch_ */\n      dup3\n        /* \"contracts/sOHM.sol\":6287:6330  LogRebase( epoch_, rebasePercent, index() ) */\n      0x6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2\n        /* \"contracts/sOHM.sol\":6306:6319  rebasePercent */\n      dup3\n        /* \"contracts/sOHM.sol\":6321:6328  index() */\n      tag_233\n        /* \"contracts/sOHM.sol\":6321:6326  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":6321:6328  index() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/sOHM.sol\":6287:6330  LogRebase( epoch_, rebasePercent, index() ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":6348:6352  true */\n      0x01\n        /* \"contracts/sOHM.sol\":6341:6352  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":5679:6359  function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":381:515  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_157:\n        /* \"contracts/libraries/SafeMath.sol\":439:446  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_235\n        /* \"contracts/libraries/SafeMath.sol\":469:470  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":472:473  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":465:468  sub */\n      tag_236\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_235:\n        /* \"contracts/libraries/SafeMath.sol\":458:508  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":381:515  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/Counters.sol\":532:644  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_186:\n        /* \"contracts/libraries/Counters.sol\":597:604  uint256 */\n      0x00\n        /* \"contracts/libraries/Counters.sol\":623:630  counter */\n      dup2\n        /* \"contracts/libraries/Counters.sol\":623:637  counter._value */\n      0x00\n      add\n      sload\n        /* \"contracts/libraries/Counters.sol\":616:637  return counter._value */\n      swap1\n      pop\n        /* \"contracts/libraries/Counters.sol\":532:644  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/libraries/Counters.sol\":650:828  function increment(Counter storage counter) internal {... */\n    tag_214:\n        /* \"contracts/libraries/Counters.sol\":820:821  1 */\n      0x01\n        /* \"contracts/libraries/Counters.sol\":802:809  counter */\n      dup2\n        /* \"contracts/libraries/Counters.sol\":802:816  counter._value */\n      0x00\n      add\n      0x00\n        /* \"contracts/libraries/Counters.sol\":802:821  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/libraries/Counters.sol\":650:828  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":8362:8557  function _approve( address owner, address spender, uint256 value ) internal override virtual {... */\n    tag_216:\n        /* \"contracts/sOHM.sol\":8497:8502  value */\n      dup1\n        /* \"contracts/sOHM.sol\":8465:8478  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":8465:8485  _allowedValue[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":8479:8484  owner */\n      dup6\n        /* \"contracts/sOHM.sol\":8465:8485  _allowedValue[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8465:8494  _allowedValue[owner][spender] */\n      0x00\n        /* \"contracts/sOHM.sol\":8486:8493  spender */\n      dup5\n        /* \"contracts/sOHM.sol\":8465:8494  _allowedValue[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":8465:8502  _allowedValue[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":8534:8541  spender */\n      dup2\n        /* \"contracts/sOHM.sol\":8517:8550  Approval( owner, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":8527:8532  owner */\n      dup4\n        /* \"contracts/sOHM.sol\":8517:8550  Approval( owner, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":8543:8548  value */\n      dup4\n        /* \"contracts/sOHM.sol\":8517:8550  Approval( owner, spender, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":8362:8557  function _approve( address owner, address spender, uint256 value ) internal override virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_220:\n        /* \"contracts/libraries/SafeMath.sol\":1183:1190  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1214:1215  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":1210:1211  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1210:1215  b > 0 */\n      gt\n        /* \"contracts/libraries/SafeMath.sol\":1217:1229  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":1202:1230  require(b > 0, errorMessage) */\n      swap1\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_242:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_244\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_242)\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_245\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_245:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1240:1249  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1256:1257  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1252:1253  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1252:1257  a / b */\n      dup2\n      tag_246\n      jumpi\n      invalid\n    tag_246:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":1240:1257  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1291:1292  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1287:1288  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1287:1292  a % b */\n      dup2\n      tag_247\n      jumpi\n      invalid\n    tag_247:\n      mod\n        /* \"contracts/libraries/SafeMath.sol\":1283:1284  c */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":1279:1280  b */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1279:1284  b * c */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":1279:1292  b * c + a % b */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":1274:1275  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1274:1292  a == b * c + a % b */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":1267:1293  assert(a == b * c + a % b) */\n      tag_248\n      jumpi\n      invalid\n    tag_248:\n        /* \"contracts/libraries/SafeMath.sol\":1358:1359  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":1351:1359  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":521:708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_236:\n        /* \"contracts/libraries/SafeMath.sol\":607:614  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":639:640  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":634:635  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":634:640  b <= a */\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":642:654  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":626:655  require(b <= a, errorMessage) */\n      swap1\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_251:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_253\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_251)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_254:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":665:674  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":681:682  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":677:678  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":677:682  a - b */\n      sub\n        /* \"contracts/libraries/SafeMath.sol\":665:682  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":700:701  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":693:701  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":521:708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n    data_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee 5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa2646970667358221220bdf54cfa08f89a96b37baf29d1ea0ee0268d639fe0846998dafb8590e988c75864736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600e81526020017f5374616b6564204f6c796d7075730000000000000000000000000000000000008152506040518060400160405280600481526020017f734f484d000000000000000000000000000000000000000000000000000000008152506009826003908051906020019062000098929190620004d2565b508160049080519060200190620000b1929190620004d2565b5080600560006101000a81548160ff021916908360ff16021790555050505060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f62000106620002f760201b60201c565b805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001206007819055505033600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a333600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e08000600281905550620002eb6002546611c37937e0800060001981620002d257fe5b06600019036200039d60201b6200275b1790919060201c565b600e8190555062000588565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620003935780601f10620003675761010080835404028352916020019162000393565b820191906000526020600020905b8154815290600101906020018083116200037557829003601f168201915b5050505050905090565b6000620003e783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620003ef60201b60201c565b905092915050565b600080831182906200049f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200046357808201518184015260208101905062000446565b50505050905090810190601f168015620004915780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581620004ac57fe5b049050838581620004b957fe5b06818502018514620004c757fe5b809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200050a576000855562000556565b82601f106200052557805160ff191683800117855562000556565b8280016001018555821562000556579182015b828111156200055557825182559160200191906001019062000538565b5b50905062000565919062000569565b5090565b5b80821115620005845760008160009055506001016200056a565b5090565b612de380620005986000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063481c6a751161010457806395d89b41116100a2578063c4d66de811610071578063c4d66de8146108be578063d505accf14610918578063dd62ed3e146109b1578063ee99205c14610a29576101da565b806395d89b411461073f5780639ce110d7146107c2578063a457c2d7146107f6578063a9059cbb1461085a576101da565b806373c69eb7116100de57806373c69eb71461061b5780637965d56d146106875780637ecebe00146106c95780639358928b14610721576101da565b8063481c6a75146105855780635a96ac0a146105b957806370a08231146105c3576101da565b80632986c0e51161017c5780633644e5151161014b5780633644e5151461047b578063395093511461049957806340a5737f146104fd57806346f68ee914610541576101da565b80632986c0e5146104005780632df75cb11461041e57806330adf81f1461043c578063313ce5671461045a576101da565b8063095ea7b3116101b8578063095ea7b3146102b857806318160ddd1461031c5780631bd396741461033a57806323b872dd1461037c576101da565b8063058ecdb4146101df57806306fdde031461022b578063089208d8146102ae575b600080fd5b610215600480360360408110156101f557600080fd5b810190808035906020019092919080359060200190929190505050610a5d565b6040518082815260200191505060405180910390f35b610233610c40565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610273578082015181840152602081019050610258565b50505050905090810190601f1680156102a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b6610ce2565b005b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e66565b60405180821515815260200191505060405180910390f35b610324610f58565b6040518082815260200191505060405180910390f35b6103666004803603602081101561035057600080fd5b8101908080359060200190929190505050610f62565b6040518082815260200191505060405180910390f35b6103e86004803603606081101561039257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f80565b60405180821515815260200191505060405180910390f35b61040861131a565b6040518082815260200191505060405180910390f35b61042661132c565b6040518082815260200191505060405180910390f35b610444611332565b6040518082815260200191505060405180910390f35b610462611359565b604051808260ff16815260200191505060405180910390f35b610483611370565b6040518082815260200191505060405180910390f35b6104e5600480360360408110156104af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611376565b60405180821515815260200191505060405180910390f35b6105296004803603602081101561051357600080fd5b8101908080359060200190929190505050611572565b60405180821515815260200191505060405180910390f35b6105836004803603602081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165e565b005b61058d611867565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105c1611891565b005b610605600480360360208110156105d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3a565b6040518082815260200191505060405180910390f35b6106476004803603602081101561063157600080fd5b8101908080359060200190929190505050611a97565b6040518088815260200187815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b6106b36004803603602081101561069d57600080fd5b8101908080359060200190929190505050611ae9565b6040518082815260200191505060405180910390f35b61070b600480360360208110156106df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b07565b6040518082815260200191505060405180910390f35b610729611b57565b6040518082815260200191505060405180910390f35b610747611b9d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078757808201518184015260208101905061076c565b50505050905090810190601f1680156107b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107ca611c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108426004803603604081101561080c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c65565b60405180821515815260200191505060405180910390f35b6108a66004803603604081101561087057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ef5565b60405180821515815260200191505060405180910390f35b610900600480360360208110156108d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120a9565b60405180821515815260200191505060405180910390f35b6109af600480360360e081101561092e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050612387565b005b610a13600480360360408110156109c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126ae565b6040518082815260200191505060405180910390f35b610a31612735565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab957600080fd5b600080610ac4611b57565b90506000851415610b6557837f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb26000610b3d61131a565b604051808381526020018281526020019250505060405180910390a260025492505050610c3a565b6000811115610b9c57610b9581610b87600254886127a590919063ffffffff16565b61275b90919063ffffffff16565b9150610ba0565b8491505b610bb58260025461282b90919063ffffffff16565b6002819055506000196fffffffffffffffffffffffffffffffff166002541115610bf5576000196fffffffffffffffffffffffffffffffff166002819055505b610c206002546611c37937e0800060001981610c0d57fe5b066000190361275b90919063ffffffff16565b600e81905550610c318186866128b3565b50600254925050505b92915050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cd85780601f10610cad57610100808354040283529160200191610cd8565b820191906000526020600020905b815481529060010190602001808311610cbb57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000610f79600e54836127a590919063ffffffff16565b9050919050565b600061101182601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a2e90919063ffffffff16565b601060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600061117d83610f62565b90506111d181600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a2e90919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461282b90919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b6000611327600d54611ae9565b905090565b600d5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b6000600560009054906101000a900460ff16905090565b60075481565b600061140782601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461282b90919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611637576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600d541461164657600080fd5b61164f82610f62565b600d8190555060019050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612d246026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611937576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612d4a6022913960400191505060405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611a90600e54600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461275b90919063ffffffff16565b9050919050565b600c8181548110611aa757600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6000611b00600e548361275b90919063ffffffff16565b9050919050565b6000611b50600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a78565b9050919050565b6000611b98611b87600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a3a565b600254612a2e90919063ffffffff16565b905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c355780601f10611c0a57610100808354040283529160200191611c35565b820191906000526020600020905b815481529060010190602001808311611c1857829003601f168201915b5050505050905090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310611d75576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e09565b611d888382612a2e90919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600080611f0d600e54846127a590919063ffffffff16565b9050611f6181600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a2e90919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ff681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461282b90919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461216e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f74206f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156121a857600080fd5b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e08000600019816121fb57fe5b0660001903600f6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a37f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a182604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b834211156123fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5065726d69743a206578706972656420646561646c696e65000000000000000081525060200191505060405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b88888861246d600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a78565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061190160075483604051602001808461ffff1660f01b81526002018381526020018281526020019350505050604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612587573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156125fb57508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b612650576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d6c6021913960400191505060405180910390fd5b612697600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a86565b6126a28a8a8a612a9c565b50505050505050505050565b6000601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061279d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b87565b905092915050565b6000808314156127b85760009050612825565b60008284029050828482816127c957fe5b0414612820576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d8d6021913960400191505060405180910390fd5b809150505b92915050565b6000808284019050838110156128a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000806128e3856128d5670de0b6b3a7640000876127a590919063ffffffff16565b61275b90919063ffffffff16565b9050600c6040518060e0016040528085815260200183815260200187815260200161290c611b57565b815260200186815260200161291f61131a565b8152602001438152509080600181540180825580915050600190039060005260206000209060070201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050827f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2827f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb282612a0661131a565b604051808381526020018281526020019250505060405180910390a260019150509392505050565b6000612a7083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c63565b905092915050565b600081600001549050919050565b6001816000016000828254019250508190555050565b80601060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008083118290612c33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612bf8578082015181840152602081019050612bdd565b50505050905090810190601f168015612c255780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612c3f57fe5b049050838581612c4b57fe5b06818502018514612c5857fe5b809150509392505050565b6000838311158290612d10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612cd5578082015181840152602081019050612cba565b50505050905090810190601f168015612d025780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220bdf54cfa08f89a96b37baf29d1ea0ee0268d639fe0846998dafb8590e988c75864736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616B6564204F6C796D707573000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x734F484D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x98 SWAP3 SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xB1 SWAP3 SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH1 0x0 CHAINID SWAP1 POP PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH3 0x106 PUSH3 0x2F7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP CALLER PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x2EB PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH3 0x2D2 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH3 0x39D PUSH1 0x20 SHL PUSH3 0x275B OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH3 0x588 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH3 0x393 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x367 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x375 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3E7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH3 0x3EF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH3 0x49F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x463 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x446 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x491 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH3 0x4AC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH3 0x4B9 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH3 0x4C7 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x50A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x556 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x525 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x556 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x556 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x555 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x538 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x565 SWAP2 SWAP1 PUSH3 0x569 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x584 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x56A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2DE3 DUP1 PUSH3 0x598 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x918 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xA29 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0x9CE110D7 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x85A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x73C69EB7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x73C69EB7 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x7965D56D EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x721 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5C3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x40A5737F EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x541 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x2DF75CB1 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x45A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x1BD39674 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x58ECDB4 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x258 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58D PUSH2 0x1867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0x1891 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x729 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7CA PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x842 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x900 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2387 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA31 PUSH2 0x2735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC4 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0xB65 JUMPI DUP4 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 PUSH1 0x0 PUSH2 0xB3D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD SWAP3 POP POP POP PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB95 DUP2 PUSH2 0xB87 PUSH1 0x2 SLOAD DUP9 PUSH2 0x27A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x275B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xBA0 JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST PUSH2 0xBB5 DUP3 PUSH1 0x2 SLOAD PUSH2 0x282B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xC20 PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0xC0D JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH2 0x275B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xC31 DUP2 DUP7 DUP7 PUSH2 0x28B3 JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF79 PUSH1 0xE SLOAD DUP4 PUSH2 0x27A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 DUP3 PUSH1 0x10 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2A2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH2 0x117D DUP4 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D1 DUP2 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2A2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1266 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x282B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 PUSH1 0xD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x282B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD EQ PUSH2 0x1646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164F DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D24 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D4A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 PUSH1 0xE SLOAD PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x275B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH1 0xE SLOAD DUP4 PUSH2 0x275B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH2 0x1B87 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2A2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1C35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 LT PUSH2 0x1D75 JUMPI PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1D88 DUP4 DUP3 PUSH2 0x2A2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F0D PUSH1 0xE SLOAD DUP5 PUSH2 0x27A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1F61 DUP2 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2A2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1FF6 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x282B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x216E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0x21FB JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH1 0xF PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x23FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A206578706972656420646561646C696E650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP9 DUP9 DUP9 PUSH2 0x246D PUSH1 0x6 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A78 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1901 PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2587 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x25FB JUMPI POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2650 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D6C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2697 PUSH1 0x6 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A86 JUMP JUMPDEST PUSH2 0x26A2 DUP11 DUP11 DUP11 PUSH2 0x2A9C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2B87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x27B8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x27C9 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D8D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x28A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28E3 DUP6 PUSH2 0x28D5 PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x27A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x275B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x290C PUSH2 0x1B57 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x291F PUSH2 0x131A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP DUP3 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 DUP3 PUSH2 0x2A06 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A70 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x10 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2C33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BF8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BDD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C25 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2C3F JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x2C4B JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x2C58 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2D10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CD5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2CBA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2D02 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0x5A65726F537761705065726D69 PUSH21 0x3A20496E76616C6964207369676E61747572655361 PUSH7 0x654D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0xBD CREATE2 0x4C STATICCALL ADDMOD 0xF8 SWAP11 SWAP7 0xB3 PUSH28 0xAF29D1EA0EE0268D639FE0846998DAFB8590E988C75864736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "902:8482:7:-:0;;;3182:210;;;;;;;;;;1058:148:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3228:1:7;1146:5:8;1138;:13;;;;;;;;;;;;:::i;:::-;;1167:7;1157;:17;;;;;;;;;;;;:::i;:::-;;1192:9;1180;;:21;;;;;;;;;;;;;;;;;;1058:148;;;616:15:9;675:9;664:20;;757:95;882:6;:4;;;:6;;:::i;:::-;866:24;;;;;;914:10;;;;;;;;;;;;;;;;;904:21;;;;;;950:7;979:4;733:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:272;;;;;;704:16;:291;;;;591:411;409:10:0;400:6;;:19;;;;;;;;;;;;;;;;;;463:6;;;;;;;;;;;434:37;;459:1;434:37;;;;;;;;;;;;3269:10:7::2;3255:11;;:24;;;;;;;;;;;;;;;;;;2184:15;3289:12;:39;;;;3357:28;3372:12;;2184:15;2075:1;2066:11;2484:38;;;;;;2075:1;2066:11;2469:54;3357:14;;;;;;:28;;;;:::i;:::-;3338:16;:47;;;;902:8482:::0;;1286:75:8;1323:13;1351:5;1344:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1286:75;:::o;961:130:6:-;1019:7;1045:39;1049:1;1052;1045:39;;;;;;;;;;;;;;;;;:3;;;:39;;:::i;:::-;1038:46;;961:130;;;;:::o;1097:269::-;1183:7;1214:1;1210;:5;1217:12;1202:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:9;1256:1;1252;:5;;;;;;1240:17;;1291:1;1287;:5;;;;;;1283:1;1279;:5;:13;1274:1;:18;1267:26;;;;1358:1;1351:8;;;1097:269;;;;;:::o;902:8482:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101da5760003560e01c8063481c6a751161010457806395d89b41116100a2578063c4d66de811610071578063c4d66de8146108be578063d505accf14610918578063dd62ed3e146109b1578063ee99205c14610a29576101da565b806395d89b411461073f5780639ce110d7146107c2578063a457c2d7146107f6578063a9059cbb1461085a576101da565b806373c69eb7116100de57806373c69eb71461061b5780637965d56d146106875780637ecebe00146106c95780639358928b14610721576101da565b8063481c6a75146105855780635a96ac0a146105b957806370a08231146105c3576101da565b80632986c0e51161017c5780633644e5151161014b5780633644e5151461047b578063395093511461049957806340a5737f146104fd57806346f68ee914610541576101da565b80632986c0e5146104005780632df75cb11461041e57806330adf81f1461043c578063313ce5671461045a576101da565b8063095ea7b3116101b8578063095ea7b3146102b857806318160ddd1461031c5780631bd396741461033a57806323b872dd1461037c576101da565b8063058ecdb4146101df57806306fdde031461022b578063089208d8146102ae575b600080fd5b610215600480360360408110156101f557600080fd5b810190808035906020019092919080359060200190929190505050610a5d565b6040518082815260200191505060405180910390f35b610233610c40565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610273578082015181840152602081019050610258565b50505050905090810190601f1680156102a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b6610ce2565b005b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e66565b60405180821515815260200191505060405180910390f35b610324610f58565b6040518082815260200191505060405180910390f35b6103666004803603602081101561035057600080fd5b8101908080359060200190929190505050610f62565b6040518082815260200191505060405180910390f35b6103e86004803603606081101561039257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f80565b60405180821515815260200191505060405180910390f35b61040861131a565b6040518082815260200191505060405180910390f35b61042661132c565b6040518082815260200191505060405180910390f35b610444611332565b6040518082815260200191505060405180910390f35b610462611359565b604051808260ff16815260200191505060405180910390f35b610483611370565b6040518082815260200191505060405180910390f35b6104e5600480360360408110156104af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611376565b60405180821515815260200191505060405180910390f35b6105296004803603602081101561051357600080fd5b8101908080359060200190929190505050611572565b60405180821515815260200191505060405180910390f35b6105836004803603602081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165e565b005b61058d611867565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105c1611891565b005b610605600480360360208110156105d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3a565b6040518082815260200191505060405180910390f35b6106476004803603602081101561063157600080fd5b8101908080359060200190929190505050611a97565b6040518088815260200187815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b6106b36004803603602081101561069d57600080fd5b8101908080359060200190929190505050611ae9565b6040518082815260200191505060405180910390f35b61070b600480360360208110156106df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b07565b6040518082815260200191505060405180910390f35b610729611b57565b6040518082815260200191505060405180910390f35b610747611b9d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078757808201518184015260208101905061076c565b50505050905090810190601f1680156107b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107ca611c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108426004803603604081101561080c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c65565b60405180821515815260200191505060405180910390f35b6108a66004803603604081101561087057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ef5565b60405180821515815260200191505060405180910390f35b610900600480360360208110156108d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120a9565b60405180821515815260200191505060405180910390f35b6109af600480360360e081101561092e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050612387565b005b610a13600480360360408110156109c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126ae565b6040518082815260200191505060405180910390f35b610a31612735565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab957600080fd5b600080610ac4611b57565b90506000851415610b6557837f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb26000610b3d61131a565b604051808381526020018281526020019250505060405180910390a260025492505050610c3a565b6000811115610b9c57610b9581610b87600254886127a590919063ffffffff16565b61275b90919063ffffffff16565b9150610ba0565b8491505b610bb58260025461282b90919063ffffffff16565b6002819055506000196fffffffffffffffffffffffffffffffff166002541115610bf5576000196fffffffffffffffffffffffffffffffff166002819055505b610c206002546611c37937e0800060001981610c0d57fe5b066000190361275b90919063ffffffff16565b600e81905550610c318186866128b3565b50600254925050505b92915050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cd85780601f10610cad57610100808354040283529160200191610cd8565b820191906000526020600020905b815481529060010190602001808311610cbb57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000610f79600e54836127a590919063ffffffff16565b9050919050565b600061101182601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a2e90919063ffffffff16565b601060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600061117d83610f62565b90506111d181600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a2e90919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461282b90919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b6000611327600d54611ae9565b905090565b600d5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b6000600560009054906101000a900460ff16905090565b60075481565b600061140782601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461282b90919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611637576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600d541461164657600080fd5b61164f82610f62565b600d8190555060019050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612d246026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611937576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612d4a6022913960400191505060405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611a90600e54600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461275b90919063ffffffff16565b9050919050565b600c8181548110611aa757600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6000611b00600e548361275b90919063ffffffff16565b9050919050565b6000611b50600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a78565b9050919050565b6000611b98611b87600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a3a565b600254612a2e90919063ffffffff16565b905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c355780601f10611c0a57610100808354040283529160200191611c35565b820191906000526020600020905b815481529060010190602001808311611c1857829003601f168201915b5050505050905090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310611d75576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e09565b611d888382612a2e90919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600080611f0d600e54846127a590919063ffffffff16565b9050611f6181600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a2e90919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ff681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461282b90919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461216e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f74206f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156121a857600080fd5b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e08000600019816121fb57fe5b0660001903600f6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a37f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a182604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b834211156123fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5065726d69743a206578706972656420646561646c696e65000000000000000081525060200191505060405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b88888861246d600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a78565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061190160075483604051602001808461ffff1660f01b81526002018381526020018281526020019350505050604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612587573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156125fb57508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b612650576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d6c6021913960400191505060405180910390fd5b612697600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a86565b6126a28a8a8a612a9c565b50505050505050505050565b6000601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061279d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b87565b905092915050565b6000808314156127b85760009050612825565b60008284029050828482816127c957fe5b0414612820576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d8d6021913960400191505060405180910390fd5b809150505b92915050565b6000808284019050838110156128a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000806128e3856128d5670de0b6b3a7640000876127a590919063ffffffff16565b61275b90919063ffffffff16565b9050600c6040518060e0016040528085815260200183815260200187815260200161290c611b57565b815260200186815260200161291f61131a565b8152602001438152509080600181540180825580915050600190039060005260206000209060070201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050827f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2827f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb282612a0661131a565b604051808381526020018281526020019250505060405180910390a260019150509392505050565b6000612a7083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c63565b905092915050565b600081600001549050919050565b6001816000016000828254019250508190555050565b80601060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008083118290612c33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612bf8578082015181840152602081019050612bdd565b50505050905090810190601f168015612c255780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612c3f57fe5b049050838581612c4b57fe5b06818502018514612c5857fe5b809150509392505050565b6000838311158290612d10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612cd5578082015181840152602081019050612cba565b50505050905090810190601f168015612d025780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220bdf54cfa08f89a96b37baf29d1ea0ee0268d639fe0846998dafb8590e988c75864736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x918 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xA29 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0x9CE110D7 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x85A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x73C69EB7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x73C69EB7 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x7965D56D EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x721 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5C3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x40A5737F EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x541 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x2DF75CB1 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x45A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x1BD39674 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x58ECDB4 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x258 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58D PUSH2 0x1867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0x1891 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x729 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7CA PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x842 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x900 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2387 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA31 PUSH2 0x2735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC4 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0xB65 JUMPI DUP4 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 PUSH1 0x0 PUSH2 0xB3D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD SWAP3 POP POP POP PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB95 DUP2 PUSH2 0xB87 PUSH1 0x2 SLOAD DUP9 PUSH2 0x27A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x275B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xBA0 JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST PUSH2 0xBB5 DUP3 PUSH1 0x2 SLOAD PUSH2 0x282B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xC20 PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0xC0D JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH2 0x275B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xC31 DUP2 DUP7 DUP7 PUSH2 0x28B3 JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF79 PUSH1 0xE SLOAD DUP4 PUSH2 0x27A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 DUP3 PUSH1 0x10 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2A2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH2 0x117D DUP4 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D1 DUP2 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2A2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1266 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x282B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 PUSH1 0xD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x282B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD EQ PUSH2 0x1646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164F DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D24 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D4A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 PUSH1 0xE SLOAD PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x275B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH1 0xE SLOAD DUP4 PUSH2 0x275B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH2 0x1B87 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2A2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1C35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 LT PUSH2 0x1D75 JUMPI PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1D88 DUP4 DUP3 PUSH2 0x2A2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F0D PUSH1 0xE SLOAD DUP5 PUSH2 0x27A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1F61 DUP2 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2A2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1FF6 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x282B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x216E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0x21FB JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH1 0xF PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x23FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A206578706972656420646561646C696E650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP9 DUP9 DUP9 PUSH2 0x246D PUSH1 0x6 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A78 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1901 PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2587 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x25FB JUMPI POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2650 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D6C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2697 PUSH1 0x6 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A86 JUMP JUMPDEST PUSH2 0x26A2 DUP11 DUP11 DUP11 PUSH2 0x2A9C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2B87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x27B8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x27C9 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D8D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x28A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28E3 DUP6 PUSH2 0x28D5 PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x27A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x275B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x290C PUSH2 0x1B57 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x291F PUSH2 0x131A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP DUP3 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 DUP3 PUSH2 0x2A06 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A70 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x10 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2C33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BF8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BDD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C25 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2C3F JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x2C4B JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x2C58 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2D10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CD5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2CBA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2D02 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0x5A65726F537761705065726D69 PUSH21 0x3A20496E76616C6964207369676E61747572655361 PUSH7 0x654D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0xBD CREATE2 0x4C STATICCALL ADDMOD 0xF8 SWAP11 SWAP7 0xB3 PUSH28 0xAF29D1EA0EE0268D639FE0846998DAFB8590E988C75864736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "902:8482:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4620:869;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1286:75:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:156:0;;;:::i;:::-;;8098:222:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2334:92:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6513:122:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7565:527;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6943:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1886:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;438:108:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2184:75:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;553:31:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8563:318:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4282:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;864:257:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;484:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1131:217;;;:::i;:::-;;6365:142:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1856:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6641:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1884::9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6807:130:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1487:79:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:26:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;8887:495;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7042:358;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3793:483;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1072:749:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7406:153:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1207:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4620:869;4707:7;1122:15;;;;;;;;;;;1108:29;;:10;:29;;;1099:40;;;;;;4727:20:::1;4757:26:::0;4786:19:::1;:17;:19::i;:::-;4757:48;;4832:1;4821:7;:12;4816:364;;;4866:6;4855:50;4874:15;4891:12;;4855:50;;;;;;;;;;;;;;;;;;;;;;;;4935:6;4924:31;4943:1;4946:7;:5;:7::i;:::-;4924:31;;;;;;;;;;;;;;;;;;;;;;;;4976:12;;4969:19;;;;;;4816:364;5031:1;5010:18;:22;5005:175;;;5063:53;5096:18;5063:27;5076:12;;5063:7;:11;;:27;;;;:::i;:::-;:31;;:53;;;;:::i;:::-;5048:68;;5005:175;;;5162:7;5147:22;;5005:175;5205:32;5223:12;5205;;:16;;:32;;;;:::i;:::-;5190:12;:47;;;;2712:1;2703:11;5268:10;;5253:12;;:25;5248:83;;;2712:1;2703:11;5310:10;;5295:12;:25;;;;5248:83;5360:30;5376:12;;2184:15;2075:1;2066:11;2484:38;;;;;;2075:1;2066:11;2469:54;5360:14;;:30;;;;:::i;:::-;5341:16;:49;;;;5401:51;5415:18;5435:7;5444:6;5401:12;:51::i;:::-;;5470:12;;5463:19;;;;1149:1;4620:869:::0;;;;:::o;1286:75:8:-;1323:13;1351:5;1344:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1286:75;:::o;702:156:0:-;630:10;620:20;;:6;;;;;;;;;;;:20;;;611:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;818:1:::1;785:37;;802:6;;;;;;;;;;;785:37;;;;;;;;;;;;849:1;832:6;;:19;;;;;;;;;;;;;;;;;;702:156::o:0;8098:222:7:-;8174:4;8232:5;8191:13;:27;8206:10;8191:27;;;;;;;;;;;;;;;:38;8220:7;8191:38;;;;;;;;;;;;;;;:46;;;;8275:7;8253:38;;8263:10;8253:38;;;8284:5;8253:38;;;;;;;;;;;;;;;;;;8309:4;8302:11;;8098:222;;;;:::o;2334:92:8:-;2387:7;2409:12;;2402:19;;2334:92;:::o;6513:122:7:-;6574:4;6598:30;6610:16;;6598:6;:10;;:30;;;;:::i;:::-;6591:37;;6513:122;;;:::o;7565:527::-;7656:4;7710:48;7751:5;7710:13;:21;7725:4;7710:21;;;;;;;;;;;;;;;:35;7733:10;7710:35;;;;;;;;;;;;;;;;:39;;:48;;;;:::i;:::-;7672:13;:21;7687:4;7672:21;;;;;;;;;;;;;;;:35;7695:10;7672:35;;;;;;;;;;;;;;;:86;;;;7788:10;7772:66;;7782:4;7772:66;;;7801:13;:21;7816:4;7801:21;;;;;;;;;;;;;;;:35;7824:10;7801:35;;;;;;;;;;;;;;;;7772:66;;;;;;;;;;;;;;;;;;7849:16;7868:23;7884:5;7868:14;:23::i;:::-;7849:42;;7924:34;7948:8;7924:12;:18;7937:4;7924:18;;;;;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;7901:12;:20;7915:4;7901:20;;;;;;;;;;;;;;;:57;;;;7989:32;8011:8;7989:12;:16;8002:2;7989:16;;;;;;;;;;;;;;;;:20;;:32;;;;:::i;:::-;7968:12;:18;7982:2;7968:18;;;;;;;;;;;;;;;:53;;;;8052:2;8036:27;;8046:4;8036:27;;;8056:5;8036:27;;;;;;;;;;;;;;;;;;8081:4;8074:11;;;7565:527;;;;;:::o;6943:93::-;6982:4;7006:23;7022:5;;7006:14;:23::i;:::-;6999:30;;6943:93;:::o;1886:17::-;;;;:::o;438:108:9:-;480:66;438:108;;;:::o;2184:75:8:-;2225:5;2245:9;;;;;;;;;;;2238:16;;2184:75;:::o;553:31:9:-;;;;:::o;8563:318:7:-;8654:4;8711:56;8755:10;8711:13;:27;8726:10;8711:27;;;;;;;;;;;;;;;:38;8740:7;8711:38;;;;;;;;;;;;;;;;:42;;:56;;;;:::i;:::-;8670:13;:27;8685:10;8670:27;;;;;;;;;;;;;;;:38;8699:7;8670:38;;;;;;;;;;;;;;;:97;;;;8804:7;8782:71;;8792:10;8782:71;;;8813:13;:27;8828:10;8813:27;;;;;;;;;;;;;;;:38;8842:7;8813:38;;;;;;;;;;;;;;;;8782:71;;;;;;;;;;;;;;;;;;8870:4;8863:11;;8563:318;;;;:::o;4282:174::-;4348:4;630:10:0;620:20;;:6;;;;;;;;;;;:20;;;611:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4383:1:7::1;4374:5;;:10;4365:21;;;::::0;::::1;;4404:24;4420:6;4404:14;:24::i;:::-;4396:5;:32;;;;4445:4;4438:11;;4282:174:::0;;;:::o;864:257:0:-;630:10;620:20;;:6;;;;;;;;;;;:20;;;611:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:1:::1;966:23;;:9;:23;;;;957:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1072:9;1047:36;;1064:6;;;;;;;;;;;1047:36;;;;;;;;;;;;1105:9;1093;;:21;;;;;;;;;;;;;;;;;;864:257:::0;:::o;484:88::-;533:7;559:6;;;;;;;;;;;552:13;;484:88;:::o;1131:217::-;1214:9;;;;;;;;;;;1200:23;;:10;:23;;;1191:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1302:9;;;;;;;;;;;1277:36;;1294:6;;;;;;;;;;;1277:36;;;;;;;;;;;;1332:9;;;;;;;;;;;1323:6;;:18;;;;;;;;;;;;;;;;;;1131:217::o;6365:142:7:-;6430:7;6457:43;6482:16;;6457:12;:19;6471:3;6457:19;;;;;;;;;;;;;;;;:23;;:43;;;;:::i;:::-;6450:50;;6365:142;;;:::o;1856:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6641:118::-;6700:4;6724:28;6734:16;;6724:4;:8;;:28;;;;:::i;:::-;6717:35;;6641:118;;;:::o;1884::9:-;1945:7;1971:24;:7;:14;1979:5;1971:14;;;;;;;;;;;;;;;:22;:24::i;:::-;1964:31;;1884:118;;;:::o;6807:130:7:-;6858:4;6882:48;6900:28;6911:15;;;;;;;;;;;6900:9;:28::i;:::-;6882:12;;:16;;:48;;;;:::i;:::-;6875:55;;6807:130;:::o;1487:79:8:-;1526:13;1554:7;1547:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:79;:::o;1279:26:7:-;;;;;;;;;;;;;:::o;8887:495::-;8983:4;8999:16;9018:13;:27;9033:10;9018:27;;;;;;;;;;;;;;;:38;9047:7;9018:38;;;;;;;;;;;;;;;;8999:57;;9089:8;9070:15;:27;9066:203;;9154:1;9113:13;:27;9128:10;9113:27;;;;;;;;;;;;;;;:38;9142:7;9113:38;;;;;;;;;;;;;;;:42;;;;9066:203;;;9227:31;9241:15;9227:8;:12;;:31;;;;:::i;:::-;9186:13;:27;9201:10;9186:27;;;;;;;;;;;;;;;:38;9215:7;9186:38;;;;;;;;;;;;;;;:72;;;;9066:203;9305:7;9283:71;;9293:10;9283:71;;;9314:13;:27;9329:10;9314:27;;;;;;;;;;;;;;;:38;9343:7;9314:38;;;;;;;;;;;;;;;;9283:71;;;;;;;;;;;;;;;;;;9371:4;9364:11;;;8887:495;;;;:::o;7042:358::-;7114:4;7130:16;7149:29;7160:16;;7149:5;:9;;:29;;;;:::i;:::-;7130:48;;7217:42;7249:8;7217:12;:26;7231:10;7217:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;7188:12;:26;7202:10;7188:26;;;;;;;;;;;;;;;:71;;;;7290:34;7314:8;7290:12;:18;7304:2;7290:18;;;;;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;7269:12;:18;7283:2;7269:18;;;;;;;;;;;;;;;:55;;;;7361:2;7339:33;;7349:10;7339:33;;;7365:5;7339:33;;;;;;;;;;;;;;;;;;7389:4;7382:11;;;7042:358;;;;:::o;3793:483::-;3860:4;3900:11;;;;;;;;;;;3886:25;;:10;:25;;;3877:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3972:1;3944:30;;:16;:30;;;;3935:41;;;;;;4004:16;3986:15;;:34;;;;;;;;;;;;;;;;;;2184:15;2075:1;2066:11;2484:38;;;;;;2075:1;2066:11;2469:54;4030:12;:31;4044:15;;;;;;;;;;;4030:31;;;;;;;;;;;;;;;:44;;;;4114:15;;;;;;;;;;;4090:55;;4108:3;4090:55;;;4131:12;;4090:55;;;;;;;;;;;;;;;;;;4160:45;4187:16;4160:45;;;;;;;;;;;;;;;;;;;;4246:1;4224:11;;:24;;;;;;;;;;;;;;;;;;4265:4;4258:11;;3793:483;;;:::o;1072:749:9:-;1308:8;1289:15;:27;;1281:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1356:18;480:66;1410:15;;1427:5;1434:7;1443:6;1451:24;:7;:14;1459:5;1451:14;;;;;;;;;;;;;;;:22;:24::i;:::-;1477:8;1399:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1389:98;;;;;;1356:131;;1498:13;1548:6;1557:16;;1575:10;1524:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1514:73;;;;;;1498:89;;1598:14;1615:25;1625:5;1632:1;1635;1638;1615:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1598:42;;1676:1;1658:20;;:6;:20;;;;:39;;;;;1692:5;1682:15;;:6;:15;;;1658:39;1650:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:26;:7;:14;1754:5;1746:14;;;;;;;;;;;;;;;:24;:26::i;:::-;1782:32;1791:5;1798:7;1807:6;1782:8;:32::i;:::-;1072:749;;;;;;;;;;:::o;7406:153:7:-;7491:7;7518:13;:23;7533:6;7518:23;;;;;;;;;;;;;;;:34;7543:7;7518:34;;;;;;;;;;;;;;;;7511:41;;7406:153;;;;:::o;1207:30::-;;;;;;;;;;;;;:::o;961:130:6:-;1019:7;1045:39;1049:1;1052;1045:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;1038:46;;961:130;;;;:::o;714:241::-;772:7;800:1;795;:6;791:45;;;824:1;817:8;;;;791:45;846:9;862:1;858;:5;846:17;;890:1;885;881;:5;;;;;;:10;873:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:1;940:8;;;714:241;;;;;:::o;199:176::-;257:7;276:9;292:1;288;:5;276:17;;316:1;311;:6;;303:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;367:1;360:8;;;199:176;;;;:::o;5679:680:7:-;5776:4;5793:18;5814:47;5839:20;5814:19;5827:4;5814:7;:11;;:19;;;;:::i;:::-;:23;;:47;;;;:::i;:::-;5793:68;;5872:7;5886:311;;;;;;;;5916:6;5886:311;;;;5944:13;5886:311;;;;6005:20;5886:311;;;;6057:19;:17;:19::i;:::-;5886:311;;;;6105:7;5886:311;;;;6133:7;:5;:7::i;:::-;5886:311;;;;6174:12;5886:311;;;5872:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6233:6;6222:50;6241:15;6258:12;;6222:50;;;;;;;;;;;;;;;;;;;;;;;;6298:6;6287:43;6306:13;6321:7;:5;:7::i;:::-;6287:43;;;;;;;;;;;;;;;;;;;;;;;;6348:4;6341:11;;;5679:680;;;;;:::o;381:134:6:-;439:7;465:43;469:1;472;465:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;458:50;;381:134;;;;:::o;532:112:5:-;597:7;623;:14;;;616:21;;532:112;;;:::o;650:178::-;820:1;802:7;:14;;;:19;;;;;;;;;;;650:178;:::o;8362:195:7:-;8497:5;8465:13;:20;8479:5;8465:20;;;;;;;;;;;;;;;:29;8486:7;8465:29;;;;;;;;;;;;;;;:37;;;;8534:7;8517:33;;8527:5;8517:33;;;8543:5;8517:33;;;;;;;;;;;;;;;;;;8362:195;;;:::o;1097:269:6:-;1183:7;1214:1;1210;:5;1217:12;1202:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:9;1256:1;1252;:5;;;;;;1240:17;;1291:1;1287;:5;;;;;;1283:1;1279;:5;:13;1274:1;:18;1267:26;;;;1358:1;1351:8;;;1097:269;;;;;:::o;521:187::-;607:7;639:1;634;:6;;642:12;626:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:9;681:1;677;:5;665:17;;700:1;693:8;;;521:187;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2349400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1050",
								"INDEX()": "1073",
								"PERMIT_TYPEHASH()": "301",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22408",
								"balanceForGons(uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"circulatingSupply()": "infinite",
								"decimals()": "1167",
								"decreaseAllowance(address,uint256)": "infinite",
								"gonsForBalance(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"index()": "infinite",
								"initialize(address)": "68507",
								"initializer()": "1114",
								"manager()": "1101",
								"name()": "infinite",
								"nonces(address)": "1334",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"pullManagement()": "infinite",
								"pushManagement(address)": "infinite",
								"rebase(uint256,uint256)": "infinite",
								"rebases(uint256)": "7042",
								"renounceManagement()": "24353",
								"setIndex(uint256)": "infinite",
								"stakingContract()": "1157",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_storeRebase(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3392,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3392,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3392,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3392,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3182,
									"end": 3392,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3392,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3182,
									"end": 3392,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3392,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3392,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3182,
									"end": 3392,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3392,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 8,
									"value": "E"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 8,
									"value": "5374616B6564204F6C796D707573000000000000000000000000000000000000"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 8,
									"value": "734F484D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3228,
									"end": 3229,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1146,
									"end": 1151,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1143,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "tag",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1174,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1164,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1192,
									"end": 1201,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1189,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1180,
									"end": 1189,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 616,
									"end": 631,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 684,
									"name": "CHAINID",
									"source": 9
								},
								{
									"begin": 664,
									"end": 684,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 664,
									"end": 684,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 757,
									"end": 852,
									"name": "PUSH",
									"source": 9,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 882,
									"end": 886,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 882,
									"end": 886,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 882,
									"end": 886,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 882,
									"end": 888,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 882,
									"end": 888,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 866,
									"end": 890,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 866,
									"end": 890,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 866,
									"end": 890,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 866,
									"end": 890,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 866,
									"end": 890,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 866,
									"end": 890,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 914,
									"end": 924,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 914,
									"end": 924,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 914,
									"end": 924,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 914,
									"end": 924,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 914,
									"end": 924,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 914,
									"end": 924,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 914,
									"end": 924,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 914,
									"end": 924,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 914,
									"end": 924,
									"name": "PUSH",
									"source": 9,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 914,
									"end": 924,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 914,
									"end": 924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 904,
									"end": 925,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 904,
									"end": 925,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 904,
									"end": 925,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 904,
									"end": 925,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 925,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 904,
									"end": 925,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 950,
									"end": 957,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 979,
									"end": 983,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 733,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 733,
									"end": 994,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 723,
									"end": 995,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 723,
									"end": 995,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 723,
									"end": 995,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 723,
									"end": 995,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 723,
									"end": 995,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 723,
									"end": 995,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 704,
									"end": 720,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 704,
									"end": 995,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 704,
									"end": 995,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 704,
									"end": 995,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 704,
									"end": 995,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 591,
									"end": 1002,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 409,
									"end": 419,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 400,
									"end": 406,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 400,
									"end": 406,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 400,
									"end": 419,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 400,
									"end": 419,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 400,
									"end": 419,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 400,
									"end": 419,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 463,
									"end": 469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 463,
									"end": 469,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 463,
									"end": 469,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 463,
									"end": 469,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 434,
									"end": 471,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 459,
									"end": 460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 434,
									"end": 471,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 434,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 434,
									"end": 471,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 434,
									"end": 471,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 434,
									"end": 471,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3269,
									"end": 3279,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3266,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 3255,
									"end": 3266,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3279,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2184,
									"end": 2199,
									"name": "PUSH",
									"source": 7,
									"value": "11C37937E08000"
								},
								{
									"begin": 3289,
									"end": 3301,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3289,
									"end": 3328,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3289,
									"end": 3328,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3289,
									"end": 3328,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3289,
									"end": 3328,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3385,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 3372,
									"end": 3384,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3372,
									"end": 3384,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2184,
									"end": 2199,
									"name": "PUSH",
									"source": 7,
									"value": "11C37937E08000"
								},
								{
									"begin": 2075,
									"end": 2076,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2066,
									"end": 2077,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 2522,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2484,
									"end": 2522,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 2522,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 2522,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2484,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 2522,
									"name": "MOD",
									"source": 7
								},
								{
									"begin": 2075,
									"end": 2076,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2066,
									"end": 2077,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2469,
									"end": 2523,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 3357,
									"end": 3371,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3357,
									"end": 3371,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18446744073709551740"
								},
								{
									"begin": 3357,
									"end": 3371,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3385,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3385,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3385,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3357,
									"end": 3385,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3385,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3357,
									"end": 3385,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 3357,
									"end": 3385,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3354,
									"name": "PUSH",
									"source": 7,
									"value": "E"
								},
								{
									"begin": 3338,
									"end": 3385,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3385,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3385,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3385,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1286,
									"end": 1361,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1286,
									"end": 1361,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1323,
									"end": 1336,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1351,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1356,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1286,
									"end": 1361,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1286,
									"end": 1361,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1019,
									"end": 1026,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1049,
									"end": 1050,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1052,
									"end": 1053,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 6,
									"value": "1A"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 6,
									"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1038,
									"end": 1084,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1038,
									"end": 1084,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1183,
									"end": 1190,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1214,
									"end": 1215,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1210,
									"end": 1211,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1210,
									"end": 1215,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1217,
									"end": 1229,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1249,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1252,
									"end": 1253,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1257,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1292,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "MOD",
									"source": 6
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1279,
									"end": 1280,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1279,
									"end": 1284,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1279,
									"end": 1292,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1274,
									"end": 1275,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1274,
									"end": 1292,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1359,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 9384,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bdf54cfa08f89a96b37baf29d1ea0ee0268d639fe0846998dafb8590e988c75864736f6c63430007050033",
									".code": [
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "481C6A75"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "C4D66DE8"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "C4D66DE8"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "D505ACCF"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "EE99205C"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "9CE110D7"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "A457C2D7"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "73C69EB7"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "73C69EB7"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "7965D56D"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "7ECEBE00"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "9358928B"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "481C6A75"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "5A96AC0A"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "2986C0E5"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "3644E515"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "3644E515"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "39509351"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "40A5737F"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "46F68EE9"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "2986C0E5"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "2DF75CB1"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "30ADF81F"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "1BD39674"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "58ECDB4"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "89208D8"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 9384,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 702,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 858,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 438,
											"end": 546,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 553,
											"end": 584,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4714,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1137,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1137,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1118,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1137,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1137,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1137,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1099,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1099,
											"end": 1139,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1099,
											"end": 1139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1099,
											"end": 1139,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1099,
											"end": 1139,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1099,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 4783,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 4786,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 4805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 4805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4832,
											"end": 4833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4833,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 5180,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 4816,
											"end": 5180,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4866,
											"end": 4872,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "PUSH",
											"source": 7,
											"value": "917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4"
										},
										{
											"begin": 4874,
											"end": 4889,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4891,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4891,
											"end": 4903,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4905,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 4935,
											"end": 4941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "PUSH",
											"source": 7,
											"value": "6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2"
										},
										{
											"begin": 4943,
											"end": 4944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 4946,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 4976,
											"end": 4988,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4976,
											"end": 4988,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4988,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 4969,
											"end": 4988,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 5180,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 4816,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5010,
											"end": 5032,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5180,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 5005,
											"end": 5180,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 5096,
											"end": 5114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 5076,
											"end": 5088,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5076,
											"end": 5088,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5063,
											"end": 5074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5090,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5063,
											"end": 5090,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5090,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5063,
											"end": 5090,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 5063,
											"end": 5090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5063,
											"end": 5094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5116,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5063,
											"end": 5116,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5116,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5063,
											"end": 5116,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 5063,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5048,
											"end": 5116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5048,
											"end": 5116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 5005,
											"end": 5180,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5180,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 5005,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5162,
											"end": 5169,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5180,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 5005,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 5223,
											"end": 5235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5217,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5205,
											"end": 5217,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 5205,
											"end": 5221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5237,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5205,
											"end": 5237,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5237,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5205,
											"end": 5237,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 5205,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5202,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5190,
											"end": 5237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5237,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2714,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5278,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5268,
											"end": 5278,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5253,
											"end": 5278,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5331,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 5248,
											"end": 5331,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2714,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5310,
											"end": 5320,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5310,
											"end": 5320,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5295,
											"end": 5307,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5331,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 5248,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2184,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "11C37937E08000"
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2077,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2077,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2523,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5360,
											"end": 5374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5390,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5390,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5360,
											"end": 5390,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5390,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5360,
											"end": 5390,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5360,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5357,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 5341,
											"end": 5390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5390,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5401,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 5415,
											"end": 5433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5435,
											"end": 5442,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5444,
											"end": 5450,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5401,
											"end": 5452,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5401,
											"end": 5452,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 5401,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5401,
											"end": 5452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5470,
											"end": 5482,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5470,
											"end": 5482,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5482,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1150,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1149,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 5489,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 702,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 640,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 818,
											"end": 819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 785,
											"end": 822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 802,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 785,
											"end": 822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 785,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 822,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 849,
											"end": 850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 832,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 832,
											"end": 851,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 832,
											"end": 851,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 832,
											"end": 851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 832,
											"end": 851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 858,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8174,
											"end": 8178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8204,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8216,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8191,
											"end": 8218,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8227,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8191,
											"end": 8229,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8237,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "PUSH",
											"source": 7,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8291,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8313,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8302,
											"end": 8313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8302,
											"end": 8313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8320,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2402,
											"end": 2421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2402,
											"end": 2421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6574,
											"end": 6578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6598,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6610,
											"end": 6626,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 6610,
											"end": 6626,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6604,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6598,
											"end": 6608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6628,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6598,
											"end": 6628,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6628,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6598,
											"end": 6628,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6598,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6591,
											"end": 6628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6591,
											"end": 6628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6635,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7656,
											"end": 7660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7710,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7751,
											"end": 7756,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7723,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7725,
											"end": 7729,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7710,
											"end": 7731,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7733,
											"end": 7743,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7710,
											"end": 7749,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7758,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7710,
											"end": 7758,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7758,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7710,
											"end": 7758,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7710,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7685,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7691,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7695,
											"end": 7705,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7707,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7758,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 7798,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 7786,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "PUSH",
											"source": 7,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7801,
											"end": 7814,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7816,
											"end": 7820,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7824,
											"end": 7834,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7836,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7838,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7868,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7884,
											"end": 7889,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 7882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 7868,
											"end": 7891,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7868,
											"end": 7891,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7868,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7948,
											"end": 7956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7936,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7941,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7924,
											"end": 7946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7913,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7919,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7958,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7958,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7958,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 8011,
											"end": 8019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8001,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8004,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 7989,
											"end": 8009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8021,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7989,
											"end": 8021,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8021,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7989,
											"end": 8021,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 7989,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7980,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 7984,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 8021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 8021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 8021,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 8021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8046,
											"end": 8050,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "PUSH",
											"source": 7,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8056,
											"end": 8061,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8063,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8085,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8074,
											"end": 8085,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 8092,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6982,
											"end": 6986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7022,
											"end": 7027,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 7022,
											"end": 7027,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 7006,
											"end": 7029,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7006,
											"end": 7029,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7006,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6999,
											"end": 7029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6999,
											"end": 7029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1903,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 480,
											"end": 546,
											"name": "PUSH",
											"source": 9,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 553,
											"end": 584,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 553,
											"end": 584,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8658,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 8755,
											"end": 8765,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8724,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8726,
											"end": 8736,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8738,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8740,
											"end": 8747,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8749,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 8711,
											"end": 8753,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8767,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8767,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8767,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8711,
											"end": 8767,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8767,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8711,
											"end": 8767,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 8711,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8683,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8685,
											"end": 8695,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8670,
											"end": 8697,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8699,
											"end": 8706,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8670,
											"end": 8708,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8767,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8767,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8804,
											"end": 8811,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8792,
											"end": 8802,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "PUSH",
											"source": 7,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8813,
											"end": 8826,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8838,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8842,
											"end": 8849,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8851,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8853,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8874,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8863,
											"end": 8874,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8863,
											"end": 8874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8881,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4352,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 640,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4383,
											"end": 4384,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4379,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 4374,
											"end": 4379,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4365,
											"end": 4386,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4386,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4386,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4365,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4420,
											"end": 4426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4404,
											"end": 4428,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4404,
											"end": 4428,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4404,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4401,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 4396,
											"end": 4428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4428,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4445,
											"end": 4449,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4456,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 640,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 640,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 611,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 611,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 987,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 989,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 966,
											"end": 989,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 957,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1083,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1093,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 484,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 559,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 559,
											"end": 565,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 559,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 559,
											"end": 565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 552,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1210,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH data",
											"source": 0,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1191,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "PUSH",
											"source": 0,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1313,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1323,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1348,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6430,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 6482,
											"end": 6498,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 6482,
											"end": 6498,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6469,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6471,
											"end": 6474,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 6457,
											"end": 6480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6500,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6457,
											"end": 6500,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6500,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6457,
											"end": 6500,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 6457,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6507,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1879,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6700,
											"end": 6704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6724,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 6734,
											"end": 6750,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 6734,
											"end": 6750,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 6724,
											"end": 6732,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6752,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6752,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6724,
											"end": 6752,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6752,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6724,
											"end": 6752,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 6724,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6759,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1952,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1984,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1971,
											"end": 1995,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1971,
											"end": 1995,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1971,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1964,
											"end": 1995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1964,
											"end": 1995,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2002,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6858,
											"end": 6862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 6911,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 6911,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6926,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6911,
											"end": 6926,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6926,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6911,
											"end": 6926,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6894,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6882,
											"end": 6894,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6882,
											"end": 6898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6930,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6930,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6930,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6930,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6930,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6882,
											"end": 6930,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 6882,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6930,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6937,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1539,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8983,
											"end": 8987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9015,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9031,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9043,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9018,
											"end": 9045,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9047,
											"end": 9054,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9056,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8999,
											"end": 9056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8999,
											"end": 9056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9089,
											"end": 9097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9070,
											"end": 9085,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9070,
											"end": 9097,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 9066,
											"end": 9269,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9154,
											"end": 9155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9126,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9128,
											"end": 9138,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9140,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9149,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9151,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9155,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9155,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 9066,
											"end": 9269,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9269,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 9066,
											"end": 9269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9227,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 9241,
											"end": 9256,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9227,
											"end": 9235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9227,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 9227,
											"end": 9239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9227,
											"end": 9258,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9227,
											"end": 9258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9227,
											"end": 9258,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9227,
											"end": 9258,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9227,
											"end": 9258,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9227,
											"end": 9258,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 9227,
											"end": 9258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9199,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9211,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9215,
											"end": 9222,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9224,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9258,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9258,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9269,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 9066,
											"end": 9269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9312,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9293,
											"end": 9303,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "PUSH",
											"source": 7,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9314,
											"end": 9327,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9339,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9314,
											"end": 9341,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9343,
											"end": 9350,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9352,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9354,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9375,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9364,
											"end": 9375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9364,
											"end": 9375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9364,
											"end": 9375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9382,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7130,
											"end": 7146,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7160,
											"end": 7176,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 7160,
											"end": 7176,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7154,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 7149,
											"end": 7158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7178,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7178,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7149,
											"end": 7178,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7178,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7149,
											"end": 7178,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7149,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7130,
											"end": 7178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7130,
											"end": 7178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7249,
											"end": 7257,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7229,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7241,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7243,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7217,
											"end": 7247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7259,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7259,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7217,
											"end": 7259,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7259,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7217,
											"end": 7259,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7217,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7200,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7202,
											"end": 7212,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7259,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7259,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7302,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7304,
											"end": 7306,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 7290,
											"end": 7312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7324,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7290,
											"end": 7324,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7324,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7324,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7290,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7281,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7283,
											"end": 7285,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7287,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7324,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7324,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7349,
											"end": 7359,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "PUSH",
											"source": 7,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 7389,
											"end": 7393,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7382,
											"end": 7393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7382,
											"end": 7393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7382,
											"end": 7393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7400,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3860,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3911,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3886,
											"end": 3911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3896,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3911,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3886,
											"end": 3911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3911,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3972,
											"end": 3973,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3944,
											"end": 3974,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 3960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3944,
											"end": 3974,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 3974,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3935,
											"end": 3976,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3976,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3976,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3935,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4004,
											"end": 4020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4001,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3986,
											"end": 4001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2184,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "11C37937E08000"
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2077,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2522,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2077,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2523,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4042,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4061,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4074,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4074,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4074,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4129,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4114,
											"end": 4129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4129,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4129,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4114,
											"end": 4129,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4129,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4129,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4114,
											"end": 4129,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "PUSH",
											"source": 7,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4131,
											"end": 4143,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4131,
											"end": 4143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4145,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "PUSH",
											"source": 7,
											"value": "817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1"
										},
										{
											"begin": 4187,
											"end": 4203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4224,
											"end": 4235,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4224,
											"end": 4235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4269,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4258,
											"end": 4269,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 4276,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1316,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1304,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1316,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1316,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 9,
											"value": "5065726D69743A206578706972656420646561646C696E650000000000000000"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 546,
											"name": "PUSH",
											"source": 9,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 1410,
											"end": 1425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1425,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1464,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1485,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1487,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1487,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1487,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1487,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1487,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1554,
											"name": "PUSH",
											"source": 9,
											"value": "1901"
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1585,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 9,
											"value": "F0"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1586,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1587,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1587,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1587,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1587,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1625,
											"end": 1630,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1633,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1640,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1677,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH data",
											"source": 9,
											"value": "5EF653EDFC38C403EA52D691304FEFFA27A665E594B07A1719AC6B055D64DBEE"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "CODECOPY",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1759,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1760,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1746,
											"end": 1772,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1772,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1746,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1782,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1805,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1782,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 1782,
											"end": 1814,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1814,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1782,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1821,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7518,
											"end": 7531,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7539,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7552,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7511,
											"end": 7552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7511,
											"end": 7552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7559,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1237,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 772,
											"end": 779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 796,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 795,
											"end": 801,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 791,
											"end": 836,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 791,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 824,
											"end": 825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 836,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 858,
											"end": 859,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 858,
											"end": 863,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 846,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 846,
											"end": 863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 890,
											"end": 891,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 885,
											"end": 886,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 881,
											"end": 882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 881,
											"end": 886,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 881,
											"end": 886,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 881,
											"end": 891,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH data",
											"source": 6,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 873,
											"end": 929,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 947,
											"end": 948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 940,
											"end": 948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 940,
											"end": 948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 955,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 714,
											"end": 955,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 714,
											"end": 955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 714,
											"end": 955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 199,
											"end": 375,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 199,
											"end": 375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 257,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 285,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 292,
											"end": 293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 288,
											"end": 289,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 288,
											"end": 293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 276,
											"end": 293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 316,
											"end": 317,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 311,
											"end": 312,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 311,
											"end": 317,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 311,
											"end": 317,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 303,
											"end": 349,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 360,
											"end": 368,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 360,
											"end": 368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 199,
											"end": 375,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 199,
											"end": 375,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 199,
											"end": 375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 199,
											"end": 375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 199,
											"end": 375,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5679,
											"end": 6359,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5679,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5776,
											"end": 5780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5793,
											"end": 5811,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5839,
											"end": 5859,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5827,
											"end": 5831,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5814,
											"end": 5821,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5814,
											"end": 5825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5833,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5814,
											"end": 5833,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5833,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5814,
											"end": 5833,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5814,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5814,
											"end": 5837,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5861,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5814,
											"end": 5861,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5861,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5814,
											"end": 5861,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5814,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5922,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5957,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6005,
											"end": 6025,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6057,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6057,
											"end": 6076,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6057,
											"end": 6076,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6057,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6112,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6133,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6133,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 6133,
											"end": 6140,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6133,
											"end": 6140,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6133,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6186,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 6197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 6198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 6239,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4"
										},
										{
											"begin": 6241,
											"end": 6256,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6270,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6258,
											"end": 6270,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6272,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "PUSH",
											"source": 7,
											"value": "6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2"
										},
										{
											"begin": 6306,
											"end": 6319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6321,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6321,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 6321,
											"end": 6328,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6321,
											"end": 6328,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6321,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6330,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6352,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6341,
											"end": 6352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 6359,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 6359,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 6359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 6359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 6359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 6359,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 515,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 381,
											"end": 515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 439,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 469,
											"end": 470,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 472,
											"end": 473,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 465,
											"end": 508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 465,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 458,
											"end": 508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 458,
											"end": 508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 381,
											"end": 515,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 381,
											"end": 515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 381,
											"end": 515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 381,
											"end": 515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 381,
											"end": 515,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 532,
											"end": 644,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 532,
											"end": 644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 597,
											"end": 604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 623,
											"end": 637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 623,
											"end": 637,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 616,
											"end": 637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 616,
											"end": 637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 644,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 532,
											"end": 644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 532,
											"end": 644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 644,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 650,
											"end": 828,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 650,
											"end": 828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 820,
											"end": 821,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 802,
											"end": 809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 802,
											"end": 816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 816,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 802,
											"end": 816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 821,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 802,
											"end": 821,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 802,
											"end": 821,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 802,
											"end": 821,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 802,
											"end": 821,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 802,
											"end": 821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 802,
											"end": 821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 802,
											"end": 821,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 802,
											"end": 821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 802,
											"end": 821,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 802,
											"end": 821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 650,
											"end": 828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 650,
											"end": 828,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8362,
											"end": 8557,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 8362,
											"end": 8557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8497,
											"end": 8502,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8478,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8479,
											"end": 8484,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8493,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8494,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8502,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8502,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 8541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8527,
											"end": 8532,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "PUSH",
											"source": 7,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8543,
											"end": 8548,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 8362,
											"end": 8557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8362,
											"end": 8557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8362,
											"end": 8557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8362,
											"end": 8557,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1183,
											"end": 1190,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1215,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1284,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1292,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 708,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 521,
											"end": 708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 640,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 634,
											"end": 640,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 634,
											"end": 640,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 642,
											"end": 654,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 665,
											"end": 674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 677,
											"end": 682,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 665,
											"end": 682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 700,
											"end": 701,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 693,
											"end": 701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 693,
											"end": 701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 693,
											"end": 701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 708,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 521,
											"end": 708,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 708,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
										"5EF653EDFC38C403EA52D691304FEFFA27A665E594B07A1719AC6B055D64DBEE": "5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"INDEX()": "2df75cb1",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceForGons(uint256)": "7965d56d",
							"balanceOf(address)": "70a08231",
							"circulatingSupply()": "9358928b",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"gonsForBalance(uint256)": "1bd39674",
							"increaseAllowance(address,uint256)": "39509351",
							"index()": "2986c0e5",
							"initialize(address)": "c4d66de8",
							"initializer()": "9ce110d7",
							"manager()": "481c6a75",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"rebase(uint256,uint256)": "058ecdb4",
							"rebases(uint256)": "73c69eb7",
							"renounceManagement()": "089208d8",
							"setIndex(uint256)": "40a5737f",
							"stakingContract()": "ee99205c",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LogRebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingContract\",\"type\":\"address\"}],\"name\":\"LogStakingContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"LogSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gons\",\"type\":\"uint256\"}],\"name\":\"balanceForGons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"gonsForBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingContract_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"profit_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epoch_\",\"type\":\"uint256\"}],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rebases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountRebased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberOccured\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_INDEX\",\"type\":\"uint256\"}],\"name\":\"setIndex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC2612Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC2612Permit-permit}.\"},\"rebase(uint256,uint256)\":{\"params\":{\"profit_\":\"uint256\"},\"returns\":{\"_0\":\"uint256\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rebase(uint256,uint256)\":{\"notice\":\"increases sOHM supply to increase staking balances relative to profit_\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"sOlympus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xc06b738394e17f021133584ce4d7fff480d90e9fcacf2605c22e6a3b31c1cb94\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e140b3042cc6c26467e60a0c78fd5a1e86fbe956ef6d8dbab07da22467641c04\",\"dweb:/ipfs/QmZPNj1VkWVmaWpu3CwB7hHq8oiAdyiPsPiEeCcz79KSMq\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/interfaces/IERC2612Permit.sol\":{\"keccak256\":\"0x2b28bfc4e0621eb60b914917dc916cc08ba97eee0a3b06d98fe56ff9ce2c0d59\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b5ddc8c3db72e2cd69a8defcc016910454578b7f46899a7ce0bdec603e58640\",\"dweb:/ipfs/QmYNhiaGjMdGXhooPCTxW3AYNWFii9WSkUcR4KkPqvRM3S\"]},\"contracts/interfaces/IOwnable.sol\":{\"keccak256\":\"0xcbe7146e57c25291f32af9e051e9c3a15f42f79f25c2fbef37a667dd82e00357\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://648792fddf1a8dc11deb4973ee579ae8cf66ce084f37c5b956c2157fb951e832\",\"dweb:/ipfs/QmNS7Jn8tGipLFmbm7MLGsMMrXMBENbvnYENK45SBnSkeG\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]},\"contracts/libraries/Counters.sol\":{\"keccak256\":\"0x7803a8db31ab4407c907b44536f70e1c460835997bb31cdf67a7f8ed0edf7f9e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://a6b92404baa42cc67f22266ea5f6967cc1039b1443f9743a151b78994ee97820\",\"dweb:/ipfs/Qmdm7doaGJN599BEQCrmY6VKNSynmYrzhYnBK9LK9mXnJo\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0xe5eb04491abc8856c9b097673c94902cc9847e5e4cab41fd0286a11385c84277\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://60e02b4dc7b0db9a48117fb2af05a2e1e249c6e502d811d878a011c9534d0ef0\",\"dweb:/ipfs/Qmdt2WpkrAv2YRCATqucTjzKqS3tbbTE22EvPiAodCh5qS\"]},\"contracts/types/ERC20.sol\":{\"keccak256\":\"0xa1b58a3231d7efe286f6bf32ecbdbd2a8a8395c70da96d960e3e0ecf1a6e0aa2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8fcb5129cdae755dabf3798f92161941944f899154a0eaab2dda0a1e5f78ee03\",\"dweb:/ipfs/QmSRzMKPL8kYhc521GKDuzgyHvqFsP5VMxw532XXadyBNV\"]},\"contracts/types/ERC20Permit.sol\":{\"keccak256\":\"0xea1d7e9f03035c6e454dddd84ca8693b6305868b4a85de215bea6ed487ae52bd\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ceb0f9bc321a996264ca07300e6fe5eefddfa05ed1c230b6ebdde3f395067604\",\"dweb:/ipfs/QmbrBvTNjEQjCkNgLTucBBMmRFzNqY9xPmMZuNiHzPJcPq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1846,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1852,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1854,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1856,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1858,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1860,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 2339,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)710_storage)"
							},
							{
								"astId": 2344,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							},
							{
								"astId": 6,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 8,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_newOwner",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1119,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "stakingContract",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1121,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "initializer",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1159,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "rebases",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_struct(Rebase)1156_storage)dyn_storage"
							},
							{
								"astId": 1161,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "INDEX",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1192,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_gonsPerFragment",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1196,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_gonBalances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1202,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_allowedValue",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Rebase)1156_storage)dyn_storage": {
								"base": "t_struct(Rebase)1156_storage",
								"encoding": "dynamic_array",
								"label": "struct sOlympus.Rebase[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)710_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)710_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)710_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 709,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Rebase)1156_storage": {
								"encoding": "inplace",
								"label": "struct sOlympus.Rebase",
								"members": [
									{
										"astId": 1143,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "epoch",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1145,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "rebase",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1147,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "totalStakedBefore",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1149,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "totalStakedAfter",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1151,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "amountRebased",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1153,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "index",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1155,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "blockNumberOccured",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"rebase(uint256,uint256)": {
								"notice": "increases sOHM supply to increase staking balances relative to profit_"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/types/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/types/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/types/ERC20.sol\":{\"keccak256\":\"0xa1b58a3231d7efe286f6bf32ecbdbd2a8a8395c70da96d960e3e0ecf1a6e0aa2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8fcb5129cdae755dabf3798f92161941944f899154a0eaab2dda0a1e5f78ee03\",\"dweb:/ipfs/QmSRzMKPL8kYhc521GKDuzgyHvqFsP5VMxw532XXadyBNV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1846,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1852,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1854,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1856,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1858,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1860,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/types/ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC2612Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC2612Permit-permit}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC2612Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC2612Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/types/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/interfaces/IERC2612Permit.sol\":{\"keccak256\":\"0x2b28bfc4e0621eb60b914917dc916cc08ba97eee0a3b06d98fe56ff9ce2c0d59\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b5ddc8c3db72e2cd69a8defcc016910454578b7f46899a7ce0bdec603e58640\",\"dweb:/ipfs/QmYNhiaGjMdGXhooPCTxW3AYNWFii9WSkUcR4KkPqvRM3S\"]},\"contracts/libraries/Counters.sol\":{\"keccak256\":\"0x7803a8db31ab4407c907b44536f70e1c460835997bb31cdf67a7f8ed0edf7f9e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://a6b92404baa42cc67f22266ea5f6967cc1039b1443f9743a151b78994ee97820\",\"dweb:/ipfs/Qmdm7doaGJN599BEQCrmY6VKNSynmYrzhYnBK9LK9mXnJo\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/types/ERC20.sol\":{\"keccak256\":\"0xa1b58a3231d7efe286f6bf32ecbdbd2a8a8395c70da96d960e3e0ecf1a6e0aa2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8fcb5129cdae755dabf3798f92161941944f899154a0eaab2dda0a1e5f78ee03\",\"dweb:/ipfs/QmSRzMKPL8kYhc521GKDuzgyHvqFsP5VMxw532XXadyBNV\"]},\"contracts/types/ERC20Permit.sol\":{\"keccak256\":\"0xea1d7e9f03035c6e454dddd84ca8693b6305868b4a85de215bea6ed487ae52bd\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ceb0f9bc321a996264ca07300e6fe5eefddfa05ed1c230b6ebdde3f395067604\",\"dweb:/ipfs/QmbrBvTNjEQjCkNgLTucBBMmRFzNqY9xPmMZuNiHzPJcPq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1846,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1852,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1854,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1856,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1858,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1860,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 2339,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)710_storage)"
							},
							{
								"astId": 2344,
								"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)710_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)710_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)710_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 709,
										"contract": "contracts/types/ERC20Permit.sol:ERC20Permit",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"IOwnable": [
							256
						],
						"Ownable": [
							131
						]
					},
					"id": 132,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:0"
						},
						{
							"absolutePath": "contracts/interfaces/IOwnable.sol",
							"file": "./interfaces/IOwnable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 257,
							"src": "71:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IOwnable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 256,
										"src": "128:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOwnable_$256",
											"typeString": "contract IOwnable"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "128:8:0"
								}
							],
							"contractDependencies": [
								256
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								256
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 6,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "144:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "144:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_newOwner",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "173:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "173:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 14,
									"name": "OwnershipPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "228:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "259:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:57:0"
									},
									"src": "206:79:0"
								},
								{
									"anonymous": false,
									"id": 20,
									"name": "OwnershipPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "312:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "343:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:57:0"
									},
									"src": "290:79:0"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "390:88:0",
										"statements": [
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 23,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "400:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 24,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "409:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "409:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "400:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "400:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "459:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 29,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "451:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "451:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 33,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "463:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 28,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "434:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "434:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "EmitStatement",
												"src": "429:42:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "387:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:0:0"
									},
									"scope": 131,
									"src": "375:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										244
									],
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "542:30:0",
										"statements": [
											{
												"expression": {
													"id": 43,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "559:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 42,
												"id": 44,
												"nodeType": "Return",
												"src": "552:13:0"
											}
										]
									},
									"functionSelector": "481c6a75",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "manager",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 39,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "515:8:0"
									},
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "500:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "533:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:9:0"
									},
									"scope": 131,
									"src": "484:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "601:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 49,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "620:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 50,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "630:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "630:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "620:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "642:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "611:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "611:67:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "688:1:0"
											}
										]
									},
									"id": 58,
									"name": "onlyManager",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:0"
									},
									"src": "578:118:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										247
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "770:88:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 65,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "802:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "818:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "810:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "810:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "810:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 64,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "785:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "780:42:0"
											},
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "832:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "849:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "841:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "841:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "841:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "832:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "832:19:0"
											}
										]
									},
									"functionSelector": "089208d8",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 62,
											"modifierName": {
												"id": 61,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "756:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "756:13:0"
										}
									],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 60,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "747:8:0"
									},
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:0:0"
									},
									"scope": 131,
									"src": "702:156:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										252
									],
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "947:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "newOwner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "966:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "987:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "979:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "979:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "979:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "966:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "991:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "957:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "957:75:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "1064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 100,
															"name": "newOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1072:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1047:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1047:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "1042:41:0"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1093:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "newOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1105:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1093:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1093:21:0"
											}
										]
									},
									"functionSelector": "46f68ee9",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 86,
											"modifierName": {
												"id": 85,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "933:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "933:13:0"
										}
									],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 84,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "924:8:0"
									},
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "889:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:21:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:0:0"
									},
									"scope": 131,
									"src": "864:257:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										255
									],
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1181:167:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 113,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "1200:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1200:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 115,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "1214:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1200:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1225:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															},
															"value": "Ownable: must be new owner to pull"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															}
														],
														"id": 112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1191:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1191:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1191:71:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 121,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "1294:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 122,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "1302:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 120,
														"name": "OwnershipPulled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1277:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1277:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "EmitStatement",
												"src": "1272:41:0"
											},
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1323:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 126,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1332:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1323:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "1323:18:0"
											}
										]
									},
									"functionSelector": "5a96ac0a",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 110,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1172:8:0"
									},
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1154:2:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:0:0"
									},
									"scope": 131,
									"src": "1131:217:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 132,
							"src": "108:1242:0"
						}
					],
					"src": "46:1304:0"
				},
				"id": 0
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							208
						]
					},
					"id": 209,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "80:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 208,
							"linearizedBaseContracts": [
								208
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "126:62:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "237:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:1"
									},
									"scope": 208,
									"src": "191:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "250:68:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "340:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "380:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:9:1"
									},
									"scope": 208,
									"src": "321:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "393:197:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "611:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "630:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:35:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "664:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "664:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:6:1"
									},
									"scope": 208,
									"src": "593:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "674:252:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "948:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "963:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1003:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:9:1"
									},
									"scope": 208,
									"src": "929:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1016:616:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1669:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1651:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1703:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1703:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:6:1"
									},
									"scope": 208,
									"src": "1635:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "1713:280:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2018:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2034:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2053:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2017:51:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2087:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2086:6:1"
									},
									"scope": 208,
									"src": "1996:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "2097:148:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 198,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "2263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "2285:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "2305:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:57:1"
									},
									"src": "2248:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "2324:142:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 207,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2484:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2507:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2532:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2532:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:63:1"
									},
									"src": "2469:78:1"
								}
							],
							"scope": 209,
							"src": "105:2444:1"
						}
					],
					"src": "80:2469:1"
				},
				"id": 1
			},
			"contracts/interfaces/IERC2612Permit.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC2612Permit.sol",
					"exportedSymbols": {
						"IERC2612Permit": [
							237
						]
					},
					"id": 238,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 210,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC2612Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "103:834:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "990:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1015:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1039:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1065:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 220,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1065:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1082:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1101:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 224,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:159:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1125:0:2"
									},
									"scope": 237,
									"src": "942:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1132:302:2",
										"text": " @dev Returns the current ERC2612 nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1455:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:15:2"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:2"
									},
									"scope": 237,
									"src": "1439:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 238,
							"src": "72:1432:2"
						}
					],
					"src": "46:1458:2"
				},
				"id": 2
			},
			"contracts/interfaces/IOwnable.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							256
						]
					},
					"id": 257,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 256,
							"linearizedBaseContracts": [
								256
							],
							"name": "IOwnable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "481c6a75",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "manager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:3"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "136:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:9:3"
									},
									"scope": 256,
									"src": "94:51:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "089208d8",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:2:3"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:0:3"
									},
									"scope": 256,
									"src": "149:39:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46f68ee9",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "219:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:21:3"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:0:3"
									},
									"scope": 256,
									"src": "194:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a96ac0a",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:2:3"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:3"
									},
									"scope": 256,
									"src": "254:35:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 257,
							"src": "71:220:3"
						}
					],
					"src": "46:245:3"
				},
				"id": 3
			},
			"contracts/libraries/Address.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Address.sol",
					"exportedSymbols": {
						"Address": [
							701
						]
					},
					"id": 702,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 258,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "78:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 701,
							"linearizedBaseContracts": [
								701
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "807:347:4",
										"statements": [
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 274,
														"src": "1004:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1004:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"nodeType": "VariableDeclarationStatement",
												"src": "1004:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1091:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1093:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1113:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1101:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1093:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 261,
														"isOffset": false,
														"isSlot": false,
														"src": "1113:7:4",
														"valueSize": 1
													},
													{
														"declaration": 267,
														"isOffset": false,
														"isSlot": false,
														"src": "1093:4:4",
														"valueSize": 1
													}
												],
												"id": 269,
												"nodeType": "InlineAssembly",
												"src": "1082:41:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 270,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "1139:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1146:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1139:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 265,
												"id": 273,
												"nodeType": "Return",
												"src": "1132:15:4"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "171:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "761:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:17:4"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "801:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "801:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:6:4"
									},
									"scope": 701,
									"src": "741:413:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "2142:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 286,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2168:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2160:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 284,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2160:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2160:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2160:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 289,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "2185:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2160:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2152:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "2152:73:4"
											},
											{
												"assignments": [
													295,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "2314:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 294,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2314:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 302,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2364:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 296,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "2332:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2332:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 298,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "2355:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2332:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2332:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2313:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "2385:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2394:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2377:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2377:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2377:78:4"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "1160:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "2090:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "2117:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:43:4"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2142:0:4"
									},
									"scope": 701,
									"src": "2071:391:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "3292:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3320:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3328:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3334:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 319,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															326,
															346
														],
														"referencedDeclaration": 346,
														"src": "3307:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3307:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 318,
												"id": 324,
												"nodeType": "Return",
												"src": "3300:67:4"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "2468:730:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3225:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3241:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3241:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:35:4"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3278:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3278:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3277:14:4"
									},
									"scope": 701,
									"src": "3203:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "3713:77:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 339,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3753:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 340,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3761:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3767:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 342,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "3770:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 338,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "3730:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3730:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 337,
												"id": 344,
												"nodeType": "Return",
												"src": "3723:60:4"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3380:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3618:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3618:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3634:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3634:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3653:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3653:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3617:63:4"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3699:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3699:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3698:14:4"
									},
									"scope": 701,
									"src": "3596:194:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "4265:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 359,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "4304:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "4312:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 361,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "4318:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 358,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															366,
															416
														],
														"referencedDeclaration": 416,
														"src": "4282:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4282:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 357,
												"id": 364,
												"nodeType": "Return",
												"src": "4275:94:4"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "3796:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "4183:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4183:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "4199:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 350,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4199:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "4218:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4182:50:4"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "4251:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4251:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4250:14:4"
									},
									"scope": 701,
									"src": "4152:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "5095:382:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 383,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5121:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5113:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 381,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5113:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5113:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5113:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 386,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "5138:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5113:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5145:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5105:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "5105:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 393,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "5215:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 392,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "5204:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5204:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5224:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5196:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5196:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "5196:60:4"
											},
											{
												"assignments": [
													399,
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "5327:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 398,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5327:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "5341:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 400,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5341:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 408,
												"initialValue": {
													"arguments": [
														{
															"id": 406,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "5396:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 402,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "5368:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5368:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 404,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "5388:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5368:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5326:75:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "5436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 411,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "5445:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 412,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "5457:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 409,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "5418:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5418:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 379,
												"id": 414,
												"nodeType": "Return",
												"src": "5411:59:4"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "4382:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "4985:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4985:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "5001:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5001:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "5020:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5020:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "5035:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 374,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5035:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4984:78:4"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "5081:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5081:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5080:14:4"
									},
									"scope": 701,
									"src": "4954:523:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "5627:814:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 431,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "5656:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 430,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "5645:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5645:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5665:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5637:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5637:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "5637:60:4"
											},
											{
												"assignments": [
													437,
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "5768:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 436,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 439,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "5782:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 438,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5782:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"arguments": [
														{
															"id": 444,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "5840:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 440,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "5809:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5809:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 442,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "5829:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5809:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5767:78:4"
											},
											{
												"condition": {
													"id": 447,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 437,
													"src": "5859:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 463,
													"nodeType": "Block",
													"src": "5916:519:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 451,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "6000:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6000:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6000:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 461,
																"nodeType": "Block",
																"src": "6372:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 458,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 424,
																					"src": "6397:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 457,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6390:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6390:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 460,
																		"nodeType": "ExpressionStatement",
																		"src": "6390:20:4"
																	}
																]
															},
															"id": 462,
															"nodeType": "IfStatement",
															"src": "5996:429:4",
															"trueBody": {
																"id": 456,
																"nodeType": "Block",
																"src": "6023:343:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6207:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6229:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6258:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6252:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6252:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6233:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6301:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6305:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6297:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6297:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6318:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6290:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6290:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6290:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 439,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6258:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 439,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6305:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 455,
																		"nodeType": "InlineAssembly",
																		"src": "6198:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 464,
												"nodeType": "IfStatement",
												"src": "5855:580:4",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "5868:42:4",
													"statements": [
														{
															"expression": {
																"id": 448,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "5889:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 428,
															"id": 449,
															"nodeType": "Return",
															"src": "5882:17:4"
														}
													]
												}
											}
										]
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5515:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5531:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5531:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5550:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5550:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5568:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 423,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5568:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5514:81:4"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5613:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5613:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5612:14:4"
									},
									"scope": 701,
									"src": "5483:958:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "6716:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "6752:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "6760:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6766:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 476,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															483,
															518
														],
														"referencedDeclaration": 518,
														"src": "6733:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6733:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 475,
												"id": 481,
												"nodeType": "Return",
												"src": "6726:80:4"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "6445:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6644:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6644:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6660:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6660:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6643:35:4"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6702:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6702:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6701:14:4"
									},
									"scope": 701,
									"src": "6616:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "7125:288:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 497,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "7154:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 496,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "7143:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7143:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7163:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7135:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7135:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "7135:67:4"
											},
											{
												"assignments": [
													503,
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 503,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 517,
														"src": "7273:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 502,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7273:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 517,
														"src": "7287:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 504,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7287:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 510,
												"initialValue": {
													"arguments": [
														{
															"id": 508,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "7332:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 506,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "7314:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "7314:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7314:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7272:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "7372:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 513,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "7381:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 514,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "7393:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 511,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "7354:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7354:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 494,
												"id": 516,
												"nodeType": "Return",
												"src": "7347:59:4"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "6819:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "7025:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "7041:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7041:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "7060:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 489,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7060:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:63:4"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "7111:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7111:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7110:14:4"
									},
									"scope": 701,
									"src": "6997:416:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "7689:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 529,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "7727:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 530,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "7735:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7741:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 528,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															535,
															570
														],
														"referencedDeclaration": 570,
														"src": "7706:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7706:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 527,
												"id": 533,
												"nodeType": "Return",
												"src": "7699:84:4"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "7419:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "7622:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7622:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "7638:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7638:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7621:35:4"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "7675:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7675:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7674:14:4"
									},
									"scope": 701,
									"src": "7592:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "8101:292:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 549,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "8130:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 548,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "8119:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8119:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8139:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8111:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8111:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "8111:69:4"
											},
											{
												"assignments": [
													555,
													557
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "8251:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 554,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8251:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 557,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "8265:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 556,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8265:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"initialValue": {
													"arguments": [
														{
															"id": 560,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "8312:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 558,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "8292:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "8292:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8292:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8250:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "8352:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 565,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "8361:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 566,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "8373:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 563,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "8334:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8334:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 546,
												"id": 568,
												"nodeType": "Return",
												"src": "8327:59:4"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "7796:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "8006:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "8022:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8022:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "8041:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 541,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8041:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8005:63:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "8087:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8087:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8086:14:4"
									},
									"scope": 701,
									"src": "7976:417:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "8528:596:4",
										"statements": [
											{
												"condition": {
													"id": 581,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 572,
													"src": "8542:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "8599:519:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 585,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "8683:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8683:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8703:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8683:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 595,
																"nodeType": "Block",
																"src": "9055:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 592,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 576,
																					"src": "9080:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 591,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "9073:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9073:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 594,
																		"nodeType": "ExpressionStatement",
																		"src": "9073:20:4"
																	}
																]
															},
															"id": 596,
															"nodeType": "IfStatement",
															"src": "8679:429:4",
															"trueBody": {
																"id": 590,
																"nodeType": "Block",
																"src": "8706:343:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8890:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8912:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8941:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8935:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8935:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8916:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8984:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8988:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8980:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8980:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "9001:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8973:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8973:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8973:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 574,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8941:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 574,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8988:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 589,
																		"nodeType": "InlineAssembly",
																		"src": "8881:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "8538:580:4",
												"trueBody": {
													"id": 584,
													"nodeType": "Block",
													"src": "8551:42:4",
													"statements": [
														{
															"expression": {
																"id": 582,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "8572:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 580,
															"id": 583,
															"nodeType": "Return",
															"src": "8565:17:4"
														}
													]
												}
											}
										]
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "8426:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8426:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "8440:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8440:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "8465:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 575,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8465:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8425:67:4"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "8514:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 578,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8514:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8513:14:4"
									},
									"scope": 701,
									"src": "8399:725:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "9210:407:4",
										"statements": [
											{
												"assignments": [
													608
												],
												"declarations": [
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "_bytes",
														"nodeType": "VariableDeclaration",
														"scope": 699,
														"src": "9220:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 607,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9220:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 613,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "9253:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9245:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 611,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9245:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9245:17:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9237:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 609,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9237:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9237:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9220:43:4"
											},
											{
												"assignments": [
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "HEX",
														"nodeType": "VariableDeclaration",
														"scope": 699,
														"src": "9273:16:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 617,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9273:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"hexValue": "30313233343536373839616263646566",
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9292:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
														"typeString": "literal_string \"0123456789abcdef\""
													},
													"value": "0123456789abcdef"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9273:37:4"
											},
											{
												"assignments": [
													622
												],
												"declarations": [
													{
														"constant": false,
														"id": 622,
														"mutability": "mutable",
														"name": "_addr",
														"nodeType": "VariableDeclaration",
														"scope": 699,
														"src": "9320:18:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 621,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9320:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3432",
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9351:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															},
															"value": "42"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															}
														],
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9341:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 623,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9345:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9341:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9320:34:4"
											},
											{
												"expression": {
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 628,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "9365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 630,
														"indexExpression": {
															"hexValue": "30",
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9371:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9365:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9376:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "9365:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "9365:14:4"
											},
											{
												"expression": {
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 634,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "9389:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 636,
														"indexExpression": {
															"hexValue": "31",
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9395:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9389:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9400:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "9389:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "9389:14:4"
											},
											{
												"body": {
													"id": 692,
													"nodeType": "Block",
													"src": "9446:133:4",
													"statements": [
														{
															"expression": {
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 650,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "9460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 656,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "32",
																			"id": 651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9466:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 652,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "9468:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9470:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "9468:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9466:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9460:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 657,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "9475:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 668,
																	"indexExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 660,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 608,
																						"src": "9485:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 664,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 663,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 661,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 641,
																							"src": "9492:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3132",
																							"id": 662,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9496:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "9492:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9485:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "34",
																					"id": 665,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9503:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				},
																				"src": "9485:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9479:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 658,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "9479:5:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9479:26:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9475:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "9460:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 670,
															"nodeType": "ExpressionStatement",
															"src": "9460:46:4"
														},
														{
															"expression": {
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 671,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "9520:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 677,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9526:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 673,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "9528:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9530:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "9528:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9526:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9520:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 678,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "9535:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 689,
																	"indexExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 681,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 608,
																						"src": "9545:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 685,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 684,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 682,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 641,
																							"src": "9552:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3132",
																							"id": 683,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9556:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "9552:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9545:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"hexValue": "30783066",
																					"id": 686,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9562:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_15_by_1",
																						"typeString": "int_const 15"
																					},
																					"value": "0x0f"
																				},
																				"src": "9545:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9539:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 679,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "9539:5:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9539:28:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9535:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "9520:48:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 691,
															"nodeType": "ExpressionStatement",
															"src": "9520:48:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "9433:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3230",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9437:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "9433:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"initializationExpression": {
													"assignments": [
														641
													],
													"declarations": [
														{
															"constant": false,
															"id": 641,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 693,
															"src": "9418:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 640,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9418:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 643,
													"initialValue": {
														"hexValue": "30",
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9430:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9418:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9441:3:4",
														"subExpression": {
															"id": 647,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "9441:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 649,
													"nodeType": "ExpressionStatement",
													"src": "9441:3:4"
												},
												"nodeType": "ForStatement",
												"src": "9414:165:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "9603:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9596:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 694,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "9596:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9596:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 606,
												"id": 698,
												"nodeType": "Return",
												"src": "9589:20:4"
											}
										]
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addressToString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "9155:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9155:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9154:18:4"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "9195:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 604,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9195:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9194:15:4"
									},
									"scope": 701,
									"src": "9130:487:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 702,
							"src": "149:9470:4"
						}
					],
					"src": "78:9541:4"
				},
				"id": 4
			},
			"contracts/libraries/Counters.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							750
						],
						"SafeMath": [
							1090
						]
					},
					"id": 751,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 703,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:5"
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 704,
							"nodeType": "ImportDirective",
							"scope": 751,
							"sourceUnit": 1091,
							"src": "70:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 750,
							"linearizedBaseContracts": [
								750
							],
							"name": "Counters",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 707,
									"libraryName": {
										"id": 705,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1090,
										"src": "125:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1090",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "119:27:5",
									"typeName": {
										"id": 706,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "138:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Counters.Counter",
									"id": 710,
									"members": [
										{
											"constant": false,
											"id": 709,
											"mutability": "mutable",
											"name": "_value",
											"nodeType": "VariableDeclaration",
											"scope": 710,
											"src": "491:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 708,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "491:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nodeType": "StructDefinition",
									"scope": 750,
									"src": "152:374:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "606:38:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 717,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "623:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$710_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 709,
													"src": "623:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 716,
												"id": 719,
												"nodeType": "Return",
												"src": "616:21:5"
											}
										]
									},
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "549:23:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$710_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 711,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 710,
													"src": "549:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$710_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:25:5"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "597:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:9:5"
									},
									"scope": 750,
									"src": "532:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "703:125:5",
										"statements": [
											{
												"expression": {
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 726,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "802:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$710_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 709,
														"src": "802:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "820:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "802:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "802:19:5"
											}
										]
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "669:23:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$710_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 722,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 710,
													"src": "669:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$710_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:25:5"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:0:5"
									},
									"scope": 750,
									"src": "650:178:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "887:55:5",
										"statements": [
											{
												"expression": {
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 738,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "897:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$710_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 709,
														"src": "897:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "933:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"expression": {
																	"id": 741,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$710_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 709,
																"src": "914:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "914:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "914:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "897:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "897:38:5"
											}
										]
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "853:23:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$710_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 734,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 710,
													"src": "853:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$710_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:25:5"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:5"
									},
									"scope": 750,
									"src": "834:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 751,
							"src": "96:848:5"
						}
					],
					"src": "46:898:5"
				},
				"id": 5
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1090
						]
					},
					"id": 1091,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 752,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "79:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1090,
							"linearizedBaseContracts": [
								1090
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "266:109:6",
										"statements": [
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "276:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "276:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 763,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "288:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 764,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "292:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "288:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "276:17:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 768,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "311:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 769,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "316:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "311:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "319:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 767,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "303:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "303:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "303:46:6"
											},
											{
												"expression": {
													"id": 774,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 762,
													"src": "367:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 760,
												"id": 775,
												"nodeType": "Return",
												"src": "360:8:6"
											}
										]
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "212:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "223:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "223:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "211:22:6"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "257:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:9:6"
									},
									"scope": 1090,
									"src": "199:176:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "448:67:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 787,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "469:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 788,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "472:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "475:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 786,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															793,
															820
														],
														"referencedDeclaration": 820,
														"src": "465:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "465:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 785,
												"id": 791,
												"nodeType": "Return",
												"src": "458:50:6"
											}
										]
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "394:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "405:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:22:6"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "439:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:9:6"
									},
									"scope": 1090,
									"src": "381:134:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "616:92:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "634:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 806,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "639:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "634:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 808,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "642:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 804,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "626:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "626:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "626:29:6"
											},
											{
												"assignments": [
													812
												],
												"declarations": [
													{
														"constant": false,
														"id": 812,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "665:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 811,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "665:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "677:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 814,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "677:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "665:17:6"
											},
											{
												"expression": {
													"id": 817,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 812,
													"src": "700:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 803,
												"id": 818,
												"nodeType": "Return",
												"src": "693:8:6"
											}
										]
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "534:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "545:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "556:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 798,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:50:6"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "607:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:9:6"
									},
									"scope": 1090,
									"src": "521:187:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "781:174:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 829,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "795:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "800:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "795:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 835,
												"nodeType": "IfStatement",
												"src": "791:45:6",
												"trueBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "803:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "824:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 828,
															"id": 833,
															"nodeType": "Return",
															"src": "817:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "846:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 836,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "846:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 838,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "858:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 839,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "862:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "858:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "846:17:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 843,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "881:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 844,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "885:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "881:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 846,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "890:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "881:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "893:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 842,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "873:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "873:56:6"
											},
											{
												"expression": {
													"id": 851,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 837,
													"src": "947:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 828,
												"id": 852,
												"nodeType": "Return",
												"src": "940:8:6"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "727:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "738:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "726:22:6"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "772:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:9:6"
									},
									"scope": 1090,
									"src": "714:241:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "1028:63:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 864,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1049:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 865,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "1052:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1055:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 863,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															870,
															909
														],
														"referencedDeclaration": 909,
														"src": "1045:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 862,
												"id": 868,
												"nodeType": "Return",
												"src": "1038:46:6"
											}
										]
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "974:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "985:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:22:6"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1019:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:6"
									},
									"scope": 1090,
									"src": "961:130:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "1192:174:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 882,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "1210:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1210:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 885,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "1217:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1202:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "1202:28:6"
											},
											{
												"assignments": [
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "1240:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 888,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1240:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "1252:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 891,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "1256:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1252:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1240:17:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 895,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "1274:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 896,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 874,
																		"src": "1279:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 897,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "1283:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1279:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 899,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "1287:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 900,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 874,
																		"src": "1291:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1287:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1279:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1274:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 894,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1267:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1267:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "1267:26:6"
											},
											{
												"expression": {
													"id": 906,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 889,
													"src": "1358:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 880,
												"id": 907,
												"nodeType": "Return",
												"src": "1351:8:6"
											}
										]
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1110:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1121:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1132:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 875,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1132:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:50:6"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1183:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:9:6"
									},
									"scope": 1090,
									"src": "1097:269:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "1476:265:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "1490:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1494:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1490:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 956,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "1697:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1697:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 964,
													"nodeType": "IfStatement",
													"src": "1693:42:6",
													"trueBody": {
														"id": 963,
														"nodeType": "Block",
														"src": "1705:30:6",
														"statements": [
															{
																"expression": {
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 959,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "1719:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1719:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 962,
																"nodeType": "ExpressionStatement",
																"src": "1719:5:6"
															}
														]
													}
												},
												"id": 965,
												"nodeType": "IfStatement",
												"src": "1486:249:6",
												"trueBody": {
													"id": 955,
													"nodeType": "Block",
													"src": "1497:190:6",
													"statements": [
														{
															"expression": {
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 919,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "1511:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 920,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "1515:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1511:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 922,
															"nodeType": "ExpressionStatement",
															"src": "1511:5:6"
														},
														{
															"assignments": [
																924
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 924,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 955,
																	"src": "1530:6:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 923,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1530:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 932,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 927,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 911,
																				"src": "1549:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1552:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 926,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				870,
																				909
																			],
																			"referencedDeclaration": 870,
																			"src": "1544:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1544:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1556:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 925,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "1539:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1539:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1530:29:6"
														},
														{
															"body": {
																"id": 953,
																"nodeType": "Block",
																"src": "1587:90:6",
																"statements": [
																	{
																		"expression": {
																			"id": 938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 936,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 914,
																				"src": "1605:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 937,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 924,
																				"src": "1609:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1605:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 939,
																		"nodeType": "ExpressionStatement",
																		"src": "1605:5:6"
																	},
																	{
																		"expression": {
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 940,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 924,
																				"src": "1628:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 944,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 911,
																										"src": "1647:1:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 945,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 924,
																										"src": "1650:1:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 943,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										870,
																										909
																									],
																									"referencedDeclaration": 870,
																									"src": "1642:3:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 946,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1642:11:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 947,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 924,
																								"src": "1655:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 942,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 777,
																							"src": "1637:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 948,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1637:20:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 949,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1659:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 941,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						870,
																						909
																					],
																					"referencedDeclaration": 870,
																					"src": "1632:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1632:30:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1628:34:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 952,
																		"nodeType": "ExpressionStatement",
																		"src": "1628:34:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 933,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "1580:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 934,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "1584:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1580:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 954,
															"nodeType": "WhileStatement",
															"src": "1573:104:6"
														}
													]
												}
											}
										]
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1434:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:11:6"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1468:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:8:6"
									},
									"scope": 1090,
									"src": "1419:322:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "1862:63:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 978,
																	"name": "total_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "1889:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 979,
																	"name": "percentage_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "1897:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 977,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "1884:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1884:26:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31303030",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1912:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"id": 976,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															870,
															909
														],
														"referencedDeclaration": 870,
														"src": "1879:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1879:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 975,
												"id": 983,
												"nodeType": "Return",
												"src": "1872:46:6"
											}
										]
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentageAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1777:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "percentage_",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1793:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 970,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1775:37:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "percentAmount_",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1837:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:26:6"
									},
									"scope": 1090,
									"src": "1750:175:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "2105:83:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "total_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "2127:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 998,
																			"name": "total_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "2145:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 999,
																			"name": "percentageToSub_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "2153:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 997,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "2140:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2140:31:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"id": 996,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	870,
																	909
																],
																"referencedDeclaration": 870,
																"src": "2135:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2135:44:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															793,
															820
														],
														"referencedDeclaration": 793,
														"src": "2122:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 993,
												"id": 1004,
												"nodeType": "Return",
												"src": "2115:66:6"
											}
										]
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "substractPercentage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "2022:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "percentageToSub_",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "2038:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 988,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2038:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:42:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "result_",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "2087:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2087:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:19:6"
									},
									"scope": 1090,
									"src": "1992:196:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "2297:55:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1017,
																	"name": "part_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "2323:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2330:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"id": 1016,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "2319:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2319:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1020,
															"name": "total_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "2337:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1015,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															870,
															909
														],
														"referencedDeclaration": 870,
														"src": "2314:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1014,
												"id": 1022,
												"nodeType": "Return",
												"src": "2307:38:6"
											}
										]
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentageOfTotal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "part_",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "2222:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "2237:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:33:6"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "percent_",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "2278:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2276:20:6"
									},
									"scope": 1090,
									"src": "2194:158:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "2620:119:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1034,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "2692:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2696:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2692:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1037,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2691:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1038,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "2702:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2706:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2702:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1041,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2701:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2691:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1043,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1027,
																					"src": "2713:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 1044,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2717:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2713:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1046,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1029,
																					"src": "2721:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 1047,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2725:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2721:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2713:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1050,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2712:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2730:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2712:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1053,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2711:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2691:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1055,
												"nodeType": "Return",
												"src": "2684:48:6"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "2358:186:6",
										"text": " Taken from Hypersonic https://github.com/M2629/HyperSonic/blob/main/Math.sol\n @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "2566:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "2577:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2565:22:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "2611:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:9:6"
									},
									"scope": 1090,
									"src": "2549:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "2844:61:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1068,
																	"name": "multiplier_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "2873:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1069,
																	"name": "payment_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "2886:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1067,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "2868:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2868:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1066,
														"name": "sqrrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "2861:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2861:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1065,
												"id": 1072,
												"nodeType": "Return",
												"src": "2854:44:6"
											}
										]
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quadraticPricing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "payment_",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "2772:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "multiplier_",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "2790:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:41:6"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "2835:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:9:6"
									},
									"scope": 1090,
									"src": "2745:160:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "3003:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1084,
															"name": "multiplier_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "3023:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1085,
															"name": "supply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "3036:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1083,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "3018:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3018:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1082,
												"id": 1087,
												"nodeType": "Return",
												"src": "3011:34:6"
											}
										]
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bondingCurve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "supply_",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "2932:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "multiplier_",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "2949:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:40:6"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "2994:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:9:6"
									},
									"scope": 1090,
									"src": "2909:141:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1091,
							"src": "175:2877:6"
						}
					],
					"src": "79:2975:6"
				},
				"id": 6
			},
			"contracts/sOHM.sol": {
				"ast": {
					"absolutePath": "contracts/sOHM.sol",
					"exportedSymbols": {
						"Address": [
							701
						],
						"Counters": [
							750
						],
						"ERC20": [
							2323
						],
						"ERC20Permit": [
							2493
						],
						"IERC20": [
							208
						],
						"IERC2612Permit": [
							237
						],
						"IOwnable": [
							256
						],
						"Ownable": [
							131
						],
						"SafeMath": [
							1090
						],
						"sOlympus": [
							1828
						]
					},
					"id": 1829,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1092,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:7"
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 1093,
							"nodeType": "ImportDirective",
							"scope": 1829,
							"sourceUnit": 1091,
							"src": "137:34:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Address.sol",
							"file": "./libraries/Address.sol",
							"id": 1094,
							"nodeType": "ImportDirective",
							"scope": 1829,
							"sourceUnit": 702,
							"src": "172:33:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Counters.sol",
							"file": "./libraries/Counters.sol",
							"id": 1095,
							"nodeType": "ImportDirective",
							"scope": 1829,
							"sourceUnit": 751,
							"src": "206:34:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 1096,
							"nodeType": "ImportDirective",
							"scope": 1829,
							"sourceUnit": 209,
							"src": "241:33:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/types/ERC20Permit.sol",
							"file": "./types/ERC20Permit.sol",
							"id": 1097,
							"nodeType": "ImportDirective",
							"scope": 1829,
							"sourceUnit": 2494,
							"src": "275:33:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 1098,
							"nodeType": "ImportDirective",
							"scope": 1829,
							"sourceUnit": 132,
							"src": "309:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1100,
										"name": "ERC20Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2493,
										"src": "923:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Permit_$2493",
											"typeString": "contract ERC20Permit"
										}
									},
									"id": 1101,
									"nodeType": "InheritanceSpecifier",
									"src": "923:11:7"
								},
								{
									"baseName": {
										"id": 1102,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 131,
										"src": "936:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$131",
											"typeString": "contract Ownable"
										}
									},
									"id": 1103,
									"nodeType": "InheritanceSpecifier",
									"src": "936:7:7"
								}
							],
							"contractDependencies": [
								131,
								208,
								237,
								256,
								2323,
								2493
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1099,
								"nodeType": "StructuredDocumentation",
								"src": "336:563:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1828,
							"linearizedBaseContracts": [
								1828,
								131,
								256,
								2493,
								237,
								2323,
								208
							],
							"name": "sOlympus",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1106,
									"libraryName": {
										"id": 1104,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1090,
										"src": "957:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1090",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "951:27:7",
									"typeName": {
										"id": 1105,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "970:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "1089:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1109,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "1108:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1108:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1111,
																"name": "stakingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "1122:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1108:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1099:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1099:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "1099:40:7"
											},
											{
												"id": 1115,
												"nodeType": "PlaceholderStatement",
												"src": "1149:1:7"
											}
										]
									},
									"id": 1117,
									"name": "onlyStakingContract",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:2:7"
									},
									"src": "1058:99:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ee99205c",
									"id": 1119,
									"mutability": "mutable",
									"name": "stakingContract",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "1207:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1118,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1207:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ce110d7",
									"id": 1121,
									"mutability": "mutable",
									"name": "initializer",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "1279:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1120,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1129,
									"name": "LogSupply",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1329:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1352:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1371:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1328:64:7"
									},
									"src": "1313:80:7"
								},
								{
									"anonymous": false,
									"id": 1137,
									"name": "LogRebase",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1415:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"indexed": false,
												"mutability": "mutable",
												"name": "rebase",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1438:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1454:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1413:56:7"
									},
									"src": "1398:72:7"
								},
								{
									"anonymous": false,
									"id": 1141,
									"name": "LogStakingContractUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakingContract",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1508:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:27:7"
									},
									"src": "1475:59:7"
								},
								{
									"canonicalName": "sOlympus.Rebase",
									"id": 1156,
									"members": [
										{
											"constant": false,
											"id": 1143,
											"mutability": "mutable",
											"name": "epoch",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "1588:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1142,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1588:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1145,
											"mutability": "mutable",
											"name": "rebase",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "1608:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1144,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1608:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "totalStakedBefore",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "1644:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1146,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1644:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "totalStakedAfter",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "1676:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1676:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "amountRebased",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "1707:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1150,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1707:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "1735:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1152,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1735:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "blockNumberOccured",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "1755:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1154,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1755:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Rebase",
									"nodeType": "StructDefinition",
									"scope": 1828,
									"src": "1564:221:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73c69eb7",
									"id": 1159,
									"mutability": "mutable",
									"name": "rebases",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "1856:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Rebase_$1156_storage_$dyn_storage",
										"typeString": "struct sOlympus.Rebase[]"
									},
									"typeName": {
										"baseType": {
											"id": 1157,
											"name": "Rebase",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1156,
											"src": "1856:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Rebase_$1156_storage_ptr",
												"typeString": "struct sOlympus.Rebase"
											}
										},
										"id": 1158,
										"nodeType": "ArrayTypeName",
										"src": "1856:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Rebase_$1156_storage_$dyn_storage_ptr",
											"typeString": "struct sOlympus.Rebase[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2df75cb1",
									"id": 1161,
									"mutability": "mutable",
									"name": "INDEX",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "1886:17:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1160,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1886:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1168,
									"mutability": "constant",
									"name": "MAX_UINT256",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2027:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1167,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "2066:11:7",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2075:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1164,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "2067:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:7",
													"typeDescriptions": {}
												}
											},
											"id": 1166,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2067:10:7",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1175,
									"mutability": "constant",
									"name": "INITIAL_FRAGMENTS_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2132:67:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1169,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2132:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										},
										"id": 1174,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35303030303030",
											"id": 1170,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2184:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5000000_by_1",
												"typeString": "int_const 5000000"
											},
											"value": "5000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 1173,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1171,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2194:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 1172,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2198:1:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "2194:5:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "2184:15:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1183,
									"mutability": "constant",
									"name": "TOTAL_GONS",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2431:92:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1176,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2431:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1177,
											"name": "MAX_UINT256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1168,
											"src": "2469:11:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1178,
														"name": "MAX_UINT256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "2484:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1179,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "2498:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2484:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1181,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2483:40:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "2469:54:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1190,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2665:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1184,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2665:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1189,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "2703:11:7",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2712:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1186,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "2704:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint128_$",
													"typeString": "type(uint128)"
												},
												"typeName": {
													"id": 1185,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:7",
													"typeDescriptions": {}
												}
											},
											"id": 1188,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2704:10:7",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1192,
									"mutability": "mutable",
									"name": "_gonsPerFragment",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2737:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2737:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1196,
									"mutability": "mutable",
									"name": "_gonBalances",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2775:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1195,
										"keyType": {
											"id": 1193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2783:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2775:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1194,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2794:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1202,
									"mutability": "mutable",
									"name": "_allowedValue",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2830:75:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1201,
										"keyType": {
											"id": 1197,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2840:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2830:53:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1200,
											"keyType": {
												"id": 1198,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2861:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2851:30:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1199,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2872:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "3245:147:7",
										"statements": [
											{
												"expression": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1212,
														"name": "initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "3255:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1213,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "3269:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3269:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3255:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "3255:24:7"
											},
											{
												"expression": {
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1217,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "3289:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1218,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "3304:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3289:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "3289:39:7"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1221,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "3338:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1224,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "3372:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1222,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "3357:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 870,
															"src": "3357:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3357:28:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3338:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "3338:47:7"
											}
										]
									},
									"id": 1229,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5374616b6564204f6c796d707573",
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3202:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_160563d5e45bd2d38a59e1d8c9b2de3959abd8b5800722606b884bf092f59dd7",
														"typeString": "literal_string \"Staked Olympus\""
													},
													"value": "Staked Olympus"
												},
												{
													"hexValue": "734f484d",
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3220:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a7e7eb95bb3e87e8dfaa679c27e8e813bf0f9c0b9b260e19a0ebfd934d15679b",
														"typeString": "literal_string \"sOHM\""
													},
													"value": "sOHM"
												},
												{
													"hexValue": "39",
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3228:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												}
											],
											"id": 1208,
											"modifierName": {
												"id": 1204,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2323,
												"src": "3196:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$2323_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3196:34:7"
										},
										{
											"arguments": [],
											"id": 1210,
											"modifierName": {
												"id": 1209,
												"name": "ERC20Permit",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2493,
												"src": "3231:11:7",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Permit_$2493_$",
													"typeString": "type(contract ERC20Permit)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3231:13:7"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3193:2:7"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3245:0:7"
									},
									"scope": 1828,
									"src": "3182:210:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "3867:409:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1237,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "3886:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3886:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1239,
																"name": "initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "3900:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3886:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3912:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 1236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3877:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3877:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "3877:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1245,
																"name": "stakingContract_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "3944:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3972:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3964:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1246,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3964:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3964:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3944:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3935:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3935:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "3935:41:7"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1253,
														"name": "stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "3986:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1254,
														"name": "stakingContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "4004:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3986:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "3986:34:7"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1257,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "4030:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1259,
														"indexExpression": {
															"id": 1258,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "4044:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4030:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1260,
														"name": "TOTAL_GONS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "4064:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4030:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "4030:44:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307830",
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4108:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4100:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1264,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4100:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4100:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1268,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "4114:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1269,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "4131:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1263,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "4090:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4090:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "EmitStatement",
												"src": "4085:60:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1273,
															"name": "stakingContract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "4187:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1272,
														"name": "LogStakingContractUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "4160:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4160:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "EmitStatement",
												"src": "4155:50:7"
											},
											{
												"expression": {
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1276,
														"name": "initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "4224:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4246:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4238:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1277,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4238:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4238:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4224:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "4224:24:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4265:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1235,
												"id": 1284,
												"nodeType": "Return",
												"src": "4258:11:7"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "stakingContract_",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3814:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3814:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3812:28:7"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3860:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3860:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3858:8:7"
									},
									"scope": 1828,
									"src": "3793:483:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "4355:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1296,
																"name": "INDEX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "4374:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4383:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4374:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4365:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4365:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "4365:21:7"
											},
											{
												"expression": {
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1301,
														"name": "INDEX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "4396:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1303,
																"name": "_INDEX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "4420:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1302,
															"name": "gonsForBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "4404:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4404:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4396:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "4396:32:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4445:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1294,
												"id": 1308,
												"nodeType": "Return",
												"src": "4438:11:7"
											}
										]
									},
									"functionSelector": "40a5737f",
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1291,
											"modifierName": {
												"id": 1290,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "4324:11:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4324:13:7"
										}
									],
									"name": "setIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "_INDEX",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "4301:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4301:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4299:15:7"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "4348:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4348:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4346:8:7"
									},
									"scope": 1828,
									"src": "4282:174:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "4717:772:7",
										"statements": [
											{
												"assignments": [
													1323
												],
												"declarations": [
													{
														"constant": false,
														"id": 1323,
														"mutability": "mutable",
														"name": "rebaseAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1402,
														"src": "4727:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4727:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1324,
												"nodeType": "VariableDeclarationStatement",
												"src": "4727:20:7"
											},
											{
												"assignments": [
													1326
												],
												"declarations": [
													{
														"constant": false,
														"id": 1326,
														"mutability": "mutable",
														"name": "circulatingSupply_",
														"nodeType": "VariableDeclaration",
														"scope": 1402,
														"src": "4757:26:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1325,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4757:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1329,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1327,
														"name": "circulatingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "4786:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4786:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4757:48:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1330,
														"name": "profit_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "4821:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4832:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4821:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1350,
															"name": "circulatingSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "5010:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5031:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5010:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1368,
														"nodeType": "Block",
														"src": "5133:47:7",
														"statements": [
															{
																"expression": {
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1364,
																		"name": "rebaseAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "5147:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1365,
																		"name": "profit_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "5162:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5147:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1367,
																"nodeType": "ExpressionStatement",
																"src": "5147:22:7"
															}
														]
													},
													"id": 1369,
													"nodeType": "IfStatement",
													"src": "5005:175:7",
													"trueBody": {
														"id": 1363,
														"nodeType": "Block",
														"src": "5034:93:7",
														"statements": [
															{
																"expression": {
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1353,
																		"name": "rebaseAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "5048:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1359,
																				"name": "circulatingSupply_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1326,
																				"src": "5096:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1356,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1854,
																						"src": "5076:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1354,
																						"name": "profit_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1313,
																						"src": "5063:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 854,
																					"src": "5063:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5063:27:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 870,
																			"src": "5063:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5063:53:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5048:68:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1362,
																"nodeType": "ExpressionStatement",
																"src": "5048:68:7"
															}
														]
													}
												},
												"id": 1370,
												"nodeType": "IfStatement",
												"src": "4816:364:7",
												"trueBody": {
													"id": 1349,
													"nodeType": "Block",
													"src": "4836:163:7",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1334,
																		"name": "epoch_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "4866:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1335,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "4874:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4874:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1337,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1854,
																		"src": "4891:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1333,
																	"name": "LogSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "4855:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4855:50:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1339,
															"nodeType": "EmitStatement",
															"src": "4850:55:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1341,
																		"name": "epoch_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "4935:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4943:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1343,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1524,
																			"src": "4946:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4946:7:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1340,
																	"name": "LogRebase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "4924:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4924:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1346,
															"nodeType": "EmitStatement",
															"src": "4919:36:7"
														},
														{
															"expression": {
																"id": 1347,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "4976:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1321,
															"id": 1348,
															"nodeType": "Return",
															"src": "4969:19:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1371,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "5190:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1374,
																"name": "rebaseAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "5223:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1372,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "5205:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 777,
															"src": "5205:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5205:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5190:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "5190:47:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1378,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "5253:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1379,
														"name": "MAX_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "5268:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5253:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1386,
												"nodeType": "IfStatement",
												"src": "5248:83:7",
												"trueBody": {
													"id": 1385,
													"nodeType": "Block",
													"src": "5281:50:7",
													"statements": [
														{
															"expression": {
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1381,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1854,
																	"src": "5295:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1382,
																	"name": "MAX_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "5310:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5295:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1384,
															"nodeType": "ExpressionStatement",
															"src": "5295:25:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1387,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "5341:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1390,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "5376:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1388,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "5360:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 870,
															"src": "5360:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5360:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5341:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "5341:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1395,
															"name": "circulatingSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "5415:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1396,
															"name": "profit_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "5435:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1397,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "5444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1394,
														"name": "_storeRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "5401:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,uint256) returns (bool)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5401:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "5401:51:7"
											},
											{
												"expression": {
													"id": 1400,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1854,
													"src": "5470:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1321,
												"id": 1401,
												"nodeType": "Return",
												"src": "5463:19:7"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "4462:153:7",
										"text": "@notice increases sOHM supply to increase staking balances relative to profit_\n@param profit_ uint256\n@return uint256"
									},
									"functionSelector": "058ecdb4",
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1318,
											"modifierName": {
												"id": 1317,
												"name": "onlyStakingContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1117,
												"src": "4675:19:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4675:21:7"
										}
									],
									"name": "rebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "profit_",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "4637:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4637:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "4654:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4654:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4635:32:7"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "4707:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4707:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4705:11:7"
									},
									"scope": 1828,
									"src": "4620:869:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "5783:576:7",
										"statements": [
											{
												"assignments": [
													1416
												],
												"declarations": [
													{
														"constant": false,
														"id": 1416,
														"mutability": "mutable",
														"name": "rebasePercent",
														"nodeType": "VariableDeclaration",
														"scope": 1458,
														"src": "5793:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1415,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5793:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1424,
												"initialValue": {
													"arguments": [
														{
															"id": 1422,
															"name": "previousCirculating_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "5839:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5827:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 1417,
																	"name": "profit_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1408,
																	"src": "5814:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 854,
																"src": "5814:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5814:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 870,
														"src": "5814:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5814:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5793:68:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1429,
																	"name": "epoch_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "5916:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1430,
																	"name": "rebasePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "5944:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1431,
																	"name": "previousCirculating_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "6005:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1432,
																		"name": "circulatingSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1514,
																		"src": "6057:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6057:19:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1434,
																	"name": "profit_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1408,
																	"src": "6105:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1435,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1524,
																		"src": "6133:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6133:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1437,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "6174:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "6174:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1428,
																"name": "Rebase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "5886:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Rebase_$1156_storage_ptr_$",
																	"typeString": "type(struct sOlympus.Rebase storage pointer)"
																}
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"epoch",
																"rebase",
																"totalStakedBefore",
																"totalStakedAfter",
																"amountRebased",
																"index",
																"blockNumberOccured"
															],
															"nodeType": "FunctionCall",
															"src": "5886:311:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Rebase_$1156_memory_ptr",
																"typeString": "struct sOlympus.Rebase memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Rebase_$1156_memory_ptr",
																"typeString": "struct sOlympus.Rebase memory"
															}
														],
														"expression": {
															"id": 1425,
															"name": "rebases",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "5872:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Rebase_$1156_storage_$dyn_storage",
																"typeString": "struct sOlympus.Rebase storage ref[] storage ref"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5872:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Rebase_$1156_storage_$returns$__$",
															"typeString": "function (struct sOlympus.Rebase storage ref)"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5872:326:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "5872:326:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1443,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "6233:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1444,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "6241:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6241:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1446,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "6258:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1442,
														"name": "LogSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "6222:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6222:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "EmitStatement",
												"src": "6217:55:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1450,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "6298:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1451,
															"name": "rebasePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "6306:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1452,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "6321:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6321:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1449,
														"name": "LogRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "6287:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6287:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "EmitStatement",
												"src": "6282:48:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6348:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1414,
												"id": 1457,
												"nodeType": "Return",
												"src": "6341:11:7"
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "5495:179:7",
										"text": "@notice emits event with data about rebase\n@param previousCirculating_ uint\n@param profit_ uint\n@param epoch_ uint\n@return bool"
									},
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_storeRebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "previousCirculating_",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "5702:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "profit_",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "5729:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5729:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "5743:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5743:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5700:56:7"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "5776:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5776:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5774:8:7"
									},
									"scope": 1828,
									"src": "5679:680:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1934
									],
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "6440:67:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1471,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "6482:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1467,
																"name": "_gonBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "6457:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1469,
															"indexExpression": {
																"id": 1468,
																"name": "who",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "6471:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6457:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 870,
														"src": "6457:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1466,
												"id": 1473,
												"nodeType": "Return",
												"src": "6450:50:7"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1463,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6411:8:7"
									},
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "6385:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6385:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6383:15:7"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "6430:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6430:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6428:11:7"
									},
									"scope": 1828,
									"src": "6365:142:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "6581:54:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1484,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "6610:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1482,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "6598:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 854,
														"src": "6598:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6598:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1481,
												"id": 1486,
												"nodeType": "Return",
												"src": "6591:37:7"
											}
										]
									},
									"functionSelector": "1bd39674",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gonsForBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "6538:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6538:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6536:15:7"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "6574:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6574:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6572:8:7"
									},
									"scope": 1828,
									"src": "6513:122:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "6707:52:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1497,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "6734:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1495,
															"name": "gons",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "6724:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 870,
														"src": "6724:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6724:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1499,
												"nodeType": "Return",
												"src": "6717:35:7"
											}
										]
									},
									"functionSelector": "7965d56d",
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceForGons",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "gons",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "6666:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6666:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6664:13:7"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "6700:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6700:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6698:8:7"
									},
									"scope": 1828,
									"src": "6641:118:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "6865:72:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1509,
																	"name": "stakingContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "6911:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1508,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1475
																],
																"referencedDeclaration": 1475,
																"src": "6900:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6900:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1506,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "6882:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 793,
														"src": "6882:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6882:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1505,
												"id": 1512,
												"nodeType": "Return",
												"src": "6875:55:7"
											}
										]
									},
									"functionSelector": "9358928b",
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "circulatingSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6833:2:7"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "6858:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6858:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6856:8:7"
									},
									"scope": 1828,
									"src": "6807:130:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "6989:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1520,
															"name": "INDEX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "7022:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1519,
														"name": "balanceForGons",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "7006:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7006:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1518,
												"id": 1522,
												"nodeType": "Return",
												"src": "6999:30:7"
											}
										]
									},
									"functionSelector": "2986c0e5",
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6957:2:7"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "6982:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6982:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6980:8:7"
									},
									"scope": 1828,
									"src": "6943:93:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1955
									],
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "7120:280:7",
										"statements": [
											{
												"assignments": [
													1535
												],
												"declarations": [
													{
														"constant": false,
														"id": 1535,
														"mutability": "mutable",
														"name": "gonValue",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "7130:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7130:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"arguments": [
														{
															"id": 1538,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "7160:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1536,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "7149:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 854,
														"src": "7149:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7149:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7130:48:7"
											},
											{
												"expression": {
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1541,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "7188:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1544,
														"indexExpression": {
															"expression": {
																"id": 1542,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7202:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7202:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7188:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1550,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "7249:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1545,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "7217:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1548,
																"indexExpression": {
																	"expression": {
																		"id": 1546,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "7231:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7231:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7217:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "7217:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7217:42:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7188:71:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "7188:71:7"
											},
											{
												"expression": {
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1554,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "7269:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1556,
														"indexExpression": {
															"id": 1555,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "7283:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7269:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1561,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "7314:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1557,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "7290:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1559,
																"indexExpression": {
																	"id": 1558,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "7304:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7290:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 777,
															"src": "7290:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7290:34:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7269:55:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "7269:55:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1566,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7349:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7349:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1568,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "7361:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1569,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "7365:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1565,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "7339:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7339:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "EmitStatement",
												"src": "7334:38:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7389:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1533,
												"id": 1573,
												"nodeType": "Return",
												"src": "7382:11:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1530,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7096:8:7"
									},
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "7061:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7061:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "7073:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7059:29:7"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "7114:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7114:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7113:6:7"
									},
									"scope": 1828,
									"src": "7042:358:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1973
									],
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "7501:58:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1585,
															"name": "_allowedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "7518:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1587,
														"indexExpression": {
															"id": 1586,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "7533:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7518:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1589,
													"indexExpression": {
														"id": 1588,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "7543:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7518:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1590,
												"nodeType": "Return",
												"src": "7511:41:7"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1581,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7472:8:7"
									},
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "7426:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7426:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "7442:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7442:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7424:35:7"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "7491:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7491:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7489:11:7"
									},
									"scope": 1828,
									"src": "7406:153:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2032
									],
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "7663:429:7",
										"statements": [
											{
												"expression": {
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1604,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "7672:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1608,
															"indexExpression": {
																"id": 1605,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "7687:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7672:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1609,
														"indexExpression": {
															"expression": {
																"id": 1606,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7695:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7695:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7672:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1617,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "7751:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1610,
																		"name": "_allowedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "7710:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1612,
																	"indexExpression": {
																		"id": 1611,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "7725:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7710:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1615,
																"indexExpression": {
																	"expression": {
																		"id": 1613,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "7733:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7733:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7710:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "7710:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7710:48:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7672:86:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "7672:86:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1622,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "7782:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1623,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7788:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7788:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1625,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "7801:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1627,
																"indexExpression": {
																	"id": 1626,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "7816:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7801:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1630,
															"indexExpression": {
																"expression": {
																	"id": 1628,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "7824:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7824:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7801:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1621,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "7772:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7772:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "EmitStatement",
												"src": "7767:71:7"
											},
											{
												"assignments": [
													1634
												],
												"declarations": [
													{
														"constant": false,
														"id": 1634,
														"mutability": "mutable",
														"name": "gonValue",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "7849:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7849:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1638,
												"initialValue": {
													"arguments": [
														{
															"id": 1636,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "7884:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1635,
														"name": "gonsForBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "7868:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7868:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7849:42:7"
											},
											{
												"expression": {
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1639,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "7901:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1641,
														"indexExpression": {
															"id": 1640,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "7915:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7901:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1646,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "7948:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1642,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "7924:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1644,
																"indexExpression": {
																	"id": 1643,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "7937:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7924:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "7924:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7924:34:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7901:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "7901:57:7"
											},
											{
												"expression": {
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1650,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "7968:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1652,
														"indexExpression": {
															"id": 1651,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "7982:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7968:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1657,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "8011:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1653,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "7989:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1655,
																"indexExpression": {
																	"id": 1654,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "8002:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7989:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 777,
															"src": "7989:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7989:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7968:53:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "7968:53:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1662,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "8046:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1663,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "8052:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1664,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "8056:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1661,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "8036:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8036:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "EmitStatement",
												"src": "8031:32:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8081:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1603,
												"id": 1668,
												"nodeType": "Return",
												"src": "8074:11:7"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7637:8:7"
									},
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "7588:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7588:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "7602:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7602:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "7614:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7614:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:43:7"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "7656:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7656:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7654:8:7"
									},
									"scope": 1828,
									"src": "7565:527:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1994
									],
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "8180:140:7",
										"statements": [
											{
												"expression": {
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1680,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "8191:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1684,
															"indexExpression": {
																"expression": {
																	"id": 1681,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "8206:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8206:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8191:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1685,
														"indexExpression": {
															"id": 1683,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "8220:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8191:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1686,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "8232:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8191:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "8191:46:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1690,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "8263:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8263:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1692,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "8275:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1693,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "8284:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1689,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "8253:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8253:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1695,
												"nodeType": "EmitStatement",
												"src": "8248:43:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8309:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1679,
												"id": 1697,
												"nodeType": "Return",
												"src": "8302:11:7"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1676,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8156:8:7"
									},
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "8116:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8116:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "8133:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8133:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8114:34:7"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "8174:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1677,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8174:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8173:6:7"
									},
									"scope": 1828,
									"src": "8098:222:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2311
									],
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "8455:102:7",
										"statements": [
											{
												"expression": {
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1709,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "8465:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1712,
															"indexExpression": {
																"id": 1710,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1701,
																"src": "8479:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8465:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1713,
														"indexExpression": {
															"id": 1711,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "8486:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8465:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1714,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1705,
														"src": "8497:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8465:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "8465:37:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1718,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "8527:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1719,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "8534:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1720,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "8543:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1717,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "8517:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8517:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1722,
												"nodeType": "EmitStatement",
												"src": "8512:38:7"
											}
										]
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1707,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8438:8:7"
									},
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "8381:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8381:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "8396:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8396:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "8413:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8413:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8379:49:7"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8455:0:7"
									},
									"scope": 1828,
									"src": "8362:195:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2060
									],
									"body": {
										"id": 1765,
										"nodeType": "Block",
										"src": "8660:221:7",
										"statements": [
											{
												"expression": {
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1734,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "8670:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1738,
															"indexExpression": {
																"expression": {
																	"id": 1735,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "8685:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8685:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8670:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1739,
														"indexExpression": {
															"id": 1737,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "8699:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8670:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1747,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "8755:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1740,
																		"name": "_allowedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "8711:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1743,
																	"indexExpression": {
																		"expression": {
																			"id": 1741,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "8726:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8726:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8711:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1745,
																"indexExpression": {
																	"id": 1744,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1726,
																	"src": "8740:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8711:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 777,
															"src": "8711:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8711:56:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8670:97:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "8670:97:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1752,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "8792:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8792:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1754,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "8804:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1755,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "8813:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1758,
																"indexExpression": {
																	"expression": {
																		"id": 1756,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "8828:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8828:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8813:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1760,
															"indexExpression": {
																"id": 1759,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "8842:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8813:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1751,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "8782:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8782:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1762,
												"nodeType": "EmitStatement",
												"src": "8777:76:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8870:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1733,
												"id": 1764,
												"nodeType": "Return",
												"src": "8863:11:7"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 1766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1730,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8636:8:7"
									},
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "8591:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8591:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "8608:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8608:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8589:39:7"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "8654:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8654:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8653:6:7"
									},
									"scope": 1828,
									"src": "8563:318:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2089
									],
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "8989:393:7",
										"statements": [
											{
												"assignments": [
													1777
												],
												"declarations": [
													{
														"constant": false,
														"id": 1777,
														"mutability": "mutable",
														"name": "oldValue",
														"nodeType": "VariableDeclaration",
														"scope": 1826,
														"src": "8999:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1776,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8999:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1784,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1778,
															"name": "_allowedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "9018:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1781,
														"indexExpression": {
															"expression": {
																"id": 1779,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "9033:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9033:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9018:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1783,
													"indexExpression": {
														"id": 1782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "9047:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9018:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8999:57:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1785,
														"name": "subtractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "9070:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1786,
														"name": "oldValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "9089:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9070:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1810,
													"nodeType": "Block",
													"src": "9172:97:7",
													"statements": [
														{
															"expression": {
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1798,
																			"name": "_allowedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1202,
																			"src": "9186:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1802,
																		"indexExpression": {
																			"expression": {
																				"id": 1799,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "9201:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9201:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9186:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1803,
																	"indexExpression": {
																		"id": 1801,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "9215:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9186:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1806,
																			"name": "subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1770,
																			"src": "9241:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1804,
																			"name": "oldValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1777,
																			"src": "9227:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 793,
																		"src": "9227:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9227:31:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9186:72:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1809,
															"nodeType": "ExpressionStatement",
															"src": "9186:72:7"
														}
													]
												},
												"id": 1811,
												"nodeType": "IfStatement",
												"src": "9066:203:7",
												"trueBody": {
													"id": 1797,
													"nodeType": "Block",
													"src": "9099:67:7",
													"statements": [
														{
															"expression": {
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1788,
																			"name": "_allowedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1202,
																			"src": "9113:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1792,
																		"indexExpression": {
																			"expression": {
																				"id": 1789,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "9128:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9128:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9113:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1793,
																	"indexExpression": {
																		"id": 1791,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "9142:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9113:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9154:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9113:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1796,
															"nodeType": "ExpressionStatement",
															"src": "9113:42:7"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1813,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "9293:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9293:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1815,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "9305:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1816,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "9314:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1819,
																"indexExpression": {
																	"expression": {
																		"id": 1817,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "9329:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9329:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9314:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1821,
															"indexExpression": {
																"id": 1820,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "9343:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9314:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1812,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "9283:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9283:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1823,
												"nodeType": "EmitStatement",
												"src": "9278:76:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9371:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1775,
												"id": 1825,
												"nodeType": "Return",
												"src": "9364:11:7"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1772,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8965:8:7"
									},
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "8915:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8915:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "8932:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8932:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8913:44:7"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "8983:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8983:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8982:6:7"
									},
									"scope": 1828,
									"src": "8887:495:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1829,
							"src": "902:8482:7"
						}
					],
					"src": "113:9271:7"
				},
				"id": 7
			},
			"contracts/types/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/types/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							2323
						],
						"IERC20": [
							208
						],
						"SafeMath": [
							1090
						]
					},
					"id": 2324,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1830,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "72:23:8"
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 1831,
							"nodeType": "ImportDirective",
							"scope": 2324,
							"sourceUnit": 209,
							"src": "96:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "../libraries/SafeMath.sol",
							"id": 1832,
							"nodeType": "ImportDirective",
							"scope": 2324,
							"sourceUnit": 1091,
							"src": "131:35:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1833,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 208,
										"src": "197:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$208",
											"typeString": "contract IERC20"
										}
									},
									"id": 1834,
									"nodeType": "InheritanceSpecifier",
									"src": "197:6:8"
								}
							],
							"contractDependencies": [
								208
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2323,
							"linearizedBaseContracts": [
								2323,
								208
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1837,
									"libraryName": {
										"id": 1835,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1090,
										"src": "215:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1090",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "209:27:8",
									"typeName": {
										"id": 1836,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "228:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1842,
									"mutability": "constant",
									"name": "ERC20TOKEN_ERC1820_INTERFACE_ID",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "277:84:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1838,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "277:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4552433230546f6b656e",
												"id": 1840,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "347:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												},
												"value": "ERC20Token"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												}
											],
											"id": 1839,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "336:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1841,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "336:25:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1846,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "393:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1845,
										"keyType": {
											"id": 1843,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "402:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "393:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1844,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "413:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1852,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "468:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1851,
										"keyType": {
											"id": 1847,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "477:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "468:49:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1850,
											"keyType": {
												"id": 1848,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "497:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "488:28:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1849,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "508:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1854,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "566:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1853,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "566:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1856,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "623:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1855,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "623:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1858,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "676:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1857,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "676:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1860,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "731:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1859,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "731:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "1132:74:8",
										"statements": [
											{
												"expression": {
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1870,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "1138:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1871,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "1146:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1138:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "1138:13:8"
											},
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1874,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1858,
														"src": "1157:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1875,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "1167:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1157:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "1157:17:8"
											},
											{
												"expression": {
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1878,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1860,
														"src": "1180:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1879,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "1192:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1180:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "1180:21:8"
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "760:295:8",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1883,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "1071:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1862,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1071:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "1092:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1864,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1092:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "1115:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1866,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1115:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:61:8"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1132:0:8"
									},
									"scope": 2323,
									"src": "1058:148:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "1338:23:8",
										"statements": [
											{
												"expression": {
													"id": 1889,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1856,
													"src": "1351:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1888,
												"id": 1890,
												"nodeType": "Return",
												"src": "1344:12:8"
											}
										]
									},
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "1210:50:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1299:2:8"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "1323:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1886,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1323:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:8"
									},
									"scope": 2323,
									"src": "1286:75:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1900,
										"nodeType": "Block",
										"src": "1541:25:8",
										"statements": [
											{
												"expression": {
													"id": 1898,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1858,
													"src": "1554:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1897,
												"id": 1899,
												"nodeType": "Return",
												"src": "1547:14:8"
											}
										]
									},
									"documentation": {
										"id": 1893,
										"nodeType": "StructuredDocumentation",
										"src": "1365:96:8",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1502:2:8"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "1526:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1526:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1525:15:8"
									},
									"scope": 2323,
									"src": "1487:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "2232:27:8",
										"statements": [
											{
												"expression": {
													"id": 1907,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1860,
													"src": "2245:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1906,
												"id": 1908,
												"nodeType": "Return",
												"src": "2238:16:8"
											}
										]
									},
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "1570:588:8",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:8"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "2225:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1904,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2225:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:7:8"
									},
									"scope": 2323,
									"src": "2184:75:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										139
									],
									"body": {
										"id": 1919,
										"nodeType": "Block",
										"src": "2396:30:8",
										"statements": [
											{
												"expression": {
													"id": 1917,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1854,
													"src": "2409:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1916,
												"id": 1918,
												"nodeType": "Return",
												"src": "2402:19:8"
											}
										]
									},
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "2263:45:8",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1913,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2369:8:8"
									},
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:8"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "2387:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2386:9:8"
									},
									"scope": 2323,
									"src": "2334:92:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										147
									],
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "2582:36:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1929,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "2595:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1931,
													"indexExpression": {
														"id": 1930,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "2605:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2595:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1928,
												"id": 1932,
												"nodeType": "Return",
												"src": "2588:25:8"
											}
										]
									},
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "2430:43:8",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1925,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2555:8:8"
									},
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "2518:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2517:17:8"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "2573:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:9:8"
									},
									"scope": 2323,
									"src": "2499:119:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										157
									],
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "2962:68:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1946,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2978:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2978:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1948,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "2990:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1949,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "3001:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1945,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "2968:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2968:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1951,
												"nodeType": "ExpressionStatement",
												"src": "2968:40:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3021:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1944,
												"id": 1953,
												"nodeType": "Return",
												"src": "3014:11:8"
											}
										]
									},
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "2622:178:8",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1941,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2938:8:8"
									},
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "2888:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "2907:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2907:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:35:8"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "2956:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1942,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2956:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2955:6:8"
									},
									"scope": 2323,
									"src": "2870:160:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										167
									],
									"body": {
										"id": 1972,
										"nodeType": "Block",
										"src": "3211:51:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1966,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "3228:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1968,
														"indexExpression": {
															"id": 1967,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "3240:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3228:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1970,
													"indexExpression": {
														"id": 1969,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "3247:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3228:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1965,
												"id": 1971,
												"nodeType": "Return",
												"src": "3221:34:8"
											}
										]
									},
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "3036:47:8",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1962,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3184:8:8"
									},
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "3132:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "3147:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3147:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:32:8"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "3202:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:9:8"
									},
									"scope": 2323,
									"src": "3113:149:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										177
									],
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "3514:75:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1985,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3533:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3533:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1987,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "3545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1988,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1978,
															"src": "3554:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1984,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2311,
														"src": "3524:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3524:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1990,
												"nodeType": "ExpressionStatement",
												"src": "3524:37:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3578:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1983,
												"id": 1992,
												"nodeType": "Return",
												"src": "3571:11:8"
											}
										]
									},
									"documentation": {
										"id": 1974,
										"nodeType": "StructuredDocumentation",
										"src": "3268:127:8",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1980,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3490:8:8"
									},
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "3442:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "3459:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3459:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3441:33:8"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "3508:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3508:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3507:6:8"
									},
									"scope": 2323,
									"src": "3425:164:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										189
									],
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "4193:201:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2008,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "4213:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2009,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "4221:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2010,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "4232:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2007,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "4203:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4203:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2012,
												"nodeType": "ExpressionStatement",
												"src": "4203:36:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2014,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "4258:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2015,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4266:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4266:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 2024,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2001,
																	"src": "4314:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4322:42:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2017,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1852,
																			"src": "4278:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2019,
																		"indexExpression": {
																			"id": 2018,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1997,
																			"src": "4290:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4278:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2022,
																	"indexExpression": {
																		"expression": {
																			"id": 2020,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "4298:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4298:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4278:31:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 820,
																"src": "4278:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4278:87:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2013,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2311,
														"src": "4249:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:117:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "4249:117:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4383:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2006,
												"id": 2030,
												"nodeType": "Return",
												"src": "4376:11:8"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "3595:456:8",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2003,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4169:8:8"
									},
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "4103:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "4119:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4119:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "4138:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4138:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:51:8"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "4187:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2004,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4187:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:6:8"
									},
									"scope": 2323,
									"src": "4081:313:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "4883:117:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2043,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4902:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4902:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2045,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "4914:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2053,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2037,
																	"src": "4960:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2046,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1852,
																			"src": "4923:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2049,
																		"indexExpression": {
																			"expression": {
																				"id": 2047,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "4935:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4935:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4923:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2051,
																	"indexExpression": {
																		"id": 2050,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2035,
																		"src": "4947:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4923:32:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 777,
																"src": "4923:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4923:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2042,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2311,
														"src": "4893:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4893:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "4893:79:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4989:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2041,
												"id": 2058,
												"nodeType": "Return",
												"src": "4982:11:8"
											}
										]
									},
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "4400:384:8",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "4816:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4816:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "4833:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4815:37:8"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "4877:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4877:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4876:6:8"
									},
									"scope": 2323,
									"src": "4789:211:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "5586:163:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2071,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5605:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5605:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2073,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "5617:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2081,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "5663:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5680:39:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2074,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1852,
																			"src": "5626:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2077,
																		"indexExpression": {
																			"expression": {
																				"id": 2075,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "5638:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5638:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5626:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2079,
																	"indexExpression": {
																		"id": 2078,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2063,
																		"src": "5650:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5626:32:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 820,
																"src": "5626:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5626:94:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2070,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2311,
														"src": "5596:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5596:125:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2085,
												"nodeType": "ExpressionStatement",
												"src": "5596:125:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5738:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2069,
												"id": 2087,
												"nodeType": "Return",
												"src": "5731:11:8"
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "5006:476:8",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "5514:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5514:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "5531:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5531:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5513:42:8"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "5580:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5580:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5579:6:8"
									},
									"scope": 2323,
									"src": "5487:262:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2154,
										"nodeType": "Block",
										"src": "6280:417:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2100,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2092,
																"src": "6294:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6312:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6304:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2101,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6304:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6304:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6294:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6316:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 2099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6286:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2108,
												"nodeType": "ExpressionStatement",
												"src": "6286:70:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2110,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "6370:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6391:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6383:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2111,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6383:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6383:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6370:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6395:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 2109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6362:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6362:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2118,
												"nodeType": "ExpressionStatement",
												"src": "6362:71:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2120,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "6461:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2121,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "6469:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2122,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2096,
															"src": "6480:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2119,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "6440:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6440:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2124,
												"nodeType": "ExpressionStatement",
												"src": "6440:47:8"
											},
											{
												"expression": {
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2125,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "6494:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2127,
														"indexExpression": {
															"id": 2126,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "6504:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6494:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2132,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2096,
																"src": "6536:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6544:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2128,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "6514:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2130,
																"indexExpression": {
																	"id": 2129,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2092,
																	"src": "6524:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6514:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 820,
															"src": "6514:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6514:71:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6494:91:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2136,
												"nodeType": "ExpressionStatement",
												"src": "6494:91:8"
											},
											{
												"expression": {
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2137,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "6591:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2139,
														"indexExpression": {
															"id": 2138,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "6601:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6591:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2144,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2096,
																"src": "6639:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2140,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "6614:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2142,
																"indexExpression": {
																	"id": 2141,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2094,
																	"src": "6624:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6614:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 777,
															"src": "6614:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6614:32:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6591:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2147,
												"nodeType": "ExpressionStatement",
												"src": "6591:55:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2149,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "6666:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2150,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "6674:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2151,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2096,
															"src": "6685:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2148,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "6657:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6657:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2153,
												"nodeType": "EmitStatement",
												"src": "6652:40:8"
											}
										]
									},
									"documentation": {
										"id": 2090,
										"nodeType": "StructuredDocumentation",
										"src": "5753:437:8",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 2155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "6212:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6212:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "6228:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6228:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "6247:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6247:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6211:51:8"
									},
									"returnParameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6280:0:8"
									},
									"scope": 2323,
									"src": "6193:504:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2209,
										"nodeType": "Block",
										"src": "7061:326:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2164,
																"name": "account_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2158,
																"src": "7079:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7099:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7091:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2165,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7091:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7091:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7079:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7103:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 2163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7071:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7071:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2172,
												"nodeType": "ExpressionStatement",
												"src": "7071:66:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2176,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7177:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$2323",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$2323",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 2175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7168:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2174,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7168:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7168:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2178,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "7185:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2179,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "7195:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2173,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "7147:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7147:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2181,
												"nodeType": "ExpressionStatement",
												"src": "7147:57:8"
											},
											{
												"expression": {
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2182,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "7214:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2185,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2160,
																"src": "7246:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2183,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "7229:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 777,
															"src": "7229:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7229:26:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7214:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2188,
												"nodeType": "ExpressionStatement",
												"src": "7214:41:8"
											},
											{
												"expression": {
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2189,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "7265:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2191,
														"indexExpression": {
															"id": 2190,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "7275:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7265:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2196,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2160,
																"src": "7311:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2192,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "7287:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2194,
																"indexExpression": {
																	"id": 2193,
																	"name": "account_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "7297:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7287:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 777,
															"src": "7287:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7287:33:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7265:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2199,
												"nodeType": "ExpressionStatement",
												"src": "7265:55:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2203,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7353:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$2323",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$2323",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7344:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2201,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7344:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7344:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2205,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "7361:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2206,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "7371:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2200,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "7335:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7335:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2208,
												"nodeType": "EmitStatement",
												"src": "7330:50:8"
											}
										]
									},
									"documentation": {
										"id": 2156,
										"nodeType": "StructuredDocumentation",
										"src": "6703:260:8",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 2210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "7008:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7008:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "ammount_",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "7026:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7007:36:8"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7061:0:8"
									},
									"scope": 2323,
									"src": "6993:394:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "7797:345:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2219,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "7815:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7834:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7826:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2220,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7826:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7826:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7815:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7838:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 2218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7807:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7807:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2227,
												"nodeType": "ExpressionStatement",
												"src": "7807:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2229,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "7906:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7923:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7915:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2230,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7915:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7915:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2234,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "7927:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2228,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "7885:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7885:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2236,
												"nodeType": "ExpressionStatement",
												"src": "7885:49:8"
											},
											{
												"expression": {
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2237,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "7945:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2239,
														"indexExpression": {
															"id": 2238,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "7955:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7945:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2244,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2215,
																"src": "7989:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7997:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2240,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "7966:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2242,
																"indexExpression": {
																	"id": 2241,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "7976:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7966:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 820,
															"src": "7966:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7966:68:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7945:89:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "7945:89:8"
											},
											{
												"expression": {
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2249,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "8044:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2252,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2215,
																"src": "8076:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2250,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "8059:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "8059:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8059:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8044:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2255,
												"nodeType": "ExpressionStatement",
												"src": "8044:39:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2257,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "8107:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8124:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8116:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2258,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8116:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8116:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2262,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "8128:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2256,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "8098:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8098:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2264,
												"nodeType": "EmitStatement",
												"src": "8093:42:8"
											}
										]
									},
									"documentation": {
										"id": 2211,
										"nodeType": "StructuredDocumentation",
										"src": "7393:309:8",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 2266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "7747:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7747:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "7764:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7764:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7746:33:8"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7797:0:8"
									},
									"scope": 2323,
									"src": "7732:410:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2310,
										"nodeType": "Block",
										"src": "8673:257:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2277,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "8691:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8708:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8700:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2278,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8700:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8700:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8691:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8712:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 2276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8683:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8683:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "8683:68:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2287,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2271,
																"src": "8769:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8788:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8780:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2288,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8780:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8780:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8769:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8792:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 2286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8761:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8761:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2295,
												"nodeType": "ExpressionStatement",
												"src": "8761:68:8"
											},
											{
												"expression": {
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2296,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "8840:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2299,
															"indexExpression": {
																"id": 2297,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "8852:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8840:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2300,
														"indexExpression": {
															"id": 2298,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "8859:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8840:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2301,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2273,
														"src": "8870:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8840:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2303,
												"nodeType": "ExpressionStatement",
												"src": "8840:36:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2305,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "8900:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2306,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "8907:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2307,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2273,
															"src": "8916:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2304,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "8891:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8891:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2309,
												"nodeType": "EmitStatement",
												"src": "8886:37:8"
											}
										]
									},
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "8148:412:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 2311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "8608:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8608:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "8623:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8623:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "8640:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8640:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8607:48:8"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8673:0:8"
									},
									"scope": 2323,
									"src": "8590:340:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "10149:3:8",
										"statements": []
									},
									"documentation": {
										"id": 2312,
										"nodeType": "StructuredDocumentation",
										"src": "9479:550:8",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "from_",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "10086:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10086:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "to_",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "10101:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10101:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "10114:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10114:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10084:47:8"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10149:0:8"
									},
									"scope": 2323,
									"src": "10055:97:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2324,
							"src": "170:9984:8"
						}
					],
					"src": "72:10082:8"
				},
				"id": 8
			},
			"contracts/types/ERC20Permit.sol": {
				"ast": {
					"absolutePath": "contracts/types/ERC20Permit.sol",
					"exportedSymbols": {
						"Counters": [
							750
						],
						"ERC20": [
							2323
						],
						"ERC20Permit": [
							2493
						],
						"IERC20": [
							208
						],
						"IERC2612Permit": [
							237
						],
						"SafeMath": [
							1090
						]
					},
					"id": 2494,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2325,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:9"
						},
						{
							"absolutePath": "contracts/types/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 2326,
							"nodeType": "ImportDirective",
							"scope": 2494,
							"sourceUnit": 2324,
							"src": "70:21:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC2612Permit.sol",
							"file": "../interfaces/IERC2612Permit.sol",
							"id": 2327,
							"nodeType": "ImportDirective",
							"scope": 2494,
							"sourceUnit": 238,
							"src": "92:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Counters.sol",
							"file": "../libraries/Counters.sol",
							"id": 2328,
							"nodeType": "ImportDirective",
							"scope": 2494,
							"sourceUnit": 751,
							"src": "135:35:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2329,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2323,
										"src": "205:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$2323",
											"typeString": "contract ERC20"
										}
									},
									"id": 2330,
									"nodeType": "InheritanceSpecifier",
									"src": "205:5:9"
								},
								{
									"baseName": {
										"id": 2331,
										"name": "IERC2612Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 237,
										"src": "212:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC2612Permit_$237",
											"typeString": "contract IERC2612Permit"
										}
									},
									"id": 2332,
									"nodeType": "InheritanceSpecifier",
									"src": "212:14:9"
								}
							],
							"contractDependencies": [
								208,
								237,
								2323
							],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 2493,
							"linearizedBaseContracts": [
								2493,
								237,
								2323,
								208
							],
							"name": "ERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2335,
									"libraryName": {
										"id": 2333,
										"name": "Counters",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 750,
										"src": "239:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Counters_$750",
											"typeString": "library Counters"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "233:36:9",
									"typeName": {
										"id": 2334,
										"name": "Counters.Counter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 710,
										"src": "252:16:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$710_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 2339,
									"mutability": "mutable",
									"name": "_nonces",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "275:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$710_storage_$",
										"typeString": "mapping(address => struct Counters.Counter)"
									},
									"typeName": {
										"id": 2338,
										"keyType": {
											"id": 2336,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "283:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "275:36:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$710_storage_$",
											"typeString": "mapping(address => struct Counters.Counter)"
										},
										"valueType": {
											"id": 2337,
											"name": "Counters.Counter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 710,
											"src": "294:16:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Counter_$710_storage_ptr",
												"typeString": "struct Counters.Counter"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "30adf81f",
									"id": 2342,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "438:108:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2340,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 2341,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "480:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3644e515",
									"id": 2344,
									"mutability": "mutable",
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "553:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2343,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "553:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2380,
										"nodeType": "Block",
										"src": "605:397:9",
										"statements": [
											{
												"assignments": [
													2348
												],
												"declarations": [
													{
														"constant": false,
														"id": 2348,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 2380,
														"src": "616:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2347,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "616:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2349,
												"nodeType": "VariableDeclarationStatement",
												"src": "616:15:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "650:44:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "664:20:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "675:7:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:9:9"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "664:7:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2348,
														"isOffset": false,
														"isSlot": false,
														"src": "664:7:9",
														"valueSize": 1
													}
												],
												"id": 2350,
												"nodeType": "InlineAssembly",
												"src": "641:53:9"
											},
											{
												"expression": {
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2351,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2344,
														"src": "704:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "767:84:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 2355,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "757:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "757:95:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2361,
																							"name": "name",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1892,
																							"src": "882:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																								"typeString": "function () view returns (string memory)"
																							}
																						},
																						"id": 2362,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "882:6:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 2360,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "876:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 2359,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "876:5:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "876:13:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 2358,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "866:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 2364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "866:24:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 2368,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "920:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 2367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "914:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 2366,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "914:5:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "914:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 2365,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "904:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "904:21:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2371,
																		"name": "chainID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2348,
																		"src": "950:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2374,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "979:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20Permit_$2493",
																					"typeString": "contract ERC20Permit"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20Permit_$2493",
																					"typeString": "contract ERC20Permit"
																				}
																			],
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "971:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2372,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "971:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "971:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2353,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "733:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "733:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "733:261:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2352,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -8,
															"src": "723:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "723:272:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "704:291:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2379,
												"nodeType": "ExpressionStatement",
												"src": "704:291:9"
											}
										]
									},
									"id": 2381,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "602:2:9"
									},
									"returnParameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:0:9"
									},
									"scope": 2493,
									"src": "591:411:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										228
									],
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "1271:550:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2401,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "1289:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1289:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2403,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "1308:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1289:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5065726d69743a206578706972656420646561646c696e65",
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1318:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															},
															"value": "Permit: expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															}
														],
														"id": 2400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1281:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1281:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2407,
												"nodeType": "ExpressionStatement",
												"src": "1281:64:9"
											},
											{
												"assignments": [
													2409
												],
												"declarations": [
													{
														"constant": false,
														"id": 2409,
														"mutability": "mutable",
														"name": "hashStruct",
														"nodeType": "VariableDeclaration",
														"scope": 2475,
														"src": "1356:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2408,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1356:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2425,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2413,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2342,
																	"src": "1410:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2414,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "1427:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2415,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2386,
																	"src": "1434:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2416,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2388,
																	"src": "1443:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"baseExpression": {
																				"id": 2417,
																				"name": "_nonces",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2339,
																				"src": "1451:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$710_storage_$",
																					"typeString": "mapping(address => struct Counters.Counter storage ref)"
																				}
																			},
																			"id": 2419,
																			"indexExpression": {
																				"id": 2418,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2384,
																				"src": "1459:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1451:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$710_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 721,
																		"src": "1451:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$710_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$710_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1451:24:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2422,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2390,
																	"src": "1477:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2411,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1399:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1399:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1399:87:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2410,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "1389:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1389:98:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1356:131:9"
											},
											{
												"assignments": [
													2427
												],
												"declarations": [
													{
														"constant": false,
														"id": 2427,
														"mutability": "mutable",
														"name": "_hash",
														"nodeType": "VariableDeclaration",
														"scope": 2475,
														"src": "1498:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2426,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1498:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2439,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "307831393031",
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1548:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			},
																			"value": "0x1901"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			}
																		],
																		"id": 2432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1541:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 2431,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "1541:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1541:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																{
																	"id": 2435,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2344,
																	"src": "1557:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2436,
																	"name": "hashStruct",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "1575:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2429,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1524:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1524:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1524:62:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2428,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "1514:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1514:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1498:89:9"
											},
											{
												"assignments": [
													2441
												],
												"declarations": [
													{
														"constant": false,
														"id": 2441,
														"mutability": "mutable",
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 2475,
														"src": "1598:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2440,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1598:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2448,
												"initialValue": {
													"arguments": [
														{
															"id": 2443,
															"name": "_hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "1625:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2444,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "1632:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2445,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2394,
															"src": "1635:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2446,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2396,
															"src": "1638:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2442,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "1615:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1615:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1598:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2450,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2441,
																	"src": "1658:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1676:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1668:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2451,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1668:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1668:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "1658:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2456,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2441,
																	"src": "1682:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2457,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "1692:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1682:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1658:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265",
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1699:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee",
																"typeString": "literal_string \"ZeroSwapPermit: Invalid signature\""
															},
															"value": "ZeroSwapPermit: Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee",
																"typeString": "literal_string \"ZeroSwapPermit: Invalid signature\""
															}
														],
														"id": 2449,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1650:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1650:85:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2462,
												"nodeType": "ExpressionStatement",
												"src": "1650:85:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 2463,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "1746:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$710_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 2465,
															"indexExpression": {
																"id": 2464,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2384,
																"src": "1754:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1746:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$710_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2466,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 733,
														"src": "1746:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$710_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$710_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2468,
												"nodeType": "ExpressionStatement",
												"src": "1746:26:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2470,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2384,
															"src": "1791:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2471,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2386,
															"src": "1798:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2472,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2388,
															"src": "1807:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2469,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2311,
														"src": "1782:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1782:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2474,
												"nodeType": "ExpressionStatement",
												"src": "1782:32:9"
											}
										]
									},
									"documentation": {
										"id": 2382,
										"nodeType": "StructuredDocumentation",
										"src": "1008:59:9",
										"text": " @dev See {IERC2612Permit-permit}."
									},
									"functionSelector": "d505accf",
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2398,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1262:8:9"
									},
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "1097:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "1120:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "1145:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "1169:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "1195:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2391,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1195:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "1212:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2393,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "1231:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2395,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:159:9"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1271:0:9"
									},
									"scope": 2493,
									"src": "1072:749:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										236
									],
									"body": {
										"id": 2491,
										"nodeType": "Block",
										"src": "1954:48:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 2485,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "1971:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$710_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 2487,
															"indexExpression": {
																"id": 2486,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2479,
																"src": "1979:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1971:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$710_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2488,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 721,
														"src": "1971:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$710_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$710_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2484,
												"id": 2490,
												"nodeType": "Return",
												"src": "1964:31:9"
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "1827:52:9",
										"text": " @dev See {IERC2612Permit-nonces}."
									},
									"functionSelector": "7ecebe00",
									"id": 2492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2481,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1927:8:9"
									},
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "1900:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:15:9"
									},
									"returnParameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "1945:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:9:9"
									},
									"scope": 2493,
									"src": "1884:118:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2494,
							"src": "172:1832:9"
						}
					],
					"src": "46:1958:9"
				},
				"id": 9
			}
		}
	}
}