{
	"id": "2f62e000a6b5bc56da704c1e49aed346",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sOHM.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2021-06-12\n*/\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"./libraries/SafeMath.sol\";\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\n\n\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nabstract contract ERC20\n  is \n    IERC20\n  {\n\n  using SafeMath for uint256;\n\n  // TODO comment actual hash value.\n  bytes32 constant private ERC20TOKEN_ERC1820_INTERFACE_ID = keccak256( \"ERC20Token\" );\n    \n  // Present in ERC777\n  mapping (address => uint256) internal _balances;\n\n  // Present in ERC777\n  mapping (address => mapping (address => uint256)) internal _allowances;\n\n  // Present in ERC777\n  uint256 internal _totalSupply;\n\n  // Present in ERC777\n  string internal _name;\n    \n  // Present in ERC777\n  string internal _symbol;\n    \n  // Present in ERC777\n  uint8 internal _decimals;\n\n  /**\n   * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n   * a default value of 18.\n   *\n   * To select a different value for {decimals}, use {_setupDecimals}.\n   *\n   * All three of these values are immutable: they can only be set once during\n   * construction.\n   */\n  constructor (string memory name_, string memory symbol_, uint8 decimals_) {\n    _name = name_;\n    _symbol = symbol_;\n    _decimals = decimals_;\n  }\n\n  /**\n   * @dev Returns the name of the token.\n   */\n  // Present in ERC777\n  function name() public view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev Returns the symbol of the token, usually a shorter version of the\n   * name.\n   */\n  // Present in ERC777\n  function symbol() public view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n   * @dev Returns the number of decimals used to get its user representation.\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\n   * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n   *\n   * Tokens usually opt for a value of 18, imitating the relationship between\n   * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n   * called.\n   *\n   * NOTE: This information is only used for _display_ purposes: it in\n   * no way affects any of the arithmetic of the contract, including\n   * {IERC20-balanceOf} and {IERC20-transfer}.\n   */\n  // Present in ERC777\n  function decimals() public view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev See {IERC20-totalSupply}.\n   */\n  // Present in ERC777\n  function totalSupply() public view override returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {IERC20-balanceOf}.\n   */\n  // Present in ERC777\n  function balanceOf(address account) public view virtual override returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {IERC20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  // Overrideen in ERC777\n  // Confirm that this behavior changes \n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n    _transfer(msg.sender, recipient, amount);\n    return true;\n  }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    // Present in ERC777\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    // Present in ERC777\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    // Present in ERC777\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n    require(sender != address(0), \"ERC20: transfer from the zero address\");\n    require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n    _beforeTokenTransfer(sender, recipient, amount);\n\n    _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    // Present in ERC777\n    function _mint(address account_, uint256 ammount_) internal virtual {\n        require(account_ != address(0), \"ERC20: mint to the zero address\");\n        _beforeTokenTransfer(address( this ), account_, ammount_);\n        _totalSupply = _totalSupply.add(ammount_);\n        _balances[account_] = _balances[account_].add(ammount_);\n        emit Transfer(address( this ), account_, ammount_);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    // Present in ERC777\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    // Present in ERC777\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    // Considering deprication to reduce size of bytecode as changing _decimals to internal acheived the same functionality.\n    // function _setupDecimals(uint8 decimals_) internal {\n    //     _decimals = decimals_;\n    // }\n\n  /**\n   * @dev Hook that is called before any transfer of tokens. This includes\n   * minting and burning.\n   *\n   * Calling conditions:\n   *\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n   * will be to transferred to `to`.\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n   * - `from` and `to` are never both zero.\n   *\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n   */\n  // Present in ERC777\n  function _beforeTokenTransfer( address from_, address to_, uint256 amount_ ) internal virtual { }\n}\n\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n\ninterface IERC2612Permit {\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current ERC2612 nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n}\n\nabstract contract ERC20Permit is ERC20, IERC2612Permit {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    bytes32 public DOMAIN_SEPARATOR;\n\n    constructor() {\n\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        DOMAIN_SEPARATOR = keccak256(abi.encode(\n            keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n            keccak256(bytes(name())),\n            keccak256(bytes(\"1\")), // Version\n            chainID,\n            address(this)\n        ));\n    }\n\n    /**\n     * @dev See {IERC2612Permit-permit}.\n     *\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"Permit: expired deadline\");\n\n        bytes32 hashStruct =\n            keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline));\n\n        bytes32 _hash = keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct));\n\n        address signer = ecrecover(_hash, v, r, s);\n        require(signer != address(0) && signer == owner, \"ZeroSwapPermit: Invalid signature\");\n\n        _nonces[owner].increment();\n        _approve(owner, spender, amount);\n    }\n\n    /**\n     * @dev See {IERC2612Permit-nonces}.\n     */\n    function nonces(address owner) public view override returns (uint256) {\n        return _nonces[owner].current();\n    }\n}\n\ninterface IOwnable {\n  function manager() external view returns (address);\n\n  function renounceManagement() external;\n  \n  function pushManagement( address newOwner_ ) external;\n  \n  function pullManagement() external;\n}\n\ncontract Ownable is IOwnable {\n\n    address internal _owner;\n    address internal _newOwner;\n\n    event OwnershipPushed(address indexed previousOwner, address indexed newOwner);\n    event OwnershipPulled(address indexed previousOwner, address indexed newOwner);\n\n    constructor () {\n        _owner = msg.sender;\n        emit OwnershipPushed( address(0), _owner );\n    }\n\n    function manager() public view override returns (address) {\n        return _owner;\n    }\n\n    modifier onlyManager() {\n        require( _owner == msg.sender, \"Ownable: caller is not the owner\" );\n        _;\n    }\n\n    function renounceManagement() public virtual override onlyManager() {\n        emit OwnershipPushed( _owner, address(0) );\n        _owner = address(0);\n    }\n\n    function pushManagement( address newOwner_ ) public virtual override onlyManager() {\n        require( newOwner_ != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipPushed( _owner, newOwner_ );\n        _newOwner = newOwner_;\n    }\n    \n    function pullManagement() public virtual override {\n        require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\");\n        emit OwnershipPulled( _owner, _newOwner );\n        _owner = _newOwner;\n    }\n}\n\ncontract sOlympus is ERC20Permit, Ownable {\n\n    using SafeMath for uint256;\n\n    modifier onlyStakingContract() {\n        require( msg.sender == stakingContract );\n        _;\n    }\n\n    address public stakingContract;\n    address public initializer;\n\n    event LogSupply(uint256 indexed epoch, uint256 timestamp, uint256 totalSupply );\n    event LogRebase( uint256 indexed epoch, uint256 rebase, uint256 index );\n    event LogStakingContractUpdated( address stakingContract );\n\n    struct Rebase {\n        uint epoch;\n        uint rebase; // 18 decimals\n        uint totalStakedBefore;\n        uint totalStakedAfter;\n        uint amountRebased;\n        uint index;\n        uint blockNumberOccured;\n    }\n    Rebase[] public rebases;\n\n    uint public INDEX;\n\n    uint256 private constant MAX_UINT256 = ~uint256(0);\n    uint256 private constant INITIAL_FRAGMENTS_SUPPLY = 5000000 * 10**9;\n\n    // TOTAL_GONS is a multiple of INITIAL_FRAGMENTS_SUPPLY so that _gonsPerFragment is an integer.\n    // Use the highest value that fits in a uint256 for max granularity.\n    uint256 private constant TOTAL_GONS = MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY);\n\n    // MAX_SUPPLY = maximum integer < (sqrt(4*TOTAL_GONS + 1) - 1) / 2\n    uint256 private constant MAX_SUPPLY = ~uint128(0);  // (2^128) - 1\n\n    uint256 private _gonsPerFragment;\n    mapping(address => uint256) private _gonBalances;\n\n    mapping ( address => mapping ( address => uint256 ) ) private _allowedValue;\n\n    constructor() ERC20(\"Staked Olympus\", \"sOHM\", 9) ERC20Permit() {\n        initializer = msg.sender;\n        _totalSupply = INITIAL_FRAGMENTS_SUPPLY;\n        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);\n    }\n\n    function initialize( address stakingContract_ ) external returns ( bool ) {\n        require( msg.sender == initializer );\n        require( stakingContract_ != address(0) );\n        stakingContract = stakingContract_;\n        _gonBalances[ stakingContract ] = TOTAL_GONS;\n\n        emit Transfer( address(0x0), stakingContract, _totalSupply );\n        emit LogStakingContractUpdated( stakingContract_ );\n        \n        initializer = address(0);\n        return true;\n    }\n\n    function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {\n        require( INDEX == 0 );\n        INDEX = gonsForBalance( _INDEX );\n        return true;\n    }\n\n    /**\n        @notice increases sOHM supply to increase staking balances relative to profit_\n        @param profit_ uint256\n        @return uint256\n     */\n    function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {\n        uint256 rebaseAmount;\n        uint256 circulatingSupply_ = circulatingSupply();\n\n        if ( profit_ == 0 ) {\n            emit LogSupply( epoch_, block.timestamp, _totalSupply );\n            emit LogRebase( epoch_, 0, index() );\n            return _totalSupply;\n        } else if ( circulatingSupply_ > 0 ){\n            rebaseAmount = profit_.mul( _totalSupply ).div( circulatingSupply_ );\n        } else {\n            rebaseAmount = profit_;\n        }\n\n        _totalSupply = _totalSupply.add( rebaseAmount );\n\n        if ( _totalSupply > MAX_SUPPLY ) {\n            _totalSupply = MAX_SUPPLY;\n        }\n\n        _gonsPerFragment = TOTAL_GONS.div( _totalSupply );\n\n        _storeRebase( circulatingSupply_, profit_, epoch_ );\n\n        return _totalSupply;\n    }\n\n    /**\n        @notice emits event with data about rebase\n        @param previousCirculating_ uint\n        @param profit_ uint\n        @param epoch_ uint\n        @return bool\n     */\n    function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {\n        uint rebasePercent = profit_.mul( 1e18 ).div( previousCirculating_ );\n\n        rebases.push( Rebase ( {\n            epoch: epoch_,\n            rebase: rebasePercent, // 18 decimals\n            totalStakedBefore: previousCirculating_,\n            totalStakedAfter: circulatingSupply(),\n            amountRebased: profit_,\n            index: index(),\n            blockNumberOccured: block.number\n        }));\n        \n        emit LogSupply( epoch_, block.timestamp, _totalSupply );\n        emit LogRebase( epoch_, rebasePercent, index() );\n\n        return true;\n    }\n\n    function balanceOf( address who ) public view override returns ( uint256 ) {\n        return _gonBalances[ who ].div( _gonsPerFragment );\n    }\n\n    function gonsForBalance( uint amount ) public view returns ( uint ) {\n        return amount.mul( _gonsPerFragment );\n    }\n\n    function balanceForGons( uint gons ) public view returns ( uint ) {\n        return gons.div( _gonsPerFragment );\n    }\n\n    // Staking contract holds excess sOHM\n    function circulatingSupply() public view returns ( uint ) {\n        return _totalSupply.sub( balanceOf( stakingContract ) );\n    }\n\n    function index() public view returns ( uint ) {\n        return balanceForGons( INDEX );\n    }\n\n    function transfer( address to, uint256 value ) public override returns (bool) {\n        uint256 gonValue = value.mul( _gonsPerFragment );\n        _gonBalances[ msg.sender ] = _gonBalances[ msg.sender ].sub( gonValue );\n        _gonBalances[ to ] = _gonBalances[ to ].add( gonValue );\n        emit Transfer( msg.sender, to, value );\n        return true;\n    }\n\n    function allowance( address owner_, address spender ) public view override returns ( uint256 ) {\n        return _allowedValue[ owner_ ][ spender ];\n    }\n\n    function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {\n       _allowedValue[ from ][ msg.sender ] = _allowedValue[ from ][ msg.sender ].sub( value );\n       emit Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] );\n\n        uint256 gonValue = gonsForBalance( value );\n        _gonBalances[ from ] = _gonBalances[from].sub( gonValue );\n        _gonBalances[ to ] = _gonBalances[to].add( gonValue );\n        emit Transfer( from, to, value );\n\n        return true;\n    }\n\n    function approve( address spender, uint256 value ) public override returns (bool) {\n         _allowedValue[ msg.sender ][ spender ] = value;\n         emit Approval( msg.sender, spender, value );\n         return true;\n    }\n\n    // What gets called in a permit\n    function _approve( address owner, address spender, uint256 value ) internal override virtual {\n        _allowedValue[owner][spender] = value;\n        emit Approval( owner, spender, value );\n    }\n\n    function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {\n        _allowedValue[ msg.sender ][ spender ] = _allowedValue[ msg.sender ][ spender ].add( addedValue );\n        emit Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] );\n        return true;\n    }\n\n    function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {\n        uint256 oldValue = _allowedValue[ msg.sender ][ spender ];\n        if (subtractedValue >= oldValue) {\n            _allowedValue[ msg.sender ][ spender ] = 0;\n        } else {\n            _allowedValue[ msg.sender ][ spender ] = oldValue.sub( subtractedValue );\n        }\n        emit Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] );\n        return true;\n    }\n}"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// File: libraries/SafeMath.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\n\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\nlibrary SafeMath {\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    // Only used in the  BondingCalculator.sol\n    function sqrrt(uint256 a) internal pure returns (uint c) {\n        if (a > 3) {\n            c = a;\n            uint b = add( div( a, 2), 1 );\n            while (b < c) {\n                c = b;\n                b = div( add( div( a, b ), b), 2 );\n            }\n        } else if (a != 0) {\n            c = 1;\n        }\n    }   \n\n    function percentageAmount( uint256 total_, uint8 percentage_ ) internal pure returns ( uint256 percentAmount_ ) {\n        return div( mul( total_, percentage_ ), 1000 );\n    }\n\n    /*\n     * Expects percentage to be trailed by 00,\n    */\n    function substractPercentage( uint256 total_, uint8 percentageToSub_ ) internal pure returns ( uint256 result_ ) {\n        return sub( total_, div( mul( total_, percentageToSub_ ), 1000 ) );\n    }\n\n    function percentageOfTotal( uint256 part_, uint256 total_ ) internal pure returns ( uint256 percent_ ) {\n        return div( mul(part_, 100) , total_ );\n    }\n\n    /**\n     * Taken from Hypersonic https://github.com/M2629/HyperSonic/blob/main/Math.sol\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n\n    function quadraticPricing( uint256 payment_, uint256 multiplier_ ) internal pure returns (uint256) {\n        return sqrrt( mul( multiplier_, payment_ ) );\n    }\n\n  function bondingCurve( uint256 supply_, uint256 multiplier_ ) internal pure returns (uint256) {\n      return mul( multiplier_, supply_ );\n  }\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":175:3052  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":175:3052  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 0x4C 0x4C PUSH14 0xFF67B13F174443E5BDD67E29FD1D 0xE3 0xDA CALLDATACOPY PUSH16 0x2A96F1346627D2D79E64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "175:2877:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 0x4C 0x4C PUSH14 0xFF67B13F174443E5BDD67E29FD1D 0xE3 0xDA CALLDATACOPY PUSH16 0x2A96F1346627D2D79E64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "175:2877:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"bondingCurve(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"percentageAmount(uint256,uint8)": "infinite",
								"percentageOfTotal(uint256,uint256)": "infinite",
								"quadraticPricing(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"substractPercentage(uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
									".code": [
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/sOHM.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":13180:14028  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":13180:14028  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122015e58a81e7f5a1868146c47c199f36a9f9fa07bc7fa36b8e7719b106c717dc0b64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122015e58a81e7f5a1868146c47c199f36a9f9fa07bc7fa36b8e7719b106c717dc0b64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xE5 DUP11 DUP2 0xE7 CREATE2 LOG1 DUP7 DUP2 CHAINID 0xC4 PUSH29 0x199F36A9F9FA07BC7FA36B8E7719B106C717DC0B64736F6C6343000705 STOP CALLER ",
							"sourceMap": "13180:848:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122015e58a81e7f5a1868146c47c199f36a9f9fa07bc7fa36b8e7719b106c717dc0b64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xE5 DUP11 DUP2 0xE7 CREATE2 LOG1 DUP7 DUP2 CHAINID 0xC4 PUSH29 0x199F36A9F9FA07BC7FA36B8E7719B106C717DC0B64736F6C6343000705 STOP CALLER ",
							"sourceMap": "13180:848:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13180,
									"end": 14028,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13180,
									"end": 14028,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015e58a81e7f5a1868146c47c199f36a9f9fa07bc7fa36b8e7719b106c717dc0b64736f6c63430007050033",
									".code": [
										{
											"begin": 13180,
											"end": 14028,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 14028,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 14028,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 14028,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13180,
											"end": 14028,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13180,
											"end": 14028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 14028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13180,
											"end": 14028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 14028,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x084f2c5744450670b4a0e2c74e393db29a888be3c9e09db8e1cd3a3e020e8693\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8df180141677034cf88af022e49834be46991e6679953e86f9fc97e09d945676\",\"dweb:/ipfs/QmZ6mXAUaGbVkfwxm7A7X9LJ2cTvZ8jvrWbdhAtHQ624P1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x084f2c5744450670b4a0e2c74e393db29a888be3c9e09db8e1cd3a3e020e8693\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8df180141677034cf88af022e49834be46991e6679953e86f9fc97e09d945676\",\"dweb:/ipfs/QmZ6mXAUaGbVkfwxm7A7X9LJ2cTvZ8jvrWbdhAtHQ624P1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 432,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 438,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 440,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 442,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 444,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 446,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC2612Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC2612Permit-permit}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC2612Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC2612Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x084f2c5744450670b4a0e2c74e393db29a888be3c9e09db8e1cd3a3e020e8693\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8df180141677034cf88af022e49834be46991e6679953e86f9fc97e09d945676\",\"dweb:/ipfs/QmZ6mXAUaGbVkfwxm7A7X9LJ2cTvZ8jvrWbdhAtHQ624P1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 432,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 438,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 440,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 442,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 444,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 446,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 993,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)915_storage)"
							},
							{
								"astId": 998,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)915_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)915_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)915_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 914,
										"contract": "contracts/sOHM.sol:ERC20Permit",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x084f2c5744450670b4a0e2c74e393db29a888be3c9e09db8e1cd3a3e020e8693\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8df180141677034cf88af022e49834be46991e6679953e86f9fc97e09d945676\",\"dweb:/ipfs/QmZ6mXAUaGbVkfwxm7A7X9LJ2cTvZ8jvrWbdhAtHQ624P1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC2612Permit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"IERC2612Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x084f2c5744450670b4a0e2c74e393db29a888be3c9e09db8e1cd3a3e020e8693\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8df180141677034cf88af022e49834be46991e6679953e86f9fc97e09d945676\",\"dweb:/ipfs/QmZ6mXAUaGbVkfwxm7A7X9LJ2cTvZ8jvrWbdhAtHQ624P1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"manager()": "481c6a75",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"IOwnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x084f2c5744450670b4a0e2c74e393db29a888be3c9e09db8e1cd3a3e020e8693\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8df180141677034cf88af022e49834be46991e6679953e86f9fc97e09d945676\",\"dweb:/ipfs/QmZ6mXAUaGbVkfwxm7A7X9LJ2cTvZ8jvrWbdhAtHQ624P1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":17520:18762  contract Ownable is IOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/sOHM.sol\":17787:17890  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/sOHM.sol\":17821:17831  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":17812:17818  _owner */\n  0x00\n  dup1\n    /* \"contracts/sOHM.sol\":17812:17831  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":17875:17881  _owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":17846:17883  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":17871:17872  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":17846:17883  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/sOHM.sol\":17520:18762  contract Ownable is IOwnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":17520:18762  contract Ownable is IOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x089208d8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x481c6a75\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5a96ac0a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sOHM.sol\":18114:18270  function renounceManagement() public virtual override onlyManager() {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/sOHM.sol\":18276:18533  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/sOHM.sol\":17896:17984  function manager() public view override returns (address) {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":18543:18760  function pullManagement() public virtual override {... */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/sOHM.sol\":18114:18270  function renounceManagement() public virtual override onlyManager() {... */\n    tag_8:\n        /* \"contracts/sOHM.sol\":18042:18052  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":18032:18052  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18032:18038  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18032:18052  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":18023:18090  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"contracts/sOHM.sol\":18230:18231  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":18197:18234  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18214:18220  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18197:18234  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":18261:18262  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":18244:18250  _owner */\n      dup1\n      0x00\n        /* \"contracts/sOHM.sol\":18244:18263  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":18114:18270  function renounceManagement() public virtual override onlyManager() {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":18276:18533  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_11:\n        /* \"contracts/sOHM.sol\":18042:18052  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":18032:18052  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18032:18038  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18032:18052  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":18023:18090  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/sOHM.sol\":18399:18400  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":18378:18401  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18378:18387  newOwner_ */\n      dup2\n        /* \"contracts/sOHM.sol\":18378:18401  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":18369:18444  require( newOwner_ != address(0), \"Ownable: new owner is the zero address\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/sOHM.sol\":18484:18493  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":18459:18495  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18476:18482  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18459:18495  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":18517:18526  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":18505:18514  _newOwner */\n      0x01\n      0x00\n        /* \"contracts/sOHM.sol\":18505:18526  _newOwner = newOwner_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":18276:18533  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":17896:17984  function manager() public view override returns (address) {... */\n    tag_13:\n        /* \"contracts/sOHM.sol\":17945:17952  address */\n      0x00\n        /* \"contracts/sOHM.sol\":17971:17977  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":17964:17977  return _owner */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":17896:17984  function manager() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":18543:18760  function pullManagement() public virtual override {... */\n    tag_15:\n        /* \"contracts/sOHM.sol\":18626:18635  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18612:18635  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18612:18622  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":18612:18635  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":18603:18674  require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/sOHM.sol\":18714:18723  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18689:18725  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18706:18712  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18689:18725  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":18744:18753  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18735:18741  _owner */\n      0x00\n      dup1\n        /* \"contracts/sOHM.sol\":18735:18753  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":18543:18760  function pullManagement() public virtual override {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n\n    auxdata: 0xa2646970667358221220c6569685ecc757809db7106216a0d7b0eb3e06ceb013355aaabacb339e06709c64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36106ae806100db6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089208d81461005157806346f68ee91461005b578063481c6a751461009f5780635a96ac0a146100d3575b600080fd5b6100596100dd565b005b61009d6004803603602081101561007157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025c565b005b6100a7610461565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100db61048a565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461019e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106316026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806106576022913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca2646970667358221220c6569685ecc757809db7106216a0d7b0eb3e06ceb013355aaabacb339e06709c64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6AE DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89208D8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x631 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x657 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0xA2646970667358221220C65696 DUP6 0xEC 0xC7 JUMPI DUP1 SWAP14 0xB7 LT PUSH3 0x16A0D7 0xB0 0xEB RETURNDATACOPY MOD 0xCE 0xB0 SGT CALLDATALOAD GAS 0xAA 0xBA 0xCB CALLER SWAP15 MOD PUSH17 0x9C64736F6C634300070500330000000000 ",
							"sourceMap": "17520:1242:1:-:0;;;17787:103;;;;;;;;;;17821:10;17812:6;;:19;;;;;;;;;;;;;;;;;;17875:6;;;;;;;;;;17846:37;;17871:1;17846:37;;;;;;;;;;;;17520:1242;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089208d81461005157806346f68ee91461005b578063481c6a751461009f5780635a96ac0a146100d3575b600080fd5b6100596100dd565b005b61009d6004803603602081101561007157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025c565b005b6100a7610461565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100db61048a565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461019e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106316026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806106576022913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca2646970667358221220c6569685ecc757809db7106216a0d7b0eb3e06ceb013355aaabacb339e06709c64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89208D8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x631 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x657 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0xA2646970667358221220C65696 DUP6 0xEC 0xC7 JUMPI DUP1 SWAP14 0xB7 LT PUSH3 0x16A0D7 0xB0 0xEB RETURNDATACOPY MOD 0xCE 0xB0 SGT CALLDATALOAD GAS 0xAA 0xBA 0xCB CALLER SWAP15 MOD PUSH17 0x9C64736F6C634300070500330000000000 ",
							"sourceMap": "17520:1242:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18114:156;;;:::i;:::-;;18276:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17896:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18543:217;;;:::i;:::-;;18114:156;18042:10;18032:20;;:6;;;;;;;;;;:20;;;18023:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18230:1:::1;18197:37;;18214:6;::::0;::::1;;;;;;;;18197:37;;;;;;;;;;;;18261:1;18244:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;18114:156::o:0;18276:257::-;18042:10;18032:20;;:6;;;;;;;;;;:20;;;18023:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18399:1:::1;18378:23;;:9;:23;;;;18369:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18484:9;18459:36;;18476:6;::::0;::::1;;;;;;;;18459:36;;;;;;;;;;;;18517:9;18505;;:21;;;;;;;;;;;;;;;;;;18276:257:::0;:::o;17896:88::-;17945:7;17971:6;;;;;;;;;;;17964:13;;17896:88;:::o;18543:217::-;18626:9;;;;;;;;;;;18612:23;;:10;:23;;;18603:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18714:9;;;;;;;;;;;18689:36;;18706:6;;;;;;;;;;18689:36;;;;;;;;;;;;18744:9;;;;;;;;;;;18735:6;;:18;;;;;;;;;;;;;;;;;;18543:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "342000",
								"executionCost": "23624",
								"totalCost": "365624"
							},
							"external": {
								"manager()": "1077",
								"pullManagement()": "infinite",
								"pushManagement(address)": "infinite",
								"renounceManagement()": "24234"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 17520,
									"end": 18762,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 17520,
									"end": 18762,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 17520,
									"end": 18762,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 17787,
									"end": 17890,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 17787,
									"end": 17890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 17787,
									"end": 17890,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 17787,
									"end": 17890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 17787,
									"end": 17890,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 17787,
									"end": 17890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 17787,
									"end": 17890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 17787,
									"end": 17890,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 17787,
									"end": 17890,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 17787,
									"end": 17890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 17787,
									"end": 17890,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 17821,
									"end": 17831,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17818,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 17812,
									"end": 17818,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17871,
									"end": 17872,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "PUSH",
									"source": 1,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 17520,
									"end": 18762,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17520,
									"end": 18762,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 17520,
									"end": 18762,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17520,
									"end": 18762,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 17520,
									"end": 18762,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 17520,
									"end": 18762,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 17520,
									"end": 18762,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c6569685ecc757809db7106216a0d7b0eb3e06ceb013355aaabacb339e06709c64736f6c63430007050033",
									".code": [
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH",
											"source": 1,
											"value": "89208D8"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH",
											"source": 1,
											"value": "46F68EE9"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH",
											"source": 1,
											"value": "481C6A75"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH",
											"source": 1,
											"value": "5A96AC0A"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 18762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18042,
											"end": 18052,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18230,
											"end": 18231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "PUSH",
											"source": 1,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 18261,
											"end": 18262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18244,
											"end": 18250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18042,
											"end": 18052,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18399,
											"end": 18400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18378,
											"end": 18401,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18378,
											"end": 18401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18378,
											"end": 18387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18378,
											"end": 18401,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18378,
											"end": 18401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18378,
											"end": 18401,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18378,
											"end": 18401,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18484,
											"end": 18493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "PUSH",
											"source": 1,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18514,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18505,
											"end": 18514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17945,
											"end": 17952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17964,
											"end": 17977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17964,
											"end": 17977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18612,
											"end": 18635,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18612,
											"end": 18635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18612,
											"end": 18622,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 18612,
											"end": 18635,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18612,
											"end": 18635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18612,
											"end": 18635,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH data",
											"source": 1,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "PUSH",
											"source": 1,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18735,
											"end": 18741,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c"
									}
								}
							}
						},
						"methodIdentifiers": {
							"manager()": "481c6a75",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x084f2c5744450670b4a0e2c74e393db29a888be3c9e09db8e1cd3a3e020e8693\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8df180141677034cf88af022e49834be46991e6679953e86f9fc97e09d945676\",\"dweb:/ipfs/QmZ6mXAUaGbVkfwxm7A7X9LJ2cTvZ8jvrWbdhAtHQ624P1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1168,
								"contract": "contracts/sOHM.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1170,
								"contract": "contracts/sOHM.sol:Ownable",
								"label": "_newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"sOlympus": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rebase",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "LogRebase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "stakingContract",
									"type": "address"
								}
							],
							"name": "LogStakingContractUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"name": "LogSupply",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gons",
									"type": "uint256"
								}
							],
							"name": "balanceForGons",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "circulatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "gonsForBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingContract_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initializer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "profit_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "epoch_",
									"type": "uint256"
								}
							],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rebases",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rebase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedBefore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountRebased",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockNumberOccured",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_INDEX",
									"type": "uint256"
								}
							],
							"name": "setIndex",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC2612Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC2612Permit-permit}."
							},
							"rebase(uint256,uint256)": {
								"params": {
									"profit_": "uint256"
								},
								"returns": {
									"_0": "uint256"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":18764:26042  contract sOlympus is ERC20Permit, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/sOHM.sol\":20247:20457  constructor() ERC20(\"Staked Olympus\", \"sOHM\", 9) ERC20Permit() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/sOHM.sol\":4082:4230  constructor (string memory name_, string memory symbol_, uint8 decimals_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x5374616b6564204f6c796d707573000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x734f484d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/sOHM.sol\":20293:20294  9 */\n  0x09\n    /* \"contracts/sOHM.sol\":4170:4175  name_ */\n  dup3\n    /* \"contracts/sOHM.sol\":4162:4167  _name */\n  0x03\n    /* \"contracts/sOHM.sol\":4162:4175  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/sOHM.sol\":4191:4198  symbol_ */\n  dup2\n    /* \"contracts/sOHM.sol\":4181:4188  _symbol */\n  0x04\n    /* \"contracts/sOHM.sol\":4181:4198  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/sOHM.sol\":4216:4225  decimals_ */\n  dup1\n    /* \"contracts/sOHM.sol\":4204:4213  _decimals */\n  0x05\n  0x00\n    /* \"contracts/sOHM.sol\":4204:4225  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":4082:4230  constructor (string memory name_, string memory symbol_, uint8 decimals_) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/sOHM.sol\":15908:15923  uint256 chainID */\n  0x00\n    /* \"contracts/sOHM.sol\":15967:15976  chainid() */\n  chainid\n    /* \"contracts/sOHM.sol\":15956:15976  chainID := chainid() */\n  swap1\n  pop\n    /* \"contracts/sOHM.sol\":16049:16144  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"contracts/sOHM.sol\":16174:16180  name() */\n  tag_11\n    /* \"contracts/sOHM.sol\":16174:16178  name */\n  shl(0x20, tag_12)\n    /* \"contracts/sOHM.sol\":16174:16180  name() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/sOHM.sol\":16158:16182  keccak256(bytes(name())) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/sOHM.sol\":16206:16216  bytes(\"1\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/sOHM.sol\":16196:16217  keccak256(bytes(\"1\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/sOHM.sol\":16242:16249  chainID */\n  dup4\n    /* \"contracts/sOHM.sol\":16271:16275  this */\n  address\n    /* \"contracts/sOHM.sol\":16025:16286  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/sOHM.sol\":16015:16287  keccak256(abi.encode(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/sOHM.sol\":15996:16012  DOMAIN_SEPARATOR */\n  0x07\n    /* \"contracts/sOHM.sol\":15996:16287  DOMAIN_SEPARATOR = keccak256(abi.encode(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":15883:16294  constructor() {... */\n  pop\n    /* \"contracts/sOHM.sol\":17821:17831  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":17812:17818  _owner */\n  0x08\n  0x00\n    /* \"contracts/sOHM.sol\":17812:17831  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":17875:17881  _owner */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":17846:17883  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":17871:17872  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":17846:17883  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/sOHM.sol\":20334:20344  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":20320:20331  initializer */\n  0x0b\n  0x00\n    /* \"contracts/sOHM.sol\":20320:20344  initializer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":19635:19650  5000000 * 10**9 */\n  0x11c37937e08000\n    /* \"contracts/sOHM.sol\":20354:20366  _totalSupply */\n  0x02\n    /* \"contracts/sOHM.sol\":20354:20393  _totalSupply = INITIAL_FRAGMENTS_SUPPLY */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":20422:20450  TOTAL_GONS.div(_totalSupply) */\n  tag_15\n    /* \"contracts/sOHM.sol\":20437:20449  _totalSupply */\n  sload(0x02)\n    /* \"contracts/sOHM.sol\":19635:19650  5000000 * 10**9 */\n  0x11c37937e08000\n    /* \"contracts/sOHM.sol\":19575:19576  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":19566:19577  ~uint256(0) */\n  not\n    /* \"contracts/sOHM.sol\":19883:19921  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n  dup2\n  tag_16\n  jumpi\n  invalid\ntag_16:\n  mod\n    /* \"contracts/sOHM.sol\":19575:19576  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":19566:19577  ~uint256(0) */\n  not\n    /* \"contracts/sOHM.sol\":19868:19922  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n  sub\n    /* \"contracts/sOHM.sol\":20422:20436  TOTAL_GONS.div */\n  or(tag_0_124, shl(0x20, tag_17))\n  swap1\n    /* \"contracts/sOHM.sol\":20422:20450  TOTAL_GONS.div(_totalSupply) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/sOHM.sol\":20403:20419  _gonsPerFragment */\n  0x0e\n    /* \"contracts/sOHM.sol\":20403:20450  _gonsPerFragment = TOTAL_GONS.div(_totalSupply) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":18764:26042  contract sOlympus is ERC20Permit, Ownable {... */\n  jump(tag_18)\n    /* \"contracts/sOHM.sol\":4310:4385  function name() public view returns (string memory) {... */\ntag_12:\n    /* \"contracts/sOHM.sol\":4347:4360  string memory */\n  0x60\n    /* \"contracts/sOHM.sol\":4375:4380  _name */\n  0x03\n    /* \"contracts/sOHM.sol\":4368:4380  return _name */\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  0x1f\n  add\n  0x20\n  dup1\n  swap2\n  div\n  mul\n  0x20\n  add\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  swap3\n  swap2\n  swap1\n  dup2\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  iszero\n  tag_20\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_21\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  0x20\n  add\n  swap2\n  jump(tag_20)\ntag_21:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_22:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_22\n  jumpi\n  dup3\n  swap1\n  sub\n  0x1f\n  and\n  dup3\n  add\n  swap2\ntag_20:\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n    /* \"contracts/sOHM.sol\":4310:4385  function name() public view returns (string memory) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_17:\n    /* \"contracts/libraries/SafeMath.sol\":1019:1026  uint256 */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  tag_24\n    /* \"contracts/libraries/SafeMath.sol\":1049:1050  a */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1052:1053  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1a\n  dup2\n  mstore\n  0x20\n  add\n  0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1045:1048  div */\n  shl(0x20, tag_25)\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"contracts/libraries/SafeMath.sol\":1038:1084  return div(a, b, \"SafeMath: division by zero\") */\n  swap1\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\ntag_25:\n    /* \"contracts/libraries/SafeMath.sol\":1183:1190  uint256 */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1214:1215  0 */\n  dup1\n    /* \"contracts/libraries/SafeMath.sol\":1210:1211  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1210:1215  b > 0 */\n  gt\n    /* \"contracts/libraries/SafeMath.sol\":1217:1229  errorMessage */\n  dup3\n    /* \"contracts/libraries/SafeMath.sol\":1202:1230  require(b > 0, errorMessage) */\n  swap1\n  tag_27\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_28:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_30\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_28)\ntag_30:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_31\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_31:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_27:\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1240:1249  uint256 c */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1256:1257  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1252:1253  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1252:1257  a / b */\n  dup2\n  tag_32\n  jumpi\n  invalid\ntag_32:\n  div\n    /* \"contracts/libraries/SafeMath.sol\":1240:1257  uint256 c = a / b */\n  swap1\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1291:1292  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1287:1288  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1287:1292  a % b */\n  dup2\n  tag_33\n  jumpi\n  invalid\ntag_33:\n  mod\n    /* \"contracts/libraries/SafeMath.sol\":1283:1284  c */\n  dup2\n    /* \"contracts/libraries/SafeMath.sol\":1279:1280  b */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1279:1284  b * c */\n  mul\n    /* \"contracts/libraries/SafeMath.sol\":1279:1292  b * c + a % b */\n  add\n    /* \"contracts/libraries/SafeMath.sol\":1274:1275  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1274:1292  a == b * c + a % b */\n  eq\n    /* \"contracts/libraries/SafeMath.sol\":1267:1293  assert(a == b * c + a % b) */\n  tag_34\n  jumpi\n  invalid\ntag_34:\n    /* \"contracts/libraries/SafeMath.sol\":1358:1359  c */\n  dup1\n    /* \"contracts/libraries/SafeMath.sol\":1351:1359  return c */\n  swap2\n  pop\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/sOHM.sol\":18764:26042  contract sOlympus is ERC20Permit, Ownable {... */\ntag_8:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_36\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_35)\ntag_36:\n  dup3\n  0x1f\n  lt\n  tag_37\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_35)\ntag_37:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_35\n  jumpi\n  swap2\n  dup3\n  add\ntag_38:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_39\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_38)\ntag_39:\ntag_35:\n  pop\n  swap1\n  pop\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  pop\n  swap1\n  jump\t// out\ntag_41:\ntag_42:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_43\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_42)\ntag_43:\n  pop\n  swap1\n  jump\t// out\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":18764:26042  contract sOlympus is ERC20Permit, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x481c6a75\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xc4d66de8\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xee99205c\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9ce110d7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x73c69eb7\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x73c69eb7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7965d56d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9358928b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x481c6a75\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5a96ac0a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2986c0e5\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x3644e515\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x40a5737f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x2986c0e5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2df75cb1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x095ea7b3\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1bd39674\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x058ecdb4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x089208d8\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sOHM.sol\":21278:22147  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n    tag_3:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":4310:4385  function name() public view returns (string memory) {... */\n    tag_4:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_45:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_45)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_48\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_48:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":18114:18270  function renounceManagement() public virtual override onlyManager() {... */\n    tag_5:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/sOHM.sol\":24756:24978  function approve( address spender, uint256 value ) public override returns (bool) {... */\n    tag_6:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":5358:5450  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":23171:23293  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n    tag_8:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":24223:24750  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n    tag_9:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":23601:23694  function index() public view returns ( uint ) {... */\n    tag_10:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":19503:19520  uint public INDEX */\n    tag_11:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":15730:15838  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_12:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":5208:5283  function decimals() public view returns (uint8) {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":15845:15876  bytes32 public DOMAIN_SEPARATOR */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":25221:25539  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":20940:21114  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":18276:18533  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/sOHM.sol\":17896:17984  function manager() public view override returns (address) {... */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":18543:18760  function pullManagement() public virtual override {... */\n    tag_19:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/sOHM.sol\":23023:23165  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n    tag_20:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":19473:19496  Rebase[] public rebases */\n    tag_21:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      dup9\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":23299:23417  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n    tag_22:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":17176:17294  function nonces(address owner) public view override returns (uint256) {... */\n    tag_23:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":23465:23595  function circulatingSupply() public view returns ( uint ) {... */\n    tag_24:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":4511:4590  function symbol() public view returns (string memory) {... */\n    tag_25:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_101:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_101)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_104:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":18987:19013  address public initializer */\n    tag_26:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":25545:26040  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n    tag_27:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":23700:24058  function transfer( address to, uint256 value ) public override returns (bool) {... */\n    tag_28:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":20463:20934  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n    tag_29:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":16364:17113  function permit(... */\n    tag_30:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xe0\n      dup2\n      lt\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/sOHM.sol\":24064:24217  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n    tag_31:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":18951:18981  address public stakingContract */\n    tag_32:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":21278:22147  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n    tag_42:\n        /* \"contracts/sOHM.sol\":21365:21372  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":18910:18925  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18896:18925  msg.sender == stakingContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18896:18906  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":18896:18925  msg.sender == stakingContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":18887:18927  require( msg.sender == stakingContract ) */\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n        /* \"contracts/sOHM.sol\":21385:21405  uint256 rebaseAmount */\n      0x00\n        /* \"contracts/sOHM.sol\":21415:21441  uint256 circulatingSupply_ */\n      dup1\n        /* \"contracts/sOHM.sol\":21444:21463  circulatingSupply() */\n      tag_128\n        /* \"contracts/sOHM.sol\":21444:21461  circulatingSupply */\n      tag_98\n        /* \"contracts/sOHM.sol\":21444:21463  circulatingSupply() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/sOHM.sol\":21415:21463  uint256 circulatingSupply_ = circulatingSupply() */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":21490:21491  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":21479:21486  profit_ */\n      dup6\n        /* \"contracts/sOHM.sol\":21479:21491  profit_ == 0 */\n      eq\n        /* \"contracts/sOHM.sol\":21474:21838  if ( profit_ == 0 ) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/sOHM.sol\":21524:21530  epoch_ */\n      dup4\n        /* \"contracts/sOHM.sol\":21513:21563  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      0x917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da4\n        /* \"contracts/sOHM.sol\":21532:21547  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":21549:21561  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":21513:21563  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":21593:21599  epoch_ */\n      dup4\n        /* \"contracts/sOHM.sol\":21582:21613  LogRebase( epoch_, 0, index() ) */\n      0x6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2\n        /* \"contracts/sOHM.sol\":21601:21602  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":21604:21611  index() */\n      tag_130\n        /* \"contracts/sOHM.sol\":21604:21609  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":21604:21611  index() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/sOHM.sol\":21582:21613  LogRebase( epoch_, 0, index() ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":21634:21646  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":21627:21646  return _totalSupply */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_127)\n        /* \"contracts/sOHM.sol\":21474:21838  if ( profit_ == 0 ) {... */\n    tag_129:\n        /* \"contracts/sOHM.sol\":21689:21690  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":21668:21686  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":21668:21690  circulatingSupply_ > 0 */\n      gt\n        /* \"contracts/sOHM.sol\":21663:21838  if ( circulatingSupply_ > 0 ){... */\n      iszero\n      tag_132\n      jumpi\n        /* \"contracts/sOHM.sol\":21721:21774  profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      tag_133\n        /* \"contracts/sOHM.sol\":21754:21772  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":21721:21748  profit_.mul( _totalSupply ) */\n      tag_134\n        /* \"contracts/sOHM.sol\":21734:21746  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":21721:21728  profit_ */\n      dup9\n        /* \"contracts/sOHM.sol\":21721:21732  profit_.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":21721:21748  profit_.mul( _totalSupply ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/sOHM.sol\":21721:21752  profit_.mul( _totalSupply ).div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":21721:21774  profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/sOHM.sol\":21706:21774  rebaseAmount = profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      swap2\n      pop\n        /* \"contracts/sOHM.sol\":21663:21838  if ( circulatingSupply_ > 0 ){... */\n      jump(tag_136)\n    tag_132:\n        /* \"contracts/sOHM.sol\":21820:21827  profit_ */\n      dup5\n        /* \"contracts/sOHM.sol\":21805:21827  rebaseAmount = profit_ */\n      swap2\n      pop\n        /* \"contracts/sOHM.sol\":21663:21838  if ( circulatingSupply_ > 0 ){... */\n    tag_136:\n        /* \"contracts/sOHM.sol\":21863:21895  _totalSupply.add( rebaseAmount ) */\n      tag_137\n        /* \"contracts/sOHM.sol\":21881:21893  rebaseAmount */\n      dup3\n        /* \"contracts/sOHM.sol\":21863:21875  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":21863:21879  _totalSupply.add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":21863:21895  _totalSupply.add( rebaseAmount ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/sOHM.sol\":21848:21860  _totalSupply */\n      0x02\n        /* \"contracts/sOHM.sol\":21848:21895  _totalSupply = _totalSupply.add( rebaseAmount ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":20047:20048  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":20038:20049  ~uint128(0) */\n      not\n        /* \"contracts/sOHM.sol\":21926:21936  MAX_SUPPLY */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":21911:21923  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":21911:21936  _totalSupply > MAX_SUPPLY */\n      gt\n        /* \"contracts/sOHM.sol\":21906:21989  if ( _totalSupply > MAX_SUPPLY ) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/sOHM.sol\":20047:20048  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":20038:20049  ~uint128(0) */\n      not\n        /* \"contracts/sOHM.sol\":21968:21978  MAX_SUPPLY */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":21953:21965  _totalSupply */\n      0x02\n        /* \"contracts/sOHM.sol\":21953:21978  _totalSupply = MAX_SUPPLY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":21906:21989  if ( _totalSupply > MAX_SUPPLY ) {... */\n    tag_139:\n        /* \"contracts/sOHM.sol\":22018:22048  TOTAL_GONS.div( _totalSupply ) */\n      tag_140\n        /* \"contracts/sOHM.sol\":22034:22046  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":19635:19650  5000000 * 10**9 */\n      0x11c37937e08000\n        /* \"contracts/sOHM.sol\":19575:19576  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":19566:19577  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":19883:19921  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      dup2\n      tag_141\n      jumpi\n      invalid\n    tag_141:\n      mod\n        /* \"contracts/sOHM.sol\":19575:19576  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":19566:19577  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":19868:19922  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      sub\n        /* \"contracts/sOHM.sol\":22018:22032  TOTAL_GONS.div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":22018:22048  TOTAL_GONS.div( _totalSupply ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"contracts/sOHM.sol\":21999:22015  _gonsPerFragment */\n      0x0e\n        /* \"contracts/sOHM.sol\":21999:22048  _gonsPerFragment = TOTAL_GONS.div( _totalSupply ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":22059:22110  _storeRebase( circulatingSupply_, profit_, epoch_ ) */\n      tag_142\n        /* \"contracts/sOHM.sol\":22073:22091  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":22093:22100  profit_ */\n      dup7\n        /* \"contracts/sOHM.sol\":22102:22108  epoch_ */\n      dup7\n        /* \"contracts/sOHM.sol\":22059:22071  _storeRebase */\n      tag_143\n        /* \"contracts/sOHM.sol\":22059:22110  _storeRebase( circulatingSupply_, profit_, epoch_ ) */\n      jump\t// in\n    tag_142:\n      pop\n        /* \"contracts/sOHM.sol\":22128:22140  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":22121:22140  return _totalSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":18937:18938  _ */\n    tag_127:\n        /* \"contracts/sOHM.sol\":21278:22147  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":4310:4385  function name() public view returns (string memory) {... */\n    tag_44:\n        /* \"contracts/sOHM.sol\":4347:4360  string memory */\n      0x60\n        /* \"contracts/sOHM.sol\":4375:4380  _name */\n      0x03\n        /* \"contracts/sOHM.sol\":4368:4380  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":4310:4385  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":18114:18270  function renounceManagement() public virtual override onlyManager() {... */\n    tag_50:\n        /* \"contracts/sOHM.sol\":18042:18052  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":18032:18052  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18032:18038  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18032:18052  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":18023:18090  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/sOHM.sol\":18230:18231  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":18197:18234  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18214:18220  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18197:18234  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":18261:18262  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":18244:18250  _owner */\n      0x08\n      0x00\n        /* \"contracts/sOHM.sol\":18244:18263  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":18114:18270  function renounceManagement() public virtual override onlyManager() {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":24756:24978  function approve( address spender, uint256 value ) public override returns (bool) {... */\n    tag_53:\n        /* \"contracts/sOHM.sol\":24832:24836  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":24890:24895  value */\n      dup2\n        /* \"contracts/sOHM.sol\":24849:24862  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":24849:24876  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":24864:24874  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":24849:24876  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":24849:24887  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":24878:24885  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":24849:24887  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":24849:24895  _allowedValue[ msg.sender ][ spender ] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":24933:24940  spender */\n      dup3\n        /* \"contracts/sOHM.sol\":24911:24949  Approval( msg.sender, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":24921:24931  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":24911:24949  Approval( msg.sender, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":24942:24947  value */\n      dup5\n        /* \"contracts/sOHM.sol\":24911:24949  Approval( msg.sender, spender, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":24967:24971  true */\n      0x01\n        /* \"contracts/sOHM.sol\":24960:24971  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":24756:24978  function approve( address spender, uint256 value ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":5358:5450  function totalSupply() public view override returns (uint256) {... */\n    tag_55:\n        /* \"contracts/sOHM.sol\":5411:5418  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":5433:5445  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":5426:5445  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":5358:5450  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":23171:23293  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n    tag_58:\n        /* \"contracts/sOHM.sol\":23232:23236  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":23256:23286  amount.mul( _gonsPerFragment ) */\n      tag_154\n        /* \"contracts/sOHM.sol\":23268:23284  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":23256:23262  amount */\n      dup4\n        /* \"contracts/sOHM.sol\":23256:23266  amount.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":23256:23286  amount.mul( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/sOHM.sol\":23249:23286  return amount.mul( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":23171:23293  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":24223:24750  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n    tag_61:\n        /* \"contracts/sOHM.sol\":24314:24318  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":24368:24416  _allowedValue[ from ][ msg.sender ].sub( value ) */\n      tag_156\n        /* \"contracts/sOHM.sol\":24409:24414  value */\n      dup3\n        /* \"contracts/sOHM.sol\":24368:24381  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":24368:24389  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":24383:24387  from */\n      dup8\n        /* \"contracts/sOHM.sol\":24368:24389  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":24368:24403  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":24391:24401  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":24368:24403  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":24368:24407  _allowedValue[ from ][ msg.sender ].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":24368:24416  _allowedValue[ from ][ msg.sender ].sub( value ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/sOHM.sol\":24330:24343  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":24330:24351  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":24345:24349  from */\n      dup7\n        /* \"contracts/sOHM.sol\":24330:24351  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":24330:24365  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":24353:24363  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":24330:24365  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":24330:24416  _allowedValue[ from ][ msg.sender ] = _allowedValue[ from ][ msg.sender ].sub( value ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":24446:24456  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":24430:24496  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":24440:24444  from */\n      dup5\n        /* \"contracts/sOHM.sol\":24430:24496  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":24459:24472  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":24459:24480  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":24474:24478  from */\n      dup9\n        /* \"contracts/sOHM.sol\":24459:24480  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":24459:24494  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":24482:24492  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":24459:24494  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":24430:24496  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":24507:24523  uint256 gonValue */\n      0x00\n        /* \"contracts/sOHM.sol\":24526:24549  gonsForBalance( value ) */\n      tag_158\n        /* \"contracts/sOHM.sol\":24542:24547  value */\n      dup4\n        /* \"contracts/sOHM.sol\":24526:24540  gonsForBalance */\n      tag_58\n        /* \"contracts/sOHM.sol\":24526:24549  gonsForBalance( value ) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/sOHM.sol\":24507:24549  uint256 gonValue = gonsForBalance( value ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":24582:24616  _gonBalances[from].sub( gonValue ) */\n      tag_159\n        /* \"contracts/sOHM.sol\":24606:24614  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":24582:24594  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":24582:24600  _gonBalances[from] */\n      0x00\n        /* \"contracts/sOHM.sol\":24595:24599  from */\n      dup9\n        /* \"contracts/sOHM.sol\":24582:24600  _gonBalances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":24582:24604  _gonBalances[from].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":24582:24616  _gonBalances[from].sub( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"contracts/sOHM.sol\":24559:24571  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":24559:24579  _gonBalances[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":24573:24577  from */\n      dup8\n        /* \"contracts/sOHM.sol\":24559:24579  _gonBalances[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":24559:24616  _gonBalances[ from ] = _gonBalances[from].sub( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":24647:24679  _gonBalances[to].add( gonValue ) */\n      tag_160\n        /* \"contracts/sOHM.sol\":24669:24677  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":24647:24659  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":24647:24663  _gonBalances[to] */\n      0x00\n        /* \"contracts/sOHM.sol\":24660:24662  to */\n      dup8\n        /* \"contracts/sOHM.sol\":24647:24663  _gonBalances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":24647:24667  _gonBalances[to].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":24647:24679  _gonBalances[to].add( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"contracts/sOHM.sol\":24626:24638  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":24626:24644  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":24640:24642  to */\n      dup7\n        /* \"contracts/sOHM.sol\":24626:24644  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":24626:24679  _gonBalances[ to ] = _gonBalances[to].add( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":24710:24712  to */\n      dup4\n        /* \"contracts/sOHM.sol\":24694:24721  Transfer( from, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":24704:24708  from */\n      dup6\n        /* \"contracts/sOHM.sol\":24694:24721  Transfer( from, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":24714:24719  value */\n      dup6\n        /* \"contracts/sOHM.sol\":24694:24721  Transfer( from, to, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":24739:24743  true */\n      0x01\n        /* \"contracts/sOHM.sol\":24732:24743  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":24223:24750  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":23601:23694  function index() public view returns ( uint ) {... */\n    tag_63:\n        /* \"contracts/sOHM.sol\":23640:23644  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":23664:23687  balanceForGons( INDEX ) */\n      tag_162\n        /* \"contracts/sOHM.sol\":23680:23685  INDEX */\n      sload(0x0d)\n        /* \"contracts/sOHM.sol\":23664:23678  balanceForGons */\n      tag_93\n        /* \"contracts/sOHM.sol\":23664:23687  balanceForGons( INDEX ) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/sOHM.sol\":23657:23687  return balanceForGons( INDEX ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":23601:23694  function index() public view returns ( uint ) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":19503:19520  uint public INDEX */\n    tag_65:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":15730:15838  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_67:\n        /* \"contracts/sOHM.sol\":15772:15838  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/sOHM.sol\":15730:15838  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":5208:5283  function decimals() public view returns (uint8) {... */\n    tag_69:\n        /* \"contracts/sOHM.sol\":5249:5254  uint8 */\n      0x00\n        /* \"contracts/sOHM.sol\":5269:5278  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/sOHM.sol\":5262:5278  return _decimals */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":5208:5283  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":15845:15876  bytes32 public DOMAIN_SEPARATOR */\n    tag_71:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":25221:25539  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n    tag_74:\n        /* \"contracts/sOHM.sol\":25312:25316  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":25369:25425  _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      tag_165\n        /* \"contracts/sOHM.sol\":25413:25423  addedValue */\n      dup3\n        /* \"contracts/sOHM.sol\":25369:25382  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":25369:25396  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25384:25394  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":25369:25396  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":25369:25407  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25398:25405  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":25369:25407  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":25369:25411  _allowedValue[ msg.sender ][ spender ].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":25369:25425  _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"contracts/sOHM.sol\":25328:25341  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":25328:25355  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25343:25353  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":25328:25355  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":25328:25366  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25357:25364  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":25328:25366  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":25328:25425  _allowedValue[ msg.sender ][ spender ] = _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":25462:25469  spender */\n      dup3\n        /* \"contracts/sOHM.sol\":25440:25511  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":25450:25460  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":25440:25511  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":25471:25484  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":25471:25498  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25486:25496  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":25471:25498  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":25471:25509  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25500:25507  spender */\n      dup8\n        /* \"contracts/sOHM.sol\":25471:25509  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":25440:25511  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":25528:25532  true */\n      0x01\n        /* \"contracts/sOHM.sol\":25521:25532  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":25221:25539  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":20940:21114  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n    tag_77:\n        /* \"contracts/sOHM.sol\":21006:21010  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":18042:18052  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":18032:18052  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18032:18038  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18032:18052  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":18023:18090  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/sOHM.sol\":21041:21042  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":21032:21037  INDEX */\n      sload(0x0d)\n        /* \"contracts/sOHM.sol\":21032:21042  INDEX == 0 */\n      eq\n        /* \"contracts/sOHM.sol\":21023:21044  require( INDEX == 0 ) */\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n        /* \"contracts/sOHM.sol\":21062:21086  gonsForBalance( _INDEX ) */\n      tag_170\n        /* \"contracts/sOHM.sol\":21078:21084  _INDEX */\n      dup3\n        /* \"contracts/sOHM.sol\":21062:21076  gonsForBalance */\n      tag_58\n        /* \"contracts/sOHM.sol\":21062:21086  gonsForBalance( _INDEX ) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/sOHM.sol\":21054:21059  INDEX */\n      0x0d\n        /* \"contracts/sOHM.sol\":21054:21086  INDEX = gonsForBalance( _INDEX ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":21103:21107  true */\n      0x01\n        /* \"contracts/sOHM.sol\":21096:21107  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":20940:21114  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":18276:18533  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_80:\n        /* \"contracts/sOHM.sol\":18042:18052  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":18032:18052  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18032:18038  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18032:18052  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":18023:18090  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/sOHM.sol\":18399:18400  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":18378:18401  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18378:18387  newOwner_ */\n      dup2\n        /* \"contracts/sOHM.sol\":18378:18401  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":18369:18444  require( newOwner_ != address(0), \"Ownable: new owner is the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/sOHM.sol\":18484:18493  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":18459:18495  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18476:18482  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18459:18495  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":18517:18526  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":18505:18514  _newOwner */\n      0x09\n      0x00\n        /* \"contracts/sOHM.sol\":18505:18526  _newOwner = newOwner_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":18276:18533  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":17896:17984  function manager() public view override returns (address) {... */\n    tag_82:\n        /* \"contracts/sOHM.sol\":17945:17952  address */\n      0x00\n        /* \"contracts/sOHM.sol\":17971:17977  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":17964:17977  return _owner */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":17896:17984  function manager() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":18543:18760  function pullManagement() public virtual override {... */\n    tag_84:\n        /* \"contracts/sOHM.sol\":18626:18635  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18612:18635  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18612:18622  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":18612:18635  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":18603:18674  require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/sOHM.sol\":18714:18723  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18689:18725  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18706:18712  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18689:18725  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":18744:18753  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18735:18741  _owner */\n      0x08\n      0x00\n        /* \"contracts/sOHM.sol\":18735:18753  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":18543:18760  function pullManagement() public virtual override {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":23023:23165  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n    tag_87:\n        /* \"contracts/sOHM.sol\":23088:23095  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":23115:23158  _gonBalances[ who ].div( _gonsPerFragment ) */\n      tag_179\n        /* \"contracts/sOHM.sol\":23140:23156  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":23115:23127  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":23115:23134  _gonBalances[ who ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23129:23132  who */\n      dup6\n        /* \"contracts/sOHM.sol\":23115:23134  _gonBalances[ who ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":23115:23138  _gonBalances[ who ].div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":23115:23158  _gonBalances[ who ].div( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"contracts/sOHM.sol\":23108:23158  return _gonBalances[ who ].div( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":23023:23165  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":19473:19496  Rebase[] public rebases */\n    tag_90:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"contracts/sOHM.sol\":23299:23417  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n    tag_93:\n        /* \"contracts/sOHM.sol\":23358:23362  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":23382:23410  gons.div( _gonsPerFragment ) */\n      tag_183\n        /* \"contracts/sOHM.sol\":23392:23408  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":23382:23386  gons */\n      dup4\n        /* \"contracts/sOHM.sol\":23382:23390  gons.div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":23382:23410  gons.div( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"contracts/sOHM.sol\":23375:23410  return gons.div( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":23299:23417  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":17176:17294  function nonces(address owner) public view override returns (uint256) {... */\n    tag_96:\n        /* \"contracts/sOHM.sol\":17237:17244  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":17263:17287  _nonces[owner].current() */\n      tag_185\n        /* \"contracts/sOHM.sol\":17263:17270  _nonces */\n      0x06\n        /* \"contracts/sOHM.sol\":17263:17277  _nonces[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":17271:17276  owner */\n      dup5\n        /* \"contracts/sOHM.sol\":17263:17277  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":17263:17285  _nonces[owner].current */\n      tag_186\n        /* \"contracts/sOHM.sol\":17263:17287  _nonces[owner].current() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/sOHM.sol\":17256:17287  return _nonces[owner].current() */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":17176:17294  function nonces(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":23465:23595  function circulatingSupply() public view returns ( uint ) {... */\n    tag_98:\n        /* \"contracts/sOHM.sol\":23516:23520  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":23540:23588  _totalSupply.sub( balanceOf( stakingContract ) ) */\n      tag_188\n        /* \"contracts/sOHM.sol\":23558:23586  balanceOf( stakingContract ) */\n      tag_189\n        /* \"contracts/sOHM.sol\":23569:23584  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":23558:23567  balanceOf */\n      tag_87\n        /* \"contracts/sOHM.sol\":23558:23586  balanceOf( stakingContract ) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/sOHM.sol\":23540:23552  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":23540:23556  _totalSupply.sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":23540:23588  _totalSupply.sub( balanceOf( stakingContract ) ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"contracts/sOHM.sol\":23533:23588  return _totalSupply.sub( balanceOf( stakingContract ) ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":23465:23595  function circulatingSupply() public view returns ( uint ) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":4511:4590  function symbol() public view returns (string memory) {... */\n    tag_100:\n        /* \"contracts/sOHM.sol\":4550:4563  string memory */\n      0x60\n        /* \"contracts/sOHM.sol\":4578:4585  _symbol */\n      0x04\n        /* \"contracts/sOHM.sol\":4571:4585  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_192\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_191)\n    tag_192:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_193:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_193\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":4511:4590  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":18987:19013  address public initializer */\n    tag_106:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":25545:26040  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n    tag_109:\n        /* \"contracts/sOHM.sol\":25641:25645  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":25657:25673  uint256 oldValue */\n      dup1\n        /* \"contracts/sOHM.sol\":25676:25689  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":25676:25703  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25691:25701  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":25676:25703  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":25676:25714  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25705:25712  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":25676:25714  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":25657:25714  uint256 oldValue = _allowedValue[ msg.sender ][ spender ] */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":25747:25755  oldValue */\n      dup1\n        /* \"contracts/sOHM.sol\":25728:25743  subtractedValue */\n      dup4\n        /* \"contracts/sOHM.sol\":25728:25755  subtractedValue >= oldValue */\n      lt\n        /* \"contracts/sOHM.sol\":25724:25927  if (subtractedValue >= oldValue) {... */\n      tag_195\n      jumpi\n        /* \"contracts/sOHM.sol\":25812:25813  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":25771:25784  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":25771:25798  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25786:25796  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":25771:25798  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":25771:25809  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25800:25807  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":25771:25809  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":25771:25813  _allowedValue[ msg.sender ][ spender ] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":25724:25927  if (subtractedValue >= oldValue) {... */\n      jump(tag_196)\n    tag_195:\n        /* \"contracts/sOHM.sol\":25885:25916  oldValue.sub( subtractedValue ) */\n      tag_197\n        /* \"contracts/sOHM.sol\":25899:25914  subtractedValue */\n      dup4\n        /* \"contracts/sOHM.sol\":25885:25893  oldValue */\n      dup3\n        /* \"contracts/sOHM.sol\":25885:25897  oldValue.sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":25885:25916  oldValue.sub( subtractedValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"contracts/sOHM.sol\":25844:25857  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":25844:25871  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25859:25869  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":25844:25871  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":25844:25882  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25873:25880  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":25844:25882  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":25844:25916  _allowedValue[ msg.sender ][ spender ] = oldValue.sub( subtractedValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":25724:25927  if (subtractedValue >= oldValue) {... */\n    tag_196:\n        /* \"contracts/sOHM.sol\":25963:25970  spender */\n      dup4\n        /* \"contracts/sOHM.sol\":25941:26012  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":25951:25961  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":25941:26012  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":25972:25985  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":25972:25999  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":25987:25997  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":25972:25999  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":25972:26010  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":26001:26008  spender */\n      dup9\n        /* \"contracts/sOHM.sol\":25972:26010  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":25941:26012  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":26029:26033  true */\n      0x01\n        /* \"contracts/sOHM.sol\":26022:26033  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":25545:26040  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":23700:24058  function transfer( address to, uint256 value ) public override returns (bool) {... */\n    tag_112:\n        /* \"contracts/sOHM.sol\":23772:23776  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":23788:23804  uint256 gonValue */\n      dup1\n        /* \"contracts/sOHM.sol\":23807:23836  value.mul( _gonsPerFragment ) */\n      tag_199\n        /* \"contracts/sOHM.sol\":23818:23834  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":23807:23812  value */\n      dup5\n        /* \"contracts/sOHM.sol\":23807:23816  value.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":23807:23836  value.mul( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"contracts/sOHM.sol\":23788:23836  uint256 gonValue = value.mul( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":23875:23917  _gonBalances[ msg.sender ].sub( gonValue ) */\n      tag_200\n        /* \"contracts/sOHM.sol\":23907:23915  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":23875:23887  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":23875:23901  _gonBalances[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23889:23899  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":23875:23901  _gonBalances[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":23875:23905  _gonBalances[ msg.sender ].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":23875:23917  _gonBalances[ msg.sender ].sub( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/sOHM.sol\":23846:23858  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":23846:23872  _gonBalances[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23860:23870  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":23846:23872  _gonBalances[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":23846:23917  _gonBalances[ msg.sender ] = _gonBalances[ msg.sender ].sub( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":23948:23982  _gonBalances[ to ].add( gonValue ) */\n      tag_201\n        /* \"contracts/sOHM.sol\":23972:23980  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":23948:23960  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":23948:23966  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23962:23964  to */\n      dup8\n        /* \"contracts/sOHM.sol\":23948:23966  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":23948:23970  _gonBalances[ to ].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":23948:23982  _gonBalances[ to ].add( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"contracts/sOHM.sol\":23927:23939  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":23927:23945  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23941:23943  to */\n      dup7\n        /* \"contracts/sOHM.sol\":23927:23945  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":23927:23982  _gonBalances[ to ] = _gonBalances[ to ].add( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":24019:24021  to */\n      dup4\n        /* \"contracts/sOHM.sol\":23997:24030  Transfer( msg.sender, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":24007:24017  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":23997:24030  Transfer( msg.sender, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":24023:24028  value */\n      dup6\n        /* \"contracts/sOHM.sol\":23997:24030  Transfer( msg.sender, to, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":24047:24051  true */\n      0x01\n        /* \"contracts/sOHM.sol\":24040:24051  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":23700:24058  function transfer( address to, uint256 value ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":20463:20934  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n    tag_115:\n        /* \"contracts/sOHM.sol\":20530:20534  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":20570:20581  initializer */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":20556:20581  msg.sender == initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":20556:20566  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":20556:20581  msg.sender == initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":20547:20583  require( msg.sender == initializer ) */\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n        /* \"contracts/sOHM.sol\":20630:20631  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":20602:20632  stakingContract_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":20602:20618  stakingContract_ */\n      dup3\n        /* \"contracts/sOHM.sol\":20602:20632  stakingContract_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":20593:20634  require( stakingContract_ != address(0) ) */\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/sOHM.sol\":20662:20678  stakingContract_ */\n      dup2\n        /* \"contracts/sOHM.sol\":20644:20659  stakingContract */\n      0x0a\n      0x00\n        /* \"contracts/sOHM.sol\":20644:20678  stakingContract = stakingContract_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":19635:19650  5000000 * 10**9 */\n      0x11c37937e08000\n        /* \"contracts/sOHM.sol\":19575:19576  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":19566:19577  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":19883:19921  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      dup2\n      tag_205\n      jumpi\n      invalid\n    tag_205:\n      mod\n        /* \"contracts/sOHM.sol\":19575:19576  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":19566:19577  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":19868:19922  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      sub\n        /* \"contracts/sOHM.sol\":20688:20700  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":20688:20719  _gonBalances[ stakingContract ] */\n      0x00\n        /* \"contracts/sOHM.sol\":20702:20717  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":20688:20719  _gonBalances[ stakingContract ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":20688:20732  _gonBalances[ stakingContract ] = TOTAL_GONS */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":20772:20787  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":20748:20803  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":20766:20769  0x0 */\n      0x00\n        /* \"contracts/sOHM.sol\":20748:20803  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":20789:20801  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":20748:20803  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":20818:20863  LogStakingContractUpdated( stakingContract_ ) */\n      0x817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a1\n        /* \"contracts/sOHM.sol\":20845:20861  stakingContract_ */\n      dup3\n        /* \"contracts/sOHM.sol\":20818:20863  LogStakingContractUpdated( stakingContract_ ) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sOHM.sol\":20904:20905  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":20882:20893  initializer */\n      0x0b\n      0x00\n        /* \"contracts/sOHM.sol\":20882:20906  initializer = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":20923:20927  true */\n      0x01\n        /* \"contracts/sOHM.sol\":20916:20927  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":20463:20934  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":16364:17113  function permit(... */\n    tag_118:\n        /* \"contracts/sOHM.sol\":16600:16608  deadline */\n      dup4\n        /* \"contracts/sOHM.sol\":16581:16596  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":16581:16608  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/sOHM.sol\":16573:16637  require(block.timestamp <= deadline, \"Permit: expired deadline\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5065726d69743a206578706972656420646561646c696e650000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/sOHM.sol\":16648:16666  bytes32 hashStruct */\n      0x00\n        /* \"contracts/sOHM.sol\":15772:15838  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/sOHM.sol\":16702:16717  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"contracts/sOHM.sol\":16719:16724  owner */\n      dup9\n        /* \"contracts/sOHM.sol\":16726:16733  spender */\n      dup9\n        /* \"contracts/sOHM.sol\":16735:16741  amount */\n      dup9\n        /* \"contracts/sOHM.sol\":16743:16767  _nonces[owner].current() */\n      tag_208\n        /* \"contracts/sOHM.sol\":16743:16750  _nonces */\n      0x06\n        /* \"contracts/sOHM.sol\":16743:16757  _nonces[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":16751:16756  owner */\n      dup15\n        /* \"contracts/sOHM.sol\":16743:16757  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":16743:16765  _nonces[owner].current */\n      tag_186\n        /* \"contracts/sOHM.sol\":16743:16767  _nonces[owner].current() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/sOHM.sol\":16769:16777  deadline */\n      dup10\n        /* \"contracts/sOHM.sol\":16691:16778  abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/sOHM.sol\":16681:16779  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/sOHM.sol\":16648:16779  bytes32 hashStruct =... */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":16790:16803  bytes32 _hash */\n      0x00\n        /* \"contracts/sOHM.sol\":16840:16846  0x1901 */\n      0x1901\n        /* \"contracts/sOHM.sol\":16849:16865  DOMAIN_SEPARATOR */\n      sload(0x07)\n        /* \"contracts/sOHM.sol\":16867:16877  hashStruct */\n      dup4\n        /* \"contracts/sOHM.sol\":16816:16878  abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      0xffff\n      and\n      0xf0\n      shl\n      dup2\n      mstore\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/sOHM.sol\":16806:16879  keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/sOHM.sol\":16790:16879  bytes32 _hash = keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct)) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":16890:16904  address signer */\n      0x00\n        /* \"contracts/sOHM.sol\":16907:16932  ecrecover(_hash, v, r, s) */\n      0x01\n        /* \"contracts/sOHM.sol\":16917:16922  _hash */\n      dup3\n        /* \"contracts/sOHM.sol\":16924:16925  v */\n      dup8\n        /* \"contracts/sOHM.sol\":16927:16928  r */\n      dup8\n        /* \"contracts/sOHM.sol\":16930:16931  s */\n      dup8\n        /* \"contracts/sOHM.sol\":16907:16932  ecrecover(_hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/sOHM.sol\":16890:16932  address signer = ecrecover(_hash, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":16968:16969  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":16950:16970  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16950:16956  signer */\n      dup2\n        /* \"contracts/sOHM.sol\":16950:16970  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":16950:16989  signer != address(0) && signer == owner */\n      dup1\n      iszero\n      tag_211\n      jumpi\n      pop\n        /* \"contracts/sOHM.sol\":16984:16989  owner */\n      dup10\n        /* \"contracts/sOHM.sol\":16974:16989  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16974:16980  signer */\n      dup2\n        /* \"contracts/sOHM.sol\":16974:16989  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":16950:16989  signer != address(0) && signer == owner */\n    tag_211:\n        /* \"contracts/sOHM.sol\":16942:17027  require(signer != address(0) && signer == owner, \"ZeroSwapPermit: Invalid signature\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/sOHM.sol\":17038:17064  _nonces[owner].increment() */\n      tag_213\n        /* \"contracts/sOHM.sol\":17038:17045  _nonces */\n      0x06\n        /* \"contracts/sOHM.sol\":17038:17052  _nonces[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":17046:17051  owner */\n      dup13\n        /* \"contracts/sOHM.sol\":17038:17052  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":17038:17062  _nonces[owner].increment */\n      tag_214\n        /* \"contracts/sOHM.sol\":17038:17064  _nonces[owner].increment() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/sOHM.sol\":17074:17106  _approve(owner, spender, amount) */\n      tag_215\n        /* \"contracts/sOHM.sol\":17083:17088  owner */\n      dup11\n        /* \"contracts/sOHM.sol\":17090:17097  spender */\n      dup11\n        /* \"contracts/sOHM.sol\":17099:17105  amount */\n      dup11\n        /* \"contracts/sOHM.sol\":17074:17082  _approve */\n      tag_216\n        /* \"contracts/sOHM.sol\":17074:17106  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/sOHM.sol\":16364:17113  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":24064:24217  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n    tag_121:\n        /* \"contracts/sOHM.sol\":24149:24156  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":24176:24189  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":24176:24199  _allowedValue[ owner_ ] */\n      0x00\n        /* \"contracts/sOHM.sol\":24191:24197  owner_ */\n      dup5\n        /* \"contracts/sOHM.sol\":24176:24199  _allowedValue[ owner_ ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":24176:24210  _allowedValue[ owner_ ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":24201:24208  spender */\n      dup4\n        /* \"contracts/sOHM.sol\":24176:24210  _allowedValue[ owner_ ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":24169:24210  return _allowedValue[ owner_ ][ spender ] */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":24064:24217  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":18951:18981  address public stakingContract */\n    tag_123:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"contracts/libraries/SafeMath.sol\":1019:1026  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      tag_219\n        /* \"contracts/libraries/SafeMath.sol\":1049:1050  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1052:1053  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1045:1048  div */\n      tag_220\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_219:\n        /* \"contracts/libraries/SafeMath.sol\":1038:1084  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":714:955  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_135:\n        /* \"contracts/libraries/SafeMath.sol\":772:779  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":800:801  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":795:796  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":795:801  a == 0 */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":791:836  if (a == 0) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/libraries/SafeMath.sol\":824:825  0 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":817:825  return 0 */\n      swap1\n      pop\n      jump(tag_221)\n        /* \"contracts/libraries/SafeMath.sol\":791:836  if (a == 0) {... */\n    tag_222:\n        /* \"contracts/libraries/SafeMath.sol\":846:855  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":862:863  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":858:859  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":858:863  a * b */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":846:863  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":890:891  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":885:886  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":881:882  c */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":881:886  c / a */\n      dup2\n      tag_223\n      jumpi\n      invalid\n    tag_223:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":881:891  c / a == b */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":873:929  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/libraries/SafeMath.sol\":947:948  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":940:948  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":714:955  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_221:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":199:375  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_138:\n        /* \"contracts/libraries/SafeMath.sol\":257:264  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":276:285  uint256 c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":292:293  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":288:289  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":288:293  a + b */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":276:293  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":316:317  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":311:312  c */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":311:317  c >= a */\n      lt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":303:349  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/libraries/SafeMath.sol\":367:368  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":360:368  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":199:375  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":22337:23017  function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {... */\n    tag_143:\n        /* \"contracts/sOHM.sol\":22434:22438  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":22451:22469  uint rebasePercent */\n      dup1\n        /* \"contracts/sOHM.sol\":22472:22519  profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      tag_228\n        /* \"contracts/sOHM.sol\":22497:22517  previousCirculating_ */\n      dup6\n        /* \"contracts/sOHM.sol\":22472:22491  profit_.mul( 1e18 ) */\n      tag_229\n        /* \"contracts/sOHM.sol\":22485:22489  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sOHM.sol\":22472:22479  profit_ */\n      dup8\n        /* \"contracts/sOHM.sol\":22472:22483  profit_.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":22472:22491  profit_.mul( 1e18 ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/sOHM.sol\":22472:22495  profit_.mul( 1e18 ).div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":22472:22519  profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/sOHM.sol\":22451:22519  uint rebasePercent = profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":22530:22537  rebases */\n      0x0c\n        /* \"contracts/sOHM.sol\":22544:22855  Rebase ( {... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/sOHM.sol\":22574:22580  epoch_ */\n      dup6\n        /* \"contracts/sOHM.sol\":22544:22855  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":22602:22615  rebasePercent */\n      dup4\n        /* \"contracts/sOHM.sol\":22544:22855  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":22663:22683  previousCirculating_ */\n      dup8\n        /* \"contracts/sOHM.sol\":22544:22855  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":22715:22734  circulatingSupply() */\n      tag_230\n        /* \"contracts/sOHM.sol\":22715:22732  circulatingSupply */\n      tag_98\n        /* \"contracts/sOHM.sol\":22715:22734  circulatingSupply() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/sOHM.sol\":22544:22855  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":22763:22770  profit_ */\n      dup7\n        /* \"contracts/sOHM.sol\":22544:22855  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":22791:22798  index() */\n      tag_231\n        /* \"contracts/sOHM.sol\":22791:22796  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":22791:22798  index() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/sOHM.sol\":22544:22855  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":22832:22844  block.number */\n      number\n        /* \"contracts/sOHM.sol\":22544:22855  Rebase ( {... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/sOHM.sol\":22530:22856  rebases.push( Rebase ( {... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":22891:22897  epoch_ */\n      dup3\n        /* \"contracts/sOHM.sol\":22880:22930  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      0x917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da4\n        /* \"contracts/sOHM.sol\":22899:22914  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":22916:22928  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":22880:22930  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":22956:22962  epoch_ */\n      dup3\n        /* \"contracts/sOHM.sol\":22945:22988  LogRebase( epoch_, rebasePercent, index() ) */\n      0x6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2\n        /* \"contracts/sOHM.sol\":22964:22977  rebasePercent */\n      dup3\n        /* \"contracts/sOHM.sol\":22979:22986  index() */\n      tag_233\n        /* \"contracts/sOHM.sol\":22979:22984  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":22979:22986  index() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/sOHM.sol\":22945:22988  LogRebase( epoch_, rebasePercent, index() ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":23006:23010  true */\n      0x01\n        /* \"contracts/sOHM.sol\":22999:23010  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":22337:23017  function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":381:515  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_157:\n        /* \"contracts/libraries/SafeMath.sol\":439:446  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_235\n        /* \"contracts/libraries/SafeMath.sol\":469:470  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":472:473  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":465:468  sub */\n      tag_236\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_235:\n        /* \"contracts/libraries/SafeMath.sol\":458:508  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":381:515  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":13616:13728  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_186:\n        /* \"contracts/sOHM.sol\":13681:13688  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":13707:13714  counter */\n      dup2\n        /* \"contracts/sOHM.sol\":13707:13721  counter._value */\n      0x00\n      add\n      sload\n        /* \"contracts/sOHM.sol\":13700:13721  return counter._value */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":13616:13728  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":13734:13912  function increment(Counter storage counter) internal {... */\n    tag_214:\n        /* \"contracts/sOHM.sol\":13904:13905  1 */\n      0x01\n        /* \"contracts/sOHM.sol\":13886:13893  counter */\n      dup2\n        /* \"contracts/sOHM.sol\":13886:13900  counter._value */\n      0x00\n      add\n      0x00\n        /* \"contracts/sOHM.sol\":13886:13905  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":13734:13912  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":25020:25215  function _approve( address owner, address spender, uint256 value ) internal override virtual {... */\n    tag_216:\n        /* \"contracts/sOHM.sol\":25155:25160  value */\n      dup1\n        /* \"contracts/sOHM.sol\":25123:25136  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":25123:25143  _allowedValue[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":25137:25142  owner */\n      dup6\n        /* \"contracts/sOHM.sol\":25123:25143  _allowedValue[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":25123:25152  _allowedValue[owner][spender] */\n      0x00\n        /* \"contracts/sOHM.sol\":25144:25151  spender */\n      dup5\n        /* \"contracts/sOHM.sol\":25123:25152  _allowedValue[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":25123:25160  _allowedValue[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":25192:25199  spender */\n      dup2\n        /* \"contracts/sOHM.sol\":25175:25208  Approval( owner, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":25185:25190  owner */\n      dup4\n        /* \"contracts/sOHM.sol\":25175:25208  Approval( owner, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":25201:25206  value */\n      dup4\n        /* \"contracts/sOHM.sol\":25175:25208  Approval( owner, spender, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":25020:25215  function _approve( address owner, address spender, uint256 value ) internal override virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_220:\n        /* \"contracts/libraries/SafeMath.sol\":1183:1190  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1214:1215  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":1210:1211  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1210:1215  b > 0 */\n      gt\n        /* \"contracts/libraries/SafeMath.sol\":1217:1229  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":1202:1230  require(b > 0, errorMessage) */\n      swap1\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_242:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_244\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_242)\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_245\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_245:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1240:1249  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1256:1257  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1252:1253  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1252:1257  a / b */\n      dup2\n      tag_246\n      jumpi\n      invalid\n    tag_246:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":1240:1257  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1291:1292  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1287:1288  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1287:1292  a % b */\n      dup2\n      tag_247\n      jumpi\n      invalid\n    tag_247:\n      mod\n        /* \"contracts/libraries/SafeMath.sol\":1283:1284  c */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":1279:1280  b */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1279:1284  b * c */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":1279:1292  b * c + a % b */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":1274:1275  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1274:1292  a == b * c + a % b */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":1267:1293  assert(a == b * c + a % b) */\n      tag_248\n      jumpi\n      invalid\n    tag_248:\n        /* \"contracts/libraries/SafeMath.sol\":1358:1359  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":1351:1359  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":521:708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_236:\n        /* \"contracts/libraries/SafeMath.sol\":607:614  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":639:640  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":634:635  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":634:640  b <= a */\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":642:654  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":626:655  require(b <= a, errorMessage) */\n      swap1\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_251:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_253\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_251)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_254:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":665:674  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":681:682  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":677:678  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":677:682  a - b */\n      sub\n        /* \"contracts/libraries/SafeMath.sol\":665:682  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":700:701  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":693:701  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":521:708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n    data_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee 5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa264697066735822122065d67219298d3b8f48b6ebd1eb14cd2f48983b4842b7d3420fd46ca5ad1af69864736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600e81526020017f5374616b6564204f6c796d7075730000000000000000000000000000000000008152506040518060400160405280600481526020017f734f484d000000000000000000000000000000000000000000000000000000008152506009826003908051906020019062000098929190620004d2565b508160049080519060200190620000b1929190620004d2565b5080600560006101000a81548160ff021916908360ff16021790555050505060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f62000106620002f760201b60201c565b805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001206007819055505033600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a333600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e08000600281905550620002eb6002546611c37937e0800060001981620002d257fe5b06600019036200039d60201b620026f21790919060201c565b600e8190555062000588565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620003935780601f10620003675761010080835404028352916020019162000393565b820191906000526020600020905b8154815290600101906020018083116200037557829003601f168201915b5050505050905090565b6000620003e783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620003ef60201b60201c565b905092915050565b600080831182906200049f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200046357808201518184015260208101905062000446565b50505050905090810190601f168015620004915780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581620004ac57fe5b049050838581620004b957fe5b06818502018514620004c757fe5b809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200050a576000855562000556565b82601f106200052557805160ff191683800117855562000556565b8280016001018555821562000556579182015b828111156200055557825182559160200191906001019062000538565b5b50905062000565919062000569565b5090565b5b80821115620005845760008160009055506001016200056a565b5090565b612d7a80620005986000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063481c6a751161010457806395d89b41116100a2578063c4d66de811610071578063c4d66de8146108be578063d505accf14610918578063dd62ed3e146109b1578063ee99205c14610a29576101da565b806395d89b411461073f5780639ce110d7146107c2578063a457c2d7146107f6578063a9059cbb1461085a576101da565b806373c69eb7116100de57806373c69eb71461061b5780637965d56d146106875780637ecebe00146106c95780639358928b14610721576101da565b8063481c6a75146105855780635a96ac0a146105b957806370a08231146105c3576101da565b80632986c0e51161017c5780633644e5151161014b5780633644e5151461047b578063395093511461049957806340a5737f146104fd57806346f68ee914610541576101da565b80632986c0e5146104005780632df75cb11461041e57806330adf81f1461043c578063313ce5671461045a576101da565b8063095ea7b3116101b8578063095ea7b3146102b857806318160ddd1461031c5780631bd396741461033a57806323b872dd1461037c576101da565b8063058ecdb4146101df57806306fdde031461022b578063089208d8146102ae575b600080fd5b610215600480360360408110156101f557600080fd5b810190808035906020019092919080359060200190929190505050610a5d565b6040518082815260200191505060405180910390f35b610233610c40565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610273578082015181840152602081019050610258565b50505050905090810190601f1680156102a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b6610ce2565b005b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e66565b60405180821515815260200191505060405180910390f35b610324610f58565b6040518082815260200191505060405180910390f35b6103666004803603602081101561035057600080fd5b8101908080359060200190929190505050610f62565b6040518082815260200191505060405180910390f35b6103e86004803603606081101561039257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f80565b60405180821515815260200191505060405180910390f35b61040861131a565b6040518082815260200191505060405180910390f35b61042661132c565b6040518082815260200191505060405180910390f35b610444611332565b6040518082815260200191505060405180910390f35b610462611359565b604051808260ff16815260200191505060405180910390f35b610483611370565b6040518082815260200191505060405180910390f35b6104e5600480360360408110156104af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611376565b60405180821515815260200191505060405180910390f35b6105296004803603602081101561051357600080fd5b8101908080359060200190929190505050611572565b60405180821515815260200191505060405180910390f35b6105836004803603602081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165e565b005b61058d611867565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105c1611891565b005b610605600480360360208110156105d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3a565b6040518082815260200191505060405180910390f35b6106476004803603602081101561063157600080fd5b8101908080359060200190929190505050611a97565b6040518088815260200187815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b6106b36004803603602081101561069d57600080fd5b8101908080359060200190929190505050611ae9565b6040518082815260200191505060405180910390f35b61070b600480360360208110156106df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b07565b6040518082815260200191505060405180910390f35b610729611b57565b6040518082815260200191505060405180910390f35b610747611b9d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078757808201518184015260208101905061076c565b50505050905090810190601f1680156107b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107ca611c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108426004803603604081101561080c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c65565b60405180821515815260200191505060405180910390f35b6108a66004803603604081101561087057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ef5565b60405180821515815260200191505060405180910390f35b610900600480360360208110156108d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120a9565b60405180821515815260200191505060405180910390f35b6109af600480360360e081101561092e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061231e565b005b610a13600480360360408110156109c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612645565b6040518082815260200191505060405180910390f35b610a316126cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab957600080fd5b600080610ac4611b57565b90506000851415610b6557837f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb26000610b3d61131a565b604051808381526020018281526020019250505060405180910390a260025492505050610c3a565b6000811115610b9c57610b9581610b876002548861273c90919063ffffffff16565b6126f290919063ffffffff16565b9150610ba0565b8491505b610bb5826002546127c290919063ffffffff16565b6002819055506000196fffffffffffffffffffffffffffffffff166002541115610bf5576000196fffffffffffffffffffffffffffffffff166002819055505b610c206002546611c37937e0800060001981610c0d57fe5b06600019036126f290919063ffffffff16565b600e81905550610c3181868661284a565b50600254925050505b92915050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cd85780601f10610cad57610100808354040283529160200191610cd8565b820191906000526020600020905b815481529060010190602001808311610cbb57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000610f79600e548361273c90919063ffffffff16565b9050919050565b600061101182601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b601060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600061117d83610f62565b90506111d181600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b6000611327600d54611ae9565b905090565b600d5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b6000600560009054906101000a900460ff16905090565b60075481565b600061140782601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611637576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600d541461164657600080fd5b61164f82610f62565b600d8190555060019050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cbb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611937576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ce16022913960400191505060405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611a90600e54600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126f290919063ffffffff16565b9050919050565b600c8181548110611aa757600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6000611b00600e54836126f290919063ffffffff16565b9050919050565b6000611b50600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b9050919050565b6000611b98611b87600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a3a565b6002546129c590919063ffffffff16565b905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c355780601f10611c0a57610100808354040283529160200191611c35565b820191906000526020600020905b815481529060010190602001808311611c1857829003601f168201915b5050505050905090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310611d75576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e09565b611d8883826129c590919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600080611f0d600e548461273c90919063ffffffff16565b9050611f6181600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ff681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461210557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561213f57600080fd5b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e080006000198161219257fe5b0660001903600f6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a37f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a182604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b83421115612394576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5065726d69743a206578706972656420646561646c696e65000000000000000081525060200191505060405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b888888612404600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061190160075483604051602001808461ffff1660f01b81526002018381526020018281526020019350505050604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561251e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561259257508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6125e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d036021913960400191505060405180910390fd5b61262e600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a1d565b6126398a8a8a612a33565b50505050505050505050565b6000601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061273483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b1e565b905092915050565b60008083141561274f57600090506127bc565b600082840290508284828161276057fe5b04146127b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d246021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015612840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008061287a8561286c670de0b6b3a76400008761273c90919063ffffffff16565b6126f290919063ffffffff16565b9050600c6040518060e001604052808581526020018381526020018781526020016128a3611b57565b81526020018681526020016128b661131a565b8152602001438152509080600181540180825580915050600190039060005260206000209060070201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050827f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2827f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb28261299d61131a565b604051808381526020018281526020019250505060405180910390a260019150509392505050565b6000612a0783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612bfa565b905092915050565b600081600001549050919050565b6001816000016000828254019250508190555050565b80601060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008083118290612bca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b8f578082015181840152602081019050612b74565b50505050905090810190601f168015612bbc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612bd657fe5b049050838581612be257fe5b06818502018514612bef57fe5b809150509392505050565b6000838311158290612ca7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c6c578082015181840152602081019050612c51565b50505050905090810190601f168015612c995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122065d67219298d3b8f48b6ebd1eb14cd2f48983b4842b7d3420fd46ca5ad1af69864736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616B6564204F6C796D707573000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x734F484D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x98 SWAP3 SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xB1 SWAP3 SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH1 0x0 CHAINID SWAP1 POP PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH3 0x106 PUSH3 0x2F7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP CALLER PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x2EB PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH3 0x2D2 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH3 0x39D PUSH1 0x20 SHL PUSH3 0x26F2 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH3 0x588 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH3 0x393 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x367 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x375 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3E7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH3 0x3EF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH3 0x49F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x463 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x446 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x491 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH3 0x4AC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH3 0x4B9 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH3 0x4C7 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x50A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x556 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x525 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x556 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x556 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x555 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x538 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x565 SWAP2 SWAP1 PUSH3 0x569 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x584 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x56A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2D7A DUP1 PUSH3 0x598 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x918 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xA29 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0x9CE110D7 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x85A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x73C69EB7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x73C69EB7 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x7965D56D EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x721 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5C3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x40A5737F EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x541 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x2DF75CB1 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x45A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x1BD39674 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x58ECDB4 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x258 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58D PUSH2 0x1867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0x1891 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x729 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7CA PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x842 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x900 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x231E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA31 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC4 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0xB65 JUMPI DUP4 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 PUSH1 0x0 PUSH2 0xB3D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD SWAP3 POP POP POP PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB95 DUP2 PUSH2 0xB87 PUSH1 0x2 SLOAD DUP9 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xBA0 JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST PUSH2 0xBB5 DUP3 PUSH1 0x2 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xC20 PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0xC0D JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xC31 DUP2 DUP7 DUP7 PUSH2 0x284A JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF79 PUSH1 0xE SLOAD DUP4 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 DUP3 PUSH1 0x10 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH2 0x117D DUP4 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D1 DUP2 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1266 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 PUSH1 0xD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD EQ PUSH2 0x1646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164F DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CBB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CE1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 PUSH1 0xE SLOAD PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH1 0xE SLOAD DUP4 PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH2 0x1B87 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1C35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 LT PUSH2 0x1D75 JUMPI PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1D88 DUP4 DUP3 PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F0D PUSH1 0xE SLOAD DUP5 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1F61 DUP2 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1FF6 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x213F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0x2192 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH1 0xF PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x2394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A206578706972656420646561646C696E650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP9 DUP9 DUP9 PUSH2 0x2404 PUSH1 0x6 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1901 PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x251E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2592 JUMPI POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D03 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x262E PUSH1 0x6 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x2639 DUP11 DUP11 DUP11 PUSH2 0x2A33 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2734 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2B1E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x274F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2760 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x27B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D24 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x287A DUP6 PUSH2 0x286C PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28A3 PUSH2 0x1B57 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28B6 PUSH2 0x131A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP DUP3 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 DUP3 PUSH2 0x299D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A07 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x10 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2BCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B8F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B74 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BBC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2BD6 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x2BE2 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x2BEF JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2CA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C6C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C51 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C99 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0x5A65726F537761705065726D69 PUSH21 0x3A20496E76616C6964207369676E61747572655361 PUSH7 0x654D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 PUSH6 0xD67219298D3B DUP16 0x48 0xB6 0xEB 0xD1 0xEB EQ 0xCD 0x2F 0x48 SWAP9 EXTCODESIZE 0x48 TIMESTAMP 0xB7 0xD3 TIMESTAMP 0xF 0xD4 PUSH13 0xA5AD1AF69864736F6C63430007 SDIV STOP CALLER ",
							"sourceMap": "18764:7278:1:-:0;;;20247:210;;;;;;;;;;4082:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20293:1;4170:5;4162;:13;;;;;;;;;;;;:::i;:::-;;4191:7;4181;:17;;;;;;;;;;;;:::i;:::-;;4216:9;4204;;:21;;;;;;;;;;;;;;;;;;4082:148;;;15908:15;15967:9;15956:20;;16049:95;16174:6;:4;;;:6;;:::i;:::-;16158:24;;;;;;16206:10;;;;;;;;;;;;;;;;;16196:21;;;;;;16242:7;16271:4;16025:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16015:272;;;;;;15996:16;:291;;;;15883:411;17821:10;17812:6;;:19;;;;;;;;;;;;;;;;;;17875:6;;;;;;;;;;;17846:37;;17871:1;17846:37;;;;;;;;;;;;20334:10:::2;20320:11;;:24;;;;;;;;;;;;;;;;;;19635:15;20354:12;:39;;;;20422:28;20437:12;;19635:15;19575:1;19566:11;19883:38;;;;;;19575:1;19566:11;19868:54;20422:14;;;;;;:28;;;;:::i;:::-;20403:16;:47;;;;18764:7278:::0;;4310:75;4347:13;4375:5;4368:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4310:75;:::o;961:130:0:-;1019:7;1045:39;1049:1;1052;1045:39;;;;;;;;;;;;;;;;;:3;;;:39;;:::i;:::-;1038:46;;961:130;;;;:::o;1097:269::-;1183:7;1214:1;1210;:5;1217:12;1202:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:9;1256:1;1252;:5;;;;;;1240:17;;1291:1;1287;:5;;;;;;1283:1;1279;:5;:13;1274:1;:18;1267:26;;;;1358:1;1351:8;;;1097:269;;;;;:::o;18764:7278:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101da5760003560e01c8063481c6a751161010457806395d89b41116100a2578063c4d66de811610071578063c4d66de8146108be578063d505accf14610918578063dd62ed3e146109b1578063ee99205c14610a29576101da565b806395d89b411461073f5780639ce110d7146107c2578063a457c2d7146107f6578063a9059cbb1461085a576101da565b806373c69eb7116100de57806373c69eb71461061b5780637965d56d146106875780637ecebe00146106c95780639358928b14610721576101da565b8063481c6a75146105855780635a96ac0a146105b957806370a08231146105c3576101da565b80632986c0e51161017c5780633644e5151161014b5780633644e5151461047b578063395093511461049957806340a5737f146104fd57806346f68ee914610541576101da565b80632986c0e5146104005780632df75cb11461041e57806330adf81f1461043c578063313ce5671461045a576101da565b8063095ea7b3116101b8578063095ea7b3146102b857806318160ddd1461031c5780631bd396741461033a57806323b872dd1461037c576101da565b8063058ecdb4146101df57806306fdde031461022b578063089208d8146102ae575b600080fd5b610215600480360360408110156101f557600080fd5b810190808035906020019092919080359060200190929190505050610a5d565b6040518082815260200191505060405180910390f35b610233610c40565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610273578082015181840152602081019050610258565b50505050905090810190601f1680156102a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b6610ce2565b005b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e66565b60405180821515815260200191505060405180910390f35b610324610f58565b6040518082815260200191505060405180910390f35b6103666004803603602081101561035057600080fd5b8101908080359060200190929190505050610f62565b6040518082815260200191505060405180910390f35b6103e86004803603606081101561039257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f80565b60405180821515815260200191505060405180910390f35b61040861131a565b6040518082815260200191505060405180910390f35b61042661132c565b6040518082815260200191505060405180910390f35b610444611332565b6040518082815260200191505060405180910390f35b610462611359565b604051808260ff16815260200191505060405180910390f35b610483611370565b6040518082815260200191505060405180910390f35b6104e5600480360360408110156104af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611376565b60405180821515815260200191505060405180910390f35b6105296004803603602081101561051357600080fd5b8101908080359060200190929190505050611572565b60405180821515815260200191505060405180910390f35b6105836004803603602081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165e565b005b61058d611867565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105c1611891565b005b610605600480360360208110156105d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3a565b6040518082815260200191505060405180910390f35b6106476004803603602081101561063157600080fd5b8101908080359060200190929190505050611a97565b6040518088815260200187815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b6106b36004803603602081101561069d57600080fd5b8101908080359060200190929190505050611ae9565b6040518082815260200191505060405180910390f35b61070b600480360360208110156106df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b07565b6040518082815260200191505060405180910390f35b610729611b57565b6040518082815260200191505060405180910390f35b610747611b9d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078757808201518184015260208101905061076c565b50505050905090810190601f1680156107b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107ca611c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108426004803603604081101561080c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c65565b60405180821515815260200191505060405180910390f35b6108a66004803603604081101561087057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ef5565b60405180821515815260200191505060405180910390f35b610900600480360360208110156108d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120a9565b60405180821515815260200191505060405180910390f35b6109af600480360360e081101561092e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061231e565b005b610a13600480360360408110156109c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612645565b6040518082815260200191505060405180910390f35b610a316126cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab957600080fd5b600080610ac4611b57565b90506000851415610b6557837f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb26000610b3d61131a565b604051808381526020018281526020019250505060405180910390a260025492505050610c3a565b6000811115610b9c57610b9581610b876002548861273c90919063ffffffff16565b6126f290919063ffffffff16565b9150610ba0565b8491505b610bb5826002546127c290919063ffffffff16565b6002819055506000196fffffffffffffffffffffffffffffffff166002541115610bf5576000196fffffffffffffffffffffffffffffffff166002819055505b610c206002546611c37937e0800060001981610c0d57fe5b06600019036126f290919063ffffffff16565b600e81905550610c3181868661284a565b50600254925050505b92915050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cd85780601f10610cad57610100808354040283529160200191610cd8565b820191906000526020600020905b815481529060010190602001808311610cbb57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000610f79600e548361273c90919063ffffffff16565b9050919050565b600061101182601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b601060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600061117d83610f62565b90506111d181600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b6000611327600d54611ae9565b905090565b600d5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b6000600560009054906101000a900460ff16905090565b60075481565b600061140782601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611637576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600d541461164657600080fd5b61164f82610f62565b600d8190555060019050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cbb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611937576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ce16022913960400191505060405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611a90600e54600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126f290919063ffffffff16565b9050919050565b600c8181548110611aa757600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6000611b00600e54836126f290919063ffffffff16565b9050919050565b6000611b50600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b9050919050565b6000611b98611b87600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a3a565b6002546129c590919063ffffffff16565b905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c355780601f10611c0a57610100808354040283529160200191611c35565b820191906000526020600020905b815481529060010190602001808311611c1857829003601f168201915b5050505050905090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310611d75576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e09565b611d8883826129c590919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600080611f0d600e548461273c90919063ffffffff16565b9050611f6181600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ff681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461210557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561213f57600080fd5b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e080006000198161219257fe5b0660001903600f6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a37f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a182604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b83421115612394576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5065726d69743a206578706972656420646561646c696e65000000000000000081525060200191505060405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b888888612404600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061190160075483604051602001808461ffff1660f01b81526002018381526020018281526020019350505050604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561251e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561259257508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6125e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d036021913960400191505060405180910390fd5b61262e600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a1d565b6126398a8a8a612a33565b50505050505050505050565b6000601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061273483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b1e565b905092915050565b60008083141561274f57600090506127bc565b600082840290508284828161276057fe5b04146127b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d246021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015612840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008061287a8561286c670de0b6b3a76400008761273c90919063ffffffff16565b6126f290919063ffffffff16565b9050600c6040518060e001604052808581526020018381526020018781526020016128a3611b57565b81526020018681526020016128b661131a565b8152602001438152509080600181540180825580915050600190039060005260206000209060070201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050827f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2827f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb28261299d61131a565b604051808381526020018281526020019250505060405180910390a260019150509392505050565b6000612a0783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612bfa565b905092915050565b600081600001549050919050565b6001816000016000828254019250508190555050565b80601060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008083118290612bca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b8f578082015181840152602081019050612b74565b50505050905090810190601f168015612bbc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612bd657fe5b049050838581612be257fe5b06818502018514612bef57fe5b809150509392505050565b6000838311158290612ca7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c6c578082015181840152602081019050612c51565b50505050905090810190601f168015612c995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122065d67219298d3b8f48b6ebd1eb14cd2f48983b4842b7d3420fd46ca5ad1af69864736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x918 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xA29 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0x9CE110D7 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x85A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x73C69EB7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x73C69EB7 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x7965D56D EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x721 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5C3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x40A5737F EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x541 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x2DF75CB1 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x45A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x1BD39674 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x58ECDB4 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x258 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58D PUSH2 0x1867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0x1891 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x729 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7CA PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x842 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x900 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x231E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA31 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC4 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0xB65 JUMPI DUP4 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 PUSH1 0x0 PUSH2 0xB3D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD SWAP3 POP POP POP PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB95 DUP2 PUSH2 0xB87 PUSH1 0x2 SLOAD DUP9 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xBA0 JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST PUSH2 0xBB5 DUP3 PUSH1 0x2 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xC20 PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0xC0D JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xC31 DUP2 DUP7 DUP7 PUSH2 0x284A JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF79 PUSH1 0xE SLOAD DUP4 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 DUP3 PUSH1 0x10 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH2 0x117D DUP4 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D1 DUP2 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1266 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 PUSH1 0xD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD EQ PUSH2 0x1646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164F DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CBB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CE1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 PUSH1 0xE SLOAD PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH1 0xE SLOAD DUP4 PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH2 0x1B87 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1C35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 LT PUSH2 0x1D75 JUMPI PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1D88 DUP4 DUP3 PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F0D PUSH1 0xE SLOAD DUP5 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1F61 DUP2 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1FF6 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x213F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0x2192 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH1 0xF PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x2394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A206578706972656420646561646C696E650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP9 DUP9 DUP9 PUSH2 0x2404 PUSH1 0x6 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1901 PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x251E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2592 JUMPI POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D03 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x262E PUSH1 0x6 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x2639 DUP11 DUP11 DUP11 PUSH2 0x2A33 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2734 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2B1E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x274F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2760 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x27B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D24 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x287A DUP6 PUSH2 0x286C PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28A3 PUSH2 0x1B57 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28B6 PUSH2 0x131A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP DUP3 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 DUP3 PUSH2 0x299D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A07 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x10 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2BCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B8F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B74 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BBC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2BD6 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x2BE2 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x2BEF JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2CA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C6C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C51 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C99 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0x5A65726F537761705065726D69 PUSH21 0x3A20496E76616C6964207369676E61747572655361 PUSH7 0x654D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 PUSH6 0xD67219298D3B DUP16 0x48 0xB6 0xEB 0xD1 0xEB EQ 0xCD 0x2F 0x48 SWAP9 EXTCODESIZE 0x48 TIMESTAMP 0xB7 0xD3 TIMESTAMP 0xF 0xD4 PUSH13 0xA5AD1AF69864736F6C63430007 SDIV STOP CALLER ",
							"sourceMap": "18764:7278:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21278:869;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4310:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18114:156;;;:::i;:::-;;24756:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5358:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23171:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;24223:527;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;23601:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19503:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15730:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5208:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;15845:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;25221:318;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;20940:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18276:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17896:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18543:217;;;:::i;:::-;;23023:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19473:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23299:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23465:130;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4511:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18987:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;25545:495;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;23700:358;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;20463:471;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;16364:749;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;24064:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18951:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;21278:869;21365:7;18910:15;;;;;;;;;;;18896:29;;:10;:29;;;18887:40;;;;;;21385:20:::1;21415:26:::0;21444:19:::1;:17;:19::i;:::-;21415:48;;21490:1;21479:7;:12;21474:364;;;21524:6;21513:50;21532:15;21549:12;;21513:50;;;;;;;;;;;;;;;;;;;;;;;;21593:6;21582:31;21601:1;21604:7;:5;:7::i;:::-;21582:31;;;;;;;;;;;;;;;;;;;;;;;;21634:12;;21627:19;;;;;;21474:364;21689:1;21668:18;:22;21663:175;;;21721:53;21754:18;21721:27;21734:12;;21721:7;:11;;:27;;;;:::i;:::-;:31;;:53;;;;:::i;:::-;21706:68;;21663:175;;;21820:7;21805:22;;21663:175;21863:32;21881:12;21863;;:16;;:32;;;;:::i;:::-;21848:12;:47;;;;20047:1;20038:11;21926:10;;21911:12;;:25;21906:83;;;20047:1;20038:11;21968:10;;21953:12;:25;;;;21906:83;22018:30;22034:12;;19635:15;19575:1;19566:11;19883:38;;;;;;19575:1;19566:11;19868:54;22018:14;;:30;;;;:::i;:::-;21999:16;:49;;;;22059:51;22073:18;22093:7;22102:6;22059:12;:51::i;:::-;;22128:12;;22121:19;;;;18937:1;21278:869:::0;;;;:::o;4310:75::-;4347:13;4375:5;4368:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4310:75;:::o;18114:156::-;18042:10;18032:20;;:6;;;;;;;;;;;:20;;;18023:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18230:1:::1;18197:37;;18214:6;;;;;;;;;;;18197:37;;;;;;;;;;;;18261:1;18244:6;;:19;;;;;;;;;;;;;;;;;;18114:156::o:0;24756:222::-;24832:4;24890:5;24849:13;:27;24864:10;24849:27;;;;;;;;;;;;;;;:38;24878:7;24849:38;;;;;;;;;;;;;;;:46;;;;24933:7;24911:38;;24921:10;24911:38;;;24942:5;24911:38;;;;;;;;;;;;;;;;;;24967:4;24960:11;;24756:222;;;;:::o;5358:92::-;5411:7;5433:12;;5426:19;;5358:92;:::o;23171:122::-;23232:4;23256:30;23268:16;;23256:6;:10;;:30;;;;:::i;:::-;23249:37;;23171:122;;;:::o;24223:527::-;24314:4;24368:48;24409:5;24368:13;:21;24383:4;24368:21;;;;;;;;;;;;;;;:35;24391:10;24368:35;;;;;;;;;;;;;;;;:39;;:48;;;;:::i;:::-;24330:13;:21;24345:4;24330:21;;;;;;;;;;;;;;;:35;24353:10;24330:35;;;;;;;;;;;;;;;:86;;;;24446:10;24430:66;;24440:4;24430:66;;;24459:13;:21;24474:4;24459:21;;;;;;;;;;;;;;;:35;24482:10;24459:35;;;;;;;;;;;;;;;;24430:66;;;;;;;;;;;;;;;;;;24507:16;24526:23;24542:5;24526:14;:23::i;:::-;24507:42;;24582:34;24606:8;24582:12;:18;24595:4;24582:18;;;;;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;24559:12;:20;24573:4;24559:20;;;;;;;;;;;;;;;:57;;;;24647:32;24669:8;24647:12;:16;24660:2;24647:16;;;;;;;;;;;;;;;;:20;;:32;;;;:::i;:::-;24626:12;:18;24640:2;24626:18;;;;;;;;;;;;;;;:53;;;;24710:2;24694:27;;24704:4;24694:27;;;24714:5;24694:27;;;;;;;;;;;;;;;;;;24739:4;24732:11;;;24223:527;;;;;:::o;23601:93::-;23640:4;23664:23;23680:5;;23664:14;:23::i;:::-;23657:30;;23601:93;:::o;19503:17::-;;;;:::o;15730:108::-;15772:66;15730:108;;;:::o;5208:75::-;5249:5;5269:9;;;;;;;;;;;5262:16;;5208:75;:::o;15845:31::-;;;;:::o;25221:318::-;25312:4;25369:56;25413:10;25369:13;:27;25384:10;25369:27;;;;;;;;;;;;;;;:38;25398:7;25369:38;;;;;;;;;;;;;;;;:42;;:56;;;;:::i;:::-;25328:13;:27;25343:10;25328:27;;;;;;;;;;;;;;;:38;25357:7;25328:38;;;;;;;;;;;;;;;:97;;;;25462:7;25440:71;;25450:10;25440:71;;;25471:13;:27;25486:10;25471:27;;;;;;;;;;;;;;;:38;25500:7;25471:38;;;;;;;;;;;;;;;;25440:71;;;;;;;;;;;;;;;;;;25528:4;25521:11;;25221:318;;;;:::o;20940:174::-;21006:4;18042:10;18032:20;;:6;;;;;;;;;;;:20;;;18023:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21041:1:::1;21032:5;;:10;21023:21;;;::::0;::::1;;21062:24;21078:6;21062:14;:24::i;:::-;21054:5;:32;;;;21103:4;21096:11;;20940:174:::0;;;:::o;18276:257::-;18042:10;18032:20;;:6;;;;;;;;;;;:20;;;18023:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18399:1:::1;18378:23;;:9;:23;;;;18369:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18484:9;18459:36;;18476:6;;;;;;;;;;;18459:36;;;;;;;;;;;;18517:9;18505;;:21;;;;;;;;;;;;;;;;;;18276:257:::0;:::o;17896:88::-;17945:7;17971:6;;;;;;;;;;;17964:13;;17896:88;:::o;18543:217::-;18626:9;;;;;;;;;;;18612:23;;:10;:23;;;18603:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18714:9;;;;;;;;;;;18689:36;;18706:6;;;;;;;;;;;18689:36;;;;;;;;;;;;18744:9;;;;;;;;;;;18735:6;;:18;;;;;;;;;;;;;;;;;;18543:217::o;23023:142::-;23088:7;23115:43;23140:16;;23115:12;:19;23129:3;23115:19;;;;;;;;;;;;;;;;:23;;:43;;;;:::i;:::-;23108:50;;23023:142;;;:::o;19473:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;23299:118::-;23358:4;23382:28;23392:16;;23382:4;:8;;:28;;;;:::i;:::-;23375:35;;23299:118;;;:::o;17176:::-;17237:7;17263:24;:7;:14;17271:5;17263:14;;;;;;;;;;;;;;;:22;:24::i;:::-;17256:31;;17176:118;;;:::o;23465:130::-;23516:4;23540:48;23558:28;23569:15;;;;;;;;;;;23558:9;:28::i;:::-;23540:12;;:16;;:48;;;;:::i;:::-;23533:55;;23465:130;:::o;4511:79::-;4550:13;4578:7;4571:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4511:79;:::o;18987:26::-;;;;;;;;;;;;;:::o;25545:495::-;25641:4;25657:16;25676:13;:27;25691:10;25676:27;;;;;;;;;;;;;;;:38;25705:7;25676:38;;;;;;;;;;;;;;;;25657:57;;25747:8;25728:15;:27;25724:203;;25812:1;25771:13;:27;25786:10;25771:27;;;;;;;;;;;;;;;:38;25800:7;25771:38;;;;;;;;;;;;;;;:42;;;;25724:203;;;25885:31;25899:15;25885:8;:12;;:31;;;;:::i;:::-;25844:13;:27;25859:10;25844:27;;;;;;;;;;;;;;;:38;25873:7;25844:38;;;;;;;;;;;;;;;:72;;;;25724:203;25963:7;25941:71;;25951:10;25941:71;;;25972:13;:27;25987:10;25972:27;;;;;;;;;;;;;;;:38;26001:7;25972:38;;;;;;;;;;;;;;;;25941:71;;;;;;;;;;;;;;;;;;26029:4;26022:11;;;25545:495;;;;:::o;23700:358::-;23772:4;23788:16;23807:29;23818:16;;23807:5;:9;;:29;;;;:::i;:::-;23788:48;;23875:42;23907:8;23875:12;:26;23889:10;23875:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;23846:12;:26;23860:10;23846:26;;;;;;;;;;;;;;;:71;;;;23948:34;23972:8;23948:12;:18;23962:2;23948:18;;;;;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;23927:12;:18;23941:2;23927:18;;;;;;;;;;;;;;;:55;;;;24019:2;23997:33;;24007:10;23997:33;;;24023:5;23997:33;;;;;;;;;;;;;;;;;;24047:4;24040:11;;;23700:358;;;;:::o;20463:471::-;20530:4;20570:11;;;;;;;;;;;20556:25;;:10;:25;;;20547:36;;;;;;20630:1;20602:30;;:16;:30;;;;20593:41;;;;;;20662:16;20644:15;;:34;;;;;;;;;;;;;;;;;;19635:15;19575:1;19566:11;19883:38;;;;;;19575:1;19566:11;19868:54;20688:12;:31;20702:15;;;;;;;;;;;20688:31;;;;;;;;;;;;;;;:44;;;;20772:15;;;;;;;;;;;20748:55;;20766:3;20748:55;;;20789:12;;20748:55;;;;;;;;;;;;;;;;;;20818:45;20845:16;20818:45;;;;;;;;;;;;;;;;;;;;20904:1;20882:11;;:24;;;;;;;;;;;;;;;;;;20923:4;20916:11;;20463:471;;;:::o;16364:749::-;16600:8;16581:15;:27;;16573:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16648:18;15772:66;16702:15;;16719:5;16726:7;16735:6;16743:24;:7;:14;16751:5;16743:14;;;;;;;;;;;;;;;:22;:24::i;:::-;16769:8;16691:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16681:98;;;;;;16648:131;;16790:13;16840:6;16849:16;;16867:10;16816:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16806:73;;;;;;16790:89;;16890:14;16907:25;16917:5;16924:1;16927;16930;16907:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16890:42;;16968:1;16950:20;;:6;:20;;;;:39;;;;;16984:5;16974:15;;:6;:15;;;16950:39;16942:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17038:26;:7;:14;17046:5;17038:14;;;;;;;;;;;;;;;:24;:26::i;:::-;17074:32;17083:5;17090:7;17099:6;17074:8;:32::i;:::-;16364:749;;;;;;;;;;:::o;24064:153::-;24149:7;24176:13;:23;24191:6;24176:23;;;;;;;;;;;;;;;:34;24201:7;24176:34;;;;;;;;;;;;;;;;24169:41;;24064:153;;;;:::o;18951:30::-;;;;;;;;;;;;;:::o;961:130:0:-;1019:7;1045:39;1049:1;1052;1045:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;1038:46;;961:130;;;;:::o;714:241::-;772:7;800:1;795;:6;791:45;;;824:1;817:8;;;;791:45;846:9;862:1;858;:5;846:17;;890:1;885;881;:5;;;;;;:10;873:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:1;940:8;;;714:241;;;;;:::o;199:176::-;257:7;276:9;292:1;288;:5;276:17;;316:1;311;:6;;303:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;367:1;360:8;;;199:176;;;;:::o;22337:680:1:-;22434:4;22451:18;22472:47;22497:20;22472:19;22485:4;22472:7;:11;;:19;;;;:::i;:::-;:23;;:47;;;;:::i;:::-;22451:68;;22530:7;22544:311;;;;;;;;22574:6;22544:311;;;;22602:13;22544:311;;;;22663:20;22544:311;;;;22715:19;:17;:19::i;:::-;22544:311;;;;22763:7;22544:311;;;;22791:7;:5;:7::i;:::-;22544:311;;;;22832:12;22544:311;;;22530:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22891:6;22880:50;22899:15;22916:12;;22880:50;;;;;;;;;;;;;;;;;;;;;;;;22956:6;22945:43;22964:13;22979:7;:5;:7::i;:::-;22945:43;;;;;;;;;;;;;;;;;;;;;;;;23006:4;22999:11;;;22337:680;;;;;:::o;381:134:0:-;439:7;465:43;469:1;472;465:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;458:50;;381:134;;;;:::o;13616:112:1:-;13681:7;13707;:14;;;13700:21;;13616:112;;;:::o;13734:178::-;13904:1;13886:7;:14;;;:19;;;;;;;;;;;13734:178;:::o;25020:195::-;25155:5;25123:13;:20;25137:5;25123:20;;;;;;;;;;;;;;;:29;25144:7;25123:29;;;;;;;;;;;;;;;:37;;;;25192:7;25175:33;;25185:5;25175:33;;;25201:5;25175:33;;;;;;;;;;;;;;;;;;25020:195;;;:::o;1097:269:0:-;1183:7;1214:1;1210;:5;1217:12;1202:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:9;1256:1;1252;:5;;;;;;1240:17;;1291:1;1287;:5;;;;;;1283:1;1279;:5;:13;1274:1;:18;1267:26;;;;1358:1;1351:8;;;1097:269;;;;;:::o;521:187::-;607:7;639:1;634;:6;;642:12;626:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:9;681:1;677;:5;665:17;;700:1;693:8;;;521:187;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2328400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1050",
								"INDEX()": "1073",
								"PERMIT_TYPEHASH()": "301",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22408",
								"balanceForGons(uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"circulatingSupply()": "infinite",
								"decimals()": "1167",
								"decreaseAllowance(address,uint256)": "infinite",
								"gonsForBalance(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"index()": "infinite",
								"initialize(address)": "68507",
								"initializer()": "1114",
								"manager()": "1101",
								"name()": "infinite",
								"nonces(address)": "1334",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"pullManagement()": "infinite",
								"pushManagement(address)": "infinite",
								"rebase(uint256,uint256)": "infinite",
								"rebases(uint256)": "7042",
								"renounceManagement()": "24353",
								"setIndex(uint256)": "infinite",
								"stakingContract()": "1157",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_storeRebase(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 20247,
									"end": 20457,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 20247,
									"end": 20457,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 20247,
									"end": 20457,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 20247,
									"end": 20457,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 20247,
									"end": 20457,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 20247,
									"end": 20457,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 20247,
									"end": 20457,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 20247,
									"end": 20457,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 20247,
									"end": 20457,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 20247,
									"end": 20457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 20247,
									"end": 20457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "PUSH",
									"source": 1,
									"value": "5374616B6564204F6C796D707573000000000000000000000000000000000000"
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "PUSH",
									"source": 1,
									"value": "734F484D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 20293,
									"end": 20294,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4170,
									"end": 4175,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4167,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4162,
									"end": 4175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4191,
									"end": 4198,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4181,
									"end": 4188,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4181,
									"end": 4198,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4216,
									"end": 4225,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4213,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 4204,
									"end": 4213,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4082,
									"end": 4230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15908,
									"end": 15923,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15967,
									"end": 15976,
									"name": "CHAINID",
									"source": 1
								},
								{
									"begin": 15956,
									"end": 15976,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15956,
									"end": 15976,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16049,
									"end": 16144,
									"name": "PUSH",
									"source": 1,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 16174,
									"end": 16180,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 16174,
									"end": 16178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 16174,
									"end": 16178,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16174,
									"end": 16178,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 16174,
									"end": 16180,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16174,
									"end": 16180,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 16174,
									"end": 16180,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 16174,
									"end": 16180,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 16174,
									"end": 16180,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 16158,
									"end": 16182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 16158,
									"end": 16182,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 16158,
									"end": 16182,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 16158,
									"end": 16182,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16158,
									"end": 16182,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16158,
									"end": 16182,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "PUSH",
									"source": 1,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16206,
									"end": 16216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16196,
									"end": 16217,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 16196,
									"end": 16217,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 16196,
									"end": 16217,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 16196,
									"end": 16217,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16196,
									"end": 16217,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16196,
									"end": 16217,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 16242,
									"end": 16249,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 16271,
									"end": 16275,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16025,
									"end": 16286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16015,
									"end": 16287,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 16015,
									"end": 16287,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 16015,
									"end": 16287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 16015,
									"end": 16287,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16015,
									"end": 16287,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16015,
									"end": 16287,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 15996,
									"end": 16012,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 15996,
									"end": 16287,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15996,
									"end": 16287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15996,
									"end": 16287,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 15996,
									"end": 16287,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15883,
									"end": 16294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 17821,
									"end": 17831,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17818,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 17812,
									"end": 17818,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17875,
									"end": 17881,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17871,
									"end": 17872,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "PUSH",
									"source": 1,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 17846,
									"end": 17883,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 20334,
									"end": 20344,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20331,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 20320,
									"end": 20331,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 20320,
									"end": 20344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 19635,
									"end": 19650,
									"name": "PUSH",
									"source": 1,
									"value": "11C37937E08000"
								},
								{
									"begin": 20354,
									"end": 20366,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 20354,
									"end": 20393,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 20354,
									"end": 20393,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 20354,
									"end": 20393,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 20354,
									"end": 20393,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 20422,
									"end": 20450,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 20437,
									"end": 20449,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 20437,
									"end": 20449,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 19635,
									"end": 19650,
									"name": "PUSH",
									"source": 1,
									"value": "11C37937E08000"
								},
								{
									"begin": 19575,
									"end": 19576,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 19566,
									"end": 19577,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 19883,
									"end": 19921,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 19883,
									"end": 19921,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 19883,
									"end": 19921,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 19883,
									"end": 19921,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 19883,
									"end": 19921,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 19883,
									"end": 19921,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 19883,
									"end": 19921,
									"name": "MOD",
									"source": 1
								},
								{
									"begin": 19575,
									"end": 19576,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 19566,
									"end": 19577,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 19868,
									"end": 19922,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 20422,
									"end": 20436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 20422,
									"end": 20436,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 20422,
									"end": 20436,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 20422,
									"end": 20436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551740"
								},
								{
									"begin": 20422,
									"end": 20436,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 20422,
									"end": 20436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 20422,
									"end": 20450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 20422,
									"end": 20450,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 20422,
									"end": 20450,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 20422,
									"end": 20450,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 20422,
									"end": 20450,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 20422,
									"end": 20450,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 20422,
									"end": 20450,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 20403,
									"end": 20419,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 20403,
									"end": 20450,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 20403,
									"end": 20450,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 20403,
									"end": 20450,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 20403,
									"end": 20450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4310,
									"end": 4385,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 4310,
									"end": 4385,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4347,
									"end": 4360,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 4375,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4310,
									"end": 4385,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4310,
									"end": 4385,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1019,
									"end": 1026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1049,
									"end": 1050,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1052,
									"end": 1053,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "1A"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1038,
									"end": 1084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1038,
									"end": 1084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1183,
									"end": 1190,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1214,
									"end": 1215,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1210,
									"end": 1211,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1210,
									"end": 1215,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1217,
									"end": 1229,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1249,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1253,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1257,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1291,
									"end": 1292,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "MOD",
									"source": 0
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 1280,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 1284,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 1292,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1274,
									"end": 1275,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1274,
									"end": 1292,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1358,
									"end": 1359,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 18764,
									"end": 26042,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065d67219298d3b8f48b6ebd1eb14cd2f48983b4842b7d3420fd46ca5ad1af69864736f6c63430007050033",
									".code": [
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "481C6A75"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "C4D66DE8"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "C4D66DE8"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "D505ACCF"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "EE99205C"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "9CE110D7"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "73C69EB7"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "73C69EB7"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "7965D56D"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "7ECEBE00"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "9358928B"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "481C6A75"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "5A96AC0A"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "2986C0E5"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "3644E515"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "3644E515"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "40A5737F"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "46F68EE9"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "2986C0E5"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "2DF75CB1"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "30ADF81F"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "1BD39674"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "58ECDB4"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "89208D8"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 26042,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21365,
											"end": 21372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18910,
											"end": 18925,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 18910,
											"end": 18925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18910,
											"end": 18925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18910,
											"end": 18925,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18910,
											"end": 18925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18910,
											"end": 18925,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18910,
											"end": 18925,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18910,
											"end": 18925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18910,
											"end": 18925,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18910,
											"end": 18925,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18910,
											"end": 18925,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18896,
											"end": 18925,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18896,
											"end": 18925,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18896,
											"end": 18906,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 18896,
											"end": 18925,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18896,
											"end": 18925,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18896,
											"end": 18925,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18887,
											"end": 18927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 18887,
											"end": 18927,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18887,
											"end": 18927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18887,
											"end": 18927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18887,
											"end": 18927,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18887,
											"end": 18927,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 18887,
											"end": 18927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21385,
											"end": 21405,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21415,
											"end": 21441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21444,
											"end": 21463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 21444,
											"end": 21461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 21444,
											"end": 21463,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21444,
											"end": 21463,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 21444,
											"end": 21463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21415,
											"end": 21463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21415,
											"end": 21463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21490,
											"end": 21491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21479,
											"end": 21486,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21479,
											"end": 21491,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21474,
											"end": 21838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21474,
											"end": 21838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 21474,
											"end": 21838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21524,
											"end": 21530,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "PUSH",
											"source": 1,
											"value": "917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4"
										},
										{
											"begin": 21532,
											"end": 21547,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 21549,
											"end": 21561,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 21549,
											"end": 21561,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21563,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 21593,
											"end": 21599,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "PUSH",
											"source": 1,
											"value": "6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2"
										},
										{
											"begin": 21601,
											"end": 21602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21604,
											"end": 21611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 21604,
											"end": 21609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 21604,
											"end": 21611,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21604,
											"end": 21611,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 21604,
											"end": 21611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21582,
											"end": 21613,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 21634,
											"end": 21646,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 21634,
											"end": 21646,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21627,
											"end": 21646,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21627,
											"end": 21646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21627,
											"end": 21646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21627,
											"end": 21646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21627,
											"end": 21646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 21627,
											"end": 21646,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21474,
											"end": 21838,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 21474,
											"end": 21838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21689,
											"end": 21690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21668,
											"end": 21686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21668,
											"end": 21690,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 21663,
											"end": 21838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21663,
											"end": 21838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 21663,
											"end": 21838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 21754,
											"end": 21772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 21734,
											"end": 21746,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 21734,
											"end": 21746,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21728,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 21721,
											"end": 21732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21748,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21721,
											"end": 21748,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21748,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21721,
											"end": 21748,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 21721,
											"end": 21748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 21721,
											"end": 21752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21774,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21721,
											"end": 21774,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21721,
											"end": 21774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21721,
											"end": 21774,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 21721,
											"end": 21774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21706,
											"end": 21774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21706,
											"end": 21774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21663,
											"end": 21838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 21663,
											"end": 21838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21663,
											"end": 21838,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 21663,
											"end": 21838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21820,
											"end": 21827,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21805,
											"end": 21827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21805,
											"end": 21827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21663,
											"end": 21838,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 21663,
											"end": 21838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21863,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 21881,
											"end": 21893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21863,
											"end": 21875,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 21863,
											"end": 21875,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21863,
											"end": 21879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 21863,
											"end": 21879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21863,
											"end": 21895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21863,
											"end": 21895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21863,
											"end": 21895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21863,
											"end": 21895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21863,
											"end": 21895,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21863,
											"end": 21895,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 21863,
											"end": 21895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21848,
											"end": 21860,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 21848,
											"end": 21895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21848,
											"end": 21895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21848,
											"end": 21895,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21848,
											"end": 21895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20047,
											"end": 20048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20038,
											"end": 20049,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 21926,
											"end": 21936,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21926,
											"end": 21936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21911,
											"end": 21923,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 21911,
											"end": 21923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21911,
											"end": 21936,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 21906,
											"end": 21989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21906,
											"end": 21989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 21906,
											"end": 21989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20047,
											"end": 20048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20038,
											"end": 20049,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 21968,
											"end": 21978,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21968,
											"end": 21978,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21953,
											"end": 21965,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 21953,
											"end": 21978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21953,
											"end": 21978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21953,
											"end": 21978,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21953,
											"end": 21978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21906,
											"end": 21989,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 21906,
											"end": 21989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22018,
											"end": 22048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 22034,
											"end": 22046,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 22034,
											"end": 22046,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19635,
											"end": 19650,
											"name": "PUSH",
											"source": 1,
											"value": "11C37937E08000"
										},
										{
											"begin": 19575,
											"end": 19576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19566,
											"end": 19577,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 19575,
											"end": 19576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19566,
											"end": 19577,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 19868,
											"end": 19922,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22018,
											"end": 22032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 22018,
											"end": 22032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22018,
											"end": 22048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22018,
											"end": 22048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22018,
											"end": 22048,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22018,
											"end": 22048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22018,
											"end": 22048,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22018,
											"end": 22048,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 22018,
											"end": 22048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21999,
											"end": 22015,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 21999,
											"end": 22048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21999,
											"end": 22048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21999,
											"end": 22048,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21999,
											"end": 22048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22059,
											"end": 22110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 22073,
											"end": 22091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22093,
											"end": 22100,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22102,
											"end": 22108,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22059,
											"end": 22071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 22059,
											"end": 22110,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22059,
											"end": 22110,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 22059,
											"end": 22110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22059,
											"end": 22110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22128,
											"end": 22140,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 22128,
											"end": 22140,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22121,
											"end": 22140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22121,
											"end": 22140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22121,
											"end": 22140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22121,
											"end": 22140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18937,
											"end": 18938,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 18937,
											"end": 18938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21278,
											"end": 22147,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4375,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4385,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18042,
											"end": 18052,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18230,
											"end": 18231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "PUSH",
											"source": 1,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18234,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 18261,
											"end": 18262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18244,
											"end": 18250,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18244,
											"end": 18250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 18244,
											"end": 18263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18270,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24832,
											"end": 24836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24890,
											"end": 24895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24862,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24864,
											"end": 24874,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24849,
											"end": 24876,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24878,
											"end": 24885,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24849,
											"end": 24887,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24895,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24933,
											"end": 24940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24921,
											"end": 24931,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 24942,
											"end": 24947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24911,
											"end": 24949,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 24967,
											"end": 24971,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24960,
											"end": 24971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24960,
											"end": 24971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24756,
											"end": 24978,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 5418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5445,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5433,
											"end": 5445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5450,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23232,
											"end": 23236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23256,
											"end": 23286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 23268,
											"end": 23284,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 23268,
											"end": 23284,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23256,
											"end": 23262,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23256,
											"end": 23266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 23256,
											"end": 23266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23256,
											"end": 23286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23256,
											"end": 23286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23256,
											"end": 23286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23256,
											"end": 23286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23256,
											"end": 23286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23256,
											"end": 23286,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 23256,
											"end": 23286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23249,
											"end": 23286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23249,
											"end": 23286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23171,
											"end": 23293,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24314,
											"end": 24318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24368,
											"end": 24416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 24409,
											"end": 24414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24381,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24383,
											"end": 24387,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24368,
											"end": 24389,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24391,
											"end": 24401,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24403,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 24368,
											"end": 24407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24416,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24368,
											"end": 24416,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24368,
											"end": 24416,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24368,
											"end": 24416,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 24368,
											"end": 24416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24343,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24345,
											"end": 24349,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24330,
											"end": 24351,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24353,
											"end": 24363,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24330,
											"end": 24365,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24416,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24446,
											"end": 24456,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24440,
											"end": 24444,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 24459,
											"end": 24472,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24474,
											"end": 24478,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24459,
											"end": 24480,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24482,
											"end": 24492,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24494,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24496,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 24507,
											"end": 24523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24526,
											"end": 24549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 24542,
											"end": 24547,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24526,
											"end": 24540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 24526,
											"end": 24549,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24526,
											"end": 24549,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 24526,
											"end": 24549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24507,
											"end": 24549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24507,
											"end": 24549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 24606,
											"end": 24614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24594,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24595,
											"end": 24599,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 24582,
											"end": 24604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24616,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24582,
											"end": 24616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24582,
											"end": 24616,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24582,
											"end": 24616,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 24582,
											"end": 24616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24571,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24573,
											"end": 24577,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24559,
											"end": 24579,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 24559,
											"end": 24616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 24669,
											"end": 24677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24659,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24660,
											"end": 24662,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24663,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 24647,
											"end": 24667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24647,
											"end": 24679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24679,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24647,
											"end": 24679,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 24647,
											"end": 24679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24638,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24640,
											"end": 24642,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24626,
											"end": 24644,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24679,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24710,
											"end": 24712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24704,
											"end": 24708,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24714,
											"end": 24719,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24694,
											"end": 24721,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 24739,
											"end": 24743,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24732,
											"end": 24743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24732,
											"end": 24743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24732,
											"end": 24743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24223,
											"end": 24750,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23640,
											"end": 23644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23664,
											"end": 23687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 23680,
											"end": 23685,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 23680,
											"end": 23685,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23664,
											"end": 23678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 23664,
											"end": 23687,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23664,
											"end": 23687,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 23664,
											"end": 23687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23657,
											"end": 23687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23657,
											"end": 23687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23694,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19520,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15772,
											"end": 15838,
											"name": "PUSH",
											"source": 1,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15838,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5262,
											"end": 5278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5262,
											"end": 5278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5283,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15845,
											"end": 15876,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25312,
											"end": 25316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25369,
											"end": 25425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 25413,
											"end": 25423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25382,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25384,
											"end": 25394,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25369,
											"end": 25396,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25398,
											"end": 25405,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25407,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 25369,
											"end": 25411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25369,
											"end": 25425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25425,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25369,
											"end": 25425,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 25369,
											"end": 25425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25341,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25343,
											"end": 25353,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25328,
											"end": 25355,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25357,
											"end": 25364,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25328,
											"end": 25366,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25425,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 25328,
											"end": 25425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25462,
											"end": 25469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25450,
											"end": 25460,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 25471,
											"end": 25484,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25486,
											"end": 25496,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25471,
											"end": 25498,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25500,
											"end": 25507,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25471,
											"end": 25509,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25440,
											"end": 25511,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 25528,
											"end": 25532,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 25521,
											"end": 25532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25521,
											"end": 25532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25221,
											"end": 25539,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21006,
											"end": 21010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18042,
											"end": 18052,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21041,
											"end": 21042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21032,
											"end": 21037,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 21032,
											"end": 21037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21032,
											"end": 21042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21023,
											"end": 21044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 21023,
											"end": 21044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21023,
											"end": 21044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21023,
											"end": 21044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21023,
											"end": 21044,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21023,
											"end": 21044,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 21023,
											"end": 21044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21062,
											"end": 21086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 21078,
											"end": 21084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21062,
											"end": 21076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 21062,
											"end": 21086,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21062,
											"end": 21086,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 21062,
											"end": 21086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21054,
											"end": 21059,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 21054,
											"end": 21086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21054,
											"end": 21086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21054,
											"end": 21086,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21054,
											"end": 21086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21103,
											"end": 21107,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21096,
											"end": 21107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21114,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18042,
											"end": 18052,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18052,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 18023,
											"end": 18090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18399,
											"end": 18400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18378,
											"end": 18401,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18378,
											"end": 18401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18378,
											"end": 18387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18378,
											"end": 18401,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18378,
											"end": 18401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18378,
											"end": 18401,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18378,
											"end": 18401,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 18369,
											"end": 18444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18484,
											"end": 18493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18476,
											"end": 18482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "PUSH",
											"source": 1,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18495,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18514,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 18505,
											"end": 18514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 18505,
											"end": 18526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18533,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17945,
											"end": 17952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17964,
											"end": 17977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17964,
											"end": 17977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17896,
											"end": 17984,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18612,
											"end": 18635,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18612,
											"end": 18635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18612,
											"end": 18622,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 18612,
											"end": 18635,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18612,
											"end": 18635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18612,
											"end": 18635,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH data",
											"source": 1,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 18603,
											"end": 18674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18714,
											"end": 18723,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "PUSH",
											"source": 1,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18725,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18744,
											"end": 18753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18741,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18735,
											"end": 18741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18543,
											"end": 18760,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23088,
											"end": 23095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23115,
											"end": 23158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 23140,
											"end": 23156,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 23140,
											"end": 23156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23127,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23129,
											"end": 23132,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23134,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 23115,
											"end": 23138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23158,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23115,
											"end": 23158,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23158,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23115,
											"end": 23158,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 23115,
											"end": 23158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23108,
											"end": 23158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23108,
											"end": 23158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23023,
											"end": 23165,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19496,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23382,
											"end": 23410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 23392,
											"end": 23408,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 23392,
											"end": 23408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23382,
											"end": 23386,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23382,
											"end": 23390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 23382,
											"end": 23390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23382,
											"end": 23410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23382,
											"end": 23410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23382,
											"end": 23410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23382,
											"end": 23410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23382,
											"end": 23410,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23382,
											"end": 23410,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 23382,
											"end": 23410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23375,
											"end": 23410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23375,
											"end": 23410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23417,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17237,
											"end": 17244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17263,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 17263,
											"end": 17270,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17271,
											"end": 17276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17263,
											"end": 17277,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 17263,
											"end": 17287,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17263,
											"end": 17287,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 17263,
											"end": 17287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17256,
											"end": 17287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17256,
											"end": 17287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17294,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23516,
											"end": 23520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23540,
											"end": 23588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 23558,
											"end": 23586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 23569,
											"end": 23584,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 23569,
											"end": 23584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23569,
											"end": 23584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23569,
											"end": 23584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23569,
											"end": 23584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23569,
											"end": 23584,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 23569,
											"end": 23584,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 23569,
											"end": 23584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23569,
											"end": 23584,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 23569,
											"end": 23584,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23569,
											"end": 23584,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23558,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 23558,
											"end": 23586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23558,
											"end": 23586,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 23558,
											"end": 23586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23540,
											"end": 23552,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 23540,
											"end": 23552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23540,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 23540,
											"end": 23556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23540,
											"end": 23588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23540,
											"end": 23588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23540,
											"end": 23588,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23540,
											"end": 23588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23540,
											"end": 23588,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23540,
											"end": 23588,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 23540,
											"end": 23588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23533,
											"end": 23588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23533,
											"end": 23588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23465,
											"end": 23595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4563,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19013,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25641,
											"end": 25645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25657,
											"end": 25673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25689,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25691,
											"end": 25701,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25676,
											"end": 25703,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25705,
											"end": 25712,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25676,
											"end": 25714,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 25657,
											"end": 25714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25657,
											"end": 25714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25747,
											"end": 25755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25728,
											"end": 25755,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 25724,
											"end": 25927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 25724,
											"end": 25927,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25812,
											"end": 25813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25771,
											"end": 25784,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25786,
											"end": 25796,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25771,
											"end": 25798,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25800,
											"end": 25807,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25771,
											"end": 25809,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25813,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25724,
											"end": 25927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 25724,
											"end": 25927,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25724,
											"end": 25927,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 25724,
											"end": 25927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25885,
											"end": 25916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 25899,
											"end": 25914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25885,
											"end": 25893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25885,
											"end": 25897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 25885,
											"end": 25897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25885,
											"end": 25916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25885,
											"end": 25916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25885,
											"end": 25916,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25885,
											"end": 25916,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25885,
											"end": 25916,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25885,
											"end": 25916,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 25885,
											"end": 25916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25857,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25859,
											"end": 25869,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25844,
											"end": 25871,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25873,
											"end": 25880,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25844,
											"end": 25882,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25916,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 25844,
											"end": 25916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25724,
											"end": 25927,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 25724,
											"end": 25927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25963,
											"end": 25970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25951,
											"end": 25961,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 25972,
											"end": 25985,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25987,
											"end": 25997,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25972,
											"end": 25999,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26001,
											"end": 26008,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 26012,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 26029,
											"end": 26033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26022,
											"end": 26033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26022,
											"end": 26033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26022,
											"end": 26033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 26040,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23772,
											"end": 23776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23788,
											"end": 23804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23807,
											"end": 23836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 23818,
											"end": 23834,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 23818,
											"end": 23834,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23807,
											"end": 23812,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23807,
											"end": 23816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 23807,
											"end": 23816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23807,
											"end": 23836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23807,
											"end": 23836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23807,
											"end": 23836,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23807,
											"end": 23836,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23807,
											"end": 23836,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23807,
											"end": 23836,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 23807,
											"end": 23836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23788,
											"end": 23836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23788,
											"end": 23836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 23907,
											"end": 23915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23887,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23889,
											"end": 23899,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23901,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 23875,
											"end": 23905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23917,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23875,
											"end": 23917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23875,
											"end": 23917,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23875,
											"end": 23917,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 23875,
											"end": 23917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23858,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23860,
											"end": 23870,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23846,
											"end": 23872,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23917,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23846,
											"end": 23917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 23972,
											"end": 23980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23960,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23962,
											"end": 23964,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 23948,
											"end": 23970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23982,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23948,
											"end": 23982,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23982,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23948,
											"end": 23982,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 23948,
											"end": 23982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23939,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23941,
											"end": 23943,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23927,
											"end": 23945,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23982,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24019,
											"end": 24021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24007,
											"end": 24017,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24023,
											"end": 24028,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24030,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 24047,
											"end": 24051,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24040,
											"end": 24051,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24040,
											"end": 24051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24040,
											"end": 24051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23700,
											"end": 24058,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20530,
											"end": 20534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20556,
											"end": 20581,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20556,
											"end": 20581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20556,
											"end": 20566,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 20556,
											"end": 20581,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20556,
											"end": 20581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20556,
											"end": 20581,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20547,
											"end": 20583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 20547,
											"end": 20583,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20547,
											"end": 20583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20547,
											"end": 20583,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20547,
											"end": 20583,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20547,
											"end": 20583,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 20547,
											"end": 20583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20630,
											"end": 20631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20602,
											"end": 20632,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20602,
											"end": 20632,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20602,
											"end": 20618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20602,
											"end": 20632,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20602,
											"end": 20632,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20602,
											"end": 20632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20602,
											"end": 20632,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20593,
											"end": 20634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 20593,
											"end": 20634,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20593,
											"end": 20634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20593,
											"end": 20634,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20593,
											"end": 20634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20593,
											"end": 20634,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 20593,
											"end": 20634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20662,
											"end": 20678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20659,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 20644,
											"end": 20659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19635,
											"end": 19650,
											"name": "PUSH",
											"source": 1,
											"value": "11C37937E08000"
										},
										{
											"begin": 19575,
											"end": 19576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19566,
											"end": 19577,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19883,
											"end": 19921,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 19575,
											"end": 19576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19566,
											"end": 19577,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 19868,
											"end": 19922,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20700,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20702,
											"end": 20717,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 20702,
											"end": 20717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20702,
											"end": 20717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20702,
											"end": 20717,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 20702,
											"end": 20717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20702,
											"end": 20717,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 20702,
											"end": 20717,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 20702,
											"end": 20717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20702,
											"end": 20717,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 20702,
											"end": 20717,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20702,
											"end": 20717,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20688,
											"end": 20719,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20732,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 20688,
											"end": 20732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20772,
											"end": 20787,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 20772,
											"end": 20787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20772,
											"end": 20787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20772,
											"end": 20787,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 20772,
											"end": 20787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20772,
											"end": 20787,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 20772,
											"end": 20787,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 20772,
											"end": 20787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20772,
											"end": 20787,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 20772,
											"end": 20787,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20772,
											"end": 20787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20766,
											"end": 20769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 20789,
											"end": 20801,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 20789,
											"end": 20801,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20803,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "PUSH",
											"source": 1,
											"value": "817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1"
										},
										{
											"begin": 20845,
											"end": 20861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20818,
											"end": 20863,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 20904,
											"end": 20905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20882,
											"end": 20893,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 20882,
											"end": 20893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20923,
											"end": 20927,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 20916,
											"end": 20927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20916,
											"end": 20927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20934,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16600,
											"end": 16608,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16581,
											"end": 16596,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 16581,
											"end": 16608,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16581,
											"end": 16608,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "PUSH",
											"source": 1,
											"value": "5065726D69743A206578706972656420646561646C696E650000000000000000"
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 16573,
											"end": 16637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16648,
											"end": 16666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15772,
											"end": 15838,
											"name": "PUSH",
											"source": 1,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 16702,
											"end": 16717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16702,
											"end": 16717,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16719,
											"end": 16724,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16726,
											"end": 16733,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16735,
											"end": 16741,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 16743,
											"end": 16750,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16751,
											"end": 16756,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16743,
											"end": 16757,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 16743,
											"end": 16767,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16743,
											"end": 16767,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 16743,
											"end": 16767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16769,
											"end": 16777,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16691,
											"end": 16778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16681,
											"end": 16779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16681,
											"end": 16779,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16681,
											"end": 16779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16681,
											"end": 16779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16681,
											"end": 16779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16681,
											"end": 16779,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16648,
											"end": 16779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16648,
											"end": 16779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16790,
											"end": 16803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16840,
											"end": 16846,
											"name": "PUSH",
											"source": 1,
											"value": "1901"
										},
										{
											"begin": 16849,
											"end": 16865,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 16849,
											"end": 16865,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16867,
											"end": 16877,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "PUSH",
											"source": 1,
											"value": "F0"
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16816,
											"end": 16878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16806,
											"end": 16879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16806,
											"end": 16879,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16806,
											"end": 16879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16806,
											"end": 16879,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16806,
											"end": 16879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16806,
											"end": 16879,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16790,
											"end": 16879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16790,
											"end": 16879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16890,
											"end": 16904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16917,
											"end": 16922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16924,
											"end": 16925,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16927,
											"end": 16928,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16930,
											"end": 16931,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16890,
											"end": 16932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16890,
											"end": 16932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16968,
											"end": 16969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16950,
											"end": 16970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16950,
											"end": 16970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 16956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 16970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16950,
											"end": 16970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 16970,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 16970,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 16989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 16989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 16989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 16950,
											"end": 16989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 16989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16984,
											"end": 16989,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 16974,
											"end": 16989,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16974,
											"end": 16989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16974,
											"end": 16980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16974,
											"end": 16989,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16974,
											"end": 16989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16974,
											"end": 16989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 16989,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 16950,
											"end": 16989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "PUSH data",
											"source": 1,
											"value": "5EF653EDFC38C403EA52D691304FEFFA27A665E594B07A1719AC6B055D64DBEE"
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 16942,
											"end": 17027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17038,
											"end": 17064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 17038,
											"end": 17045,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17046,
											"end": 17051,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17038,
											"end": 17052,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17038,
											"end": 17062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 17038,
											"end": 17064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17038,
											"end": 17064,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 17038,
											"end": 17064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17074,
											"end": 17106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 17083,
											"end": 17088,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 17090,
											"end": 17097,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 17099,
											"end": 17105,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 17074,
											"end": 17082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 17074,
											"end": 17106,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17074,
											"end": 17106,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 17074,
											"end": 17106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 17113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24149,
											"end": 24156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24176,
											"end": 24189,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24191,
											"end": 24197,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24176,
											"end": 24199,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24201,
											"end": 24208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24176,
											"end": 24210,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24169,
											"end": 24210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24169,
											"end": 24210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24217,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18981,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 772,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 795,
											"end": 796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 795,
											"end": 801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 791,
											"end": 836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 791,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 824,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 836,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 858,
											"end": 859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 858,
											"end": 863,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 846,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 846,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 890,
											"end": 891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 885,
											"end": 886,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 881,
											"end": 882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 881,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 881,
											"end": 886,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 881,
											"end": 886,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 881,
											"end": 891,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 947,
											"end": 948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 940,
											"end": 948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 955,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 714,
											"end": 955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 714,
											"end": 955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 714,
											"end": 955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 199,
											"end": 375,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 199,
											"end": 375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 288,
											"end": 289,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 288,
											"end": 293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 276,
											"end": 293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 276,
											"end": 293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 311,
											"end": 312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 317,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 311,
											"end": 317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 360,
											"end": 368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 199,
											"end": 375,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 199,
											"end": 375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 199,
											"end": 375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 199,
											"end": 375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 199,
											"end": 375,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22337,
											"end": 23017,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 22337,
											"end": 23017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22434,
											"end": 22438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22451,
											"end": 22469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22472,
											"end": 22519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 22497,
											"end": 22517,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22472,
											"end": 22491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 22485,
											"end": 22489,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 22472,
											"end": 22479,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22472,
											"end": 22483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 22472,
											"end": 22483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22472,
											"end": 22491,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22472,
											"end": 22491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22472,
											"end": 22491,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22472,
											"end": 22491,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22472,
											"end": 22491,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22472,
											"end": 22491,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 22472,
											"end": 22491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22472,
											"end": 22495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 22472,
											"end": 22495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22472,
											"end": 22519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22472,
											"end": 22519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22472,
											"end": 22519,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22472,
											"end": 22519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22472,
											"end": 22519,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22472,
											"end": 22519,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 22472,
											"end": 22519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22451,
											"end": 22519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22451,
											"end": 22519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22537,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22574,
											"end": 22580,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22602,
											"end": 22615,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22663,
											"end": 22683,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22715,
											"end": 22734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 22715,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 22715,
											"end": 22734,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22715,
											"end": 22734,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 22715,
											"end": 22734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22763,
											"end": 22770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22791,
											"end": 22798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 22791,
											"end": 22796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 22791,
											"end": 22798,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22791,
											"end": 22798,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 22791,
											"end": 22798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22832,
											"end": 22844,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22544,
											"end": 22855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22891,
											"end": 22897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "PUSH",
											"source": 1,
											"value": "917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4"
										},
										{
											"begin": 22899,
											"end": 22914,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 22916,
											"end": 22928,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 22916,
											"end": 22928,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22880,
											"end": 22930,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 22956,
											"end": 22962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "PUSH",
											"source": 1,
											"value": "6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2"
										},
										{
											"begin": 22964,
											"end": 22977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22979,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 22979,
											"end": 22984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 22979,
											"end": 22986,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22979,
											"end": 22986,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 22979,
											"end": 22986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22988,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 23006,
											"end": 23010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22999,
											"end": 23010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22999,
											"end": 23010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22999,
											"end": 23010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22337,
											"end": 23017,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 22337,
											"end": 23017,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22337,
											"end": 23017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22337,
											"end": 23017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22337,
											"end": 23017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22337,
											"end": 23017,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 381,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 469,
											"end": 470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 472,
											"end": 473,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 465,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 458,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 515,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 381,
											"end": 515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 381,
											"end": 515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 515,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13616,
											"end": 13728,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 13616,
											"end": 13728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13707,
											"end": 13714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13707,
											"end": 13721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13707,
											"end": 13721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13707,
											"end": 13721,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13700,
											"end": 13721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13700,
											"end": 13721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13616,
											"end": 13728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13616,
											"end": 13728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13616,
											"end": 13728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13616,
											"end": 13728,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13734,
											"end": 13912,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 13734,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13904,
											"end": 13905,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13886,
											"end": 13893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 13900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13886,
											"end": 13900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 13900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13886,
											"end": 13905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 13905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 13905,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 13905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 13905,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 13905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 13905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 13905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 13905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 13905,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 13905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13734,
											"end": 13912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13734,
											"end": 13912,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25020,
											"end": 25215,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 25020,
											"end": 25215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25155,
											"end": 25160,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25136,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25137,
											"end": 25142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25123,
											"end": 25143,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25144,
											"end": 25151,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25123,
											"end": 25152,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25160,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 25123,
											"end": 25160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25192,
											"end": 25199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25185,
											"end": 25190,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 25201,
											"end": 25206,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25208,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 25020,
											"end": 25215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25020,
											"end": 25215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25020,
											"end": 25215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25020,
											"end": 25215,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1215,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1284,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 521,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 634,
											"end": 640,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 634,
											"end": 640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 642,
											"end": 654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 677,
											"end": 682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 665,
											"end": 682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 693,
											"end": 701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 693,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 693,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 708,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 521,
											"end": 708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 708,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
										"5EF653EDFC38C403EA52D691304FEFFA27A665E594B07A1719AC6B055D64DBEE": "5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"INDEX()": "2df75cb1",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceForGons(uint256)": "7965d56d",
							"balanceOf(address)": "70a08231",
							"circulatingSupply()": "9358928b",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"gonsForBalance(uint256)": "1bd39674",
							"increaseAllowance(address,uint256)": "39509351",
							"index()": "2986c0e5",
							"initialize(address)": "c4d66de8",
							"initializer()": "9ce110d7",
							"manager()": "481c6a75",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"rebase(uint256,uint256)": "058ecdb4",
							"rebases(uint256)": "73c69eb7",
							"renounceManagement()": "089208d8",
							"setIndex(uint256)": "40a5737f",
							"stakingContract()": "ee99205c",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LogRebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingContract\",\"type\":\"address\"}],\"name\":\"LogStakingContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"LogSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gons\",\"type\":\"uint256\"}],\"name\":\"balanceForGons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"gonsForBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingContract_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"profit_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epoch_\",\"type\":\"uint256\"}],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rebases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountRebased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberOccured\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_INDEX\",\"type\":\"uint256\"}],\"name\":\"setIndex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC2612Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC2612Permit-permit}.\"},\"rebase(uint256,uint256)\":{\"params\":{\"profit_\":\"uint256\"},\"returns\":{\"_0\":\"uint256\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rebase(uint256,uint256)\":{\"notice\":\"increases sOHM supply to increase staking balances relative to profit_\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"sOlympus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x084f2c5744450670b4a0e2c74e393db29a888be3c9e09db8e1cd3a3e020e8693\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8df180141677034cf88af022e49834be46991e6679953e86f9fc97e09d945676\",\"dweb:/ipfs/QmZ6mXAUaGbVkfwxm7A7X9LJ2cTvZ8jvrWbdhAtHQ624P1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 432,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 438,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 440,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 442,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 444,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 446,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 993,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)915_storage)"
							},
							{
								"astId": 998,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							},
							{
								"astId": 1168,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1170,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_newOwner",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1313,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "stakingContract",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1315,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "initializer",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1353,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "rebases",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_struct(Rebase)1350_storage)dyn_storage"
							},
							{
								"astId": 1355,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "INDEX",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1386,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_gonsPerFragment",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1390,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_gonBalances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1396,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_allowedValue",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Rebase)1350_storage)dyn_storage": {
								"base": "t_struct(Rebase)1350_storage",
								"encoding": "dynamic_array",
								"label": "struct sOlympus.Rebase[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)915_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)915_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)915_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 914,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Rebase)1350_storage": {
								"encoding": "inplace",
								"label": "struct sOlympus.Rebase",
								"members": [
									{
										"astId": 1337,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "epoch",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1339,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "rebase",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1341,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "totalStakedBefore",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1343,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "totalStakedAfter",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1345,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "amountRebased",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1347,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "index",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1349,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "blockNumberOccured",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"rebase(uint256,uint256)": {
								"notice": "increases sOHM supply to increase staking balances relative to profit_"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							339
						]
					},
					"id": 340,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "79:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 339,
							"linearizedBaseContracts": [
								339
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "266:109:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 25,
														"src": "276:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "276:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 15,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 12,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "288:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 13,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "292:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "288:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "276:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 17,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "311:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 18,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "316:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "311:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "319:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 16,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "303:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "303:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "303:46:0"
											},
											{
												"expression": {
													"id": 23,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "367:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 24,
												"nodeType": "Return",
												"src": "360:8:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "212:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "223:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "211:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "257:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:9:0"
									},
									"scope": 339,
									"src": "199:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "448:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "469:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 37,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "472:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "475:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 35,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															42,
															69
														],
														"referencedDeclaration": 69,
														"src": "465:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "465:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 34,
												"id": 40,
												"nodeType": "Return",
												"src": "458:50:0"
											}
										]
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "394:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "405:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:22:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "439:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:9:0"
									},
									"scope": 339,
									"src": "381:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "616:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 54,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "634:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 55,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "639:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "634:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 57,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "642:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "626:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "626:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "626:29:0"
											},
											{
												"assignments": [
													61
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 68,
														"src": "665:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 60,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "665:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 65,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "677:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 63,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "677:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "665:17:0"
											},
											{
												"expression": {
													"id": 66,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 61,
													"src": "700:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 52,
												"id": 67,
												"nodeType": "Return",
												"src": "693:8:0"
											}
										]
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "534:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "545:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "556:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 47,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:50:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "607:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:9:0"
									},
									"scope": 339,
									"src": "521:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "781:174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 78,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "795:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "800:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "795:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "791:45:0",
												"trueBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "803:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "824:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 77,
															"id": 82,
															"nodeType": "Return",
															"src": "817:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													86
												],
												"declarations": [
													{
														"constant": false,
														"id": 86,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "846:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 85,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "846:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 90,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 87,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "858:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 88,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "862:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "858:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "846:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 92,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "881:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 93,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "885:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "881:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "890:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "881:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "893:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "873:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "873:56:0"
											},
											{
												"expression": {
													"id": 100,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 86,
													"src": "947:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 77,
												"id": 101,
												"nodeType": "Return",
												"src": "940:8:0"
											}
										]
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "727:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "738:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "726:22:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "772:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:9:0"
									},
									"scope": 339,
									"src": "714:241:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1028:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 113,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1049:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 114,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1052:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1055:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 112,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															158
														],
														"referencedDeclaration": 158,
														"src": "1045:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 111,
												"id": 117,
												"nodeType": "Return",
												"src": "1038:46:0"
											}
										]
									},
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "974:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "985:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:22:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 339,
									"src": "961:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1192:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "1210:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1210:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 134,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1217:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1202:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "1202:28:0"
											},
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "1240:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1240:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 142,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 139,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1252:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1256:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1252:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1240:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1274:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 145,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1279:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 146,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 138,
																		"src": "1283:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1279:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 148,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "1287:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 149,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1291:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1287:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1279:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1274:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 143,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1267:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1267:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1267:26:0"
											},
											{
												"expression": {
													"id": 155,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "1358:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 129,
												"id": 156,
												"nodeType": "Return",
												"src": "1351:8:0"
											}
										]
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1110:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1132:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1132:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:50:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1183:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:9:0"
									},
									"scope": 339,
									"src": "1097:269:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1476:265:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 165,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "1490:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1494:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1490:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 205,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "1697:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1697:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 213,
													"nodeType": "IfStatement",
													"src": "1693:42:0",
													"trueBody": {
														"id": 212,
														"nodeType": "Block",
														"src": "1705:30:0",
														"statements": [
															{
																"expression": {
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 208,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "1719:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1719:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 211,
																"nodeType": "ExpressionStatement",
																"src": "1719:5:0"
															}
														]
													}
												},
												"id": 214,
												"nodeType": "IfStatement",
												"src": "1486:249:0",
												"trueBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "1497:190:0",
													"statements": [
														{
															"expression": {
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 168,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "1511:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 169,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "1515:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1511:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 171,
															"nodeType": "ExpressionStatement",
															"src": "1511:5:0"
														},
														{
															"assignments": [
																173
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 173,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 204,
																	"src": "1530:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 172,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1530:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 181,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 176,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 160,
																				"src": "1549:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 177,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1552:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 175,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				119,
																				158
																			],
																			"referencedDeclaration": 119,
																			"src": "1544:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1544:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1556:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 174,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "1539:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1539:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1530:29:0"
														},
														{
															"body": {
																"id": 202,
																"nodeType": "Block",
																"src": "1587:90:0",
																"statements": [
																	{
																		"expression": {
																			"id": 187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 185,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "1605:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 186,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 173,
																				"src": "1609:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1605:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 188,
																		"nodeType": "ExpressionStatement",
																		"src": "1605:5:0"
																	},
																	{
																		"expression": {
																			"id": 200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 189,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 173,
																				"src": "1628:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 193,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 160,
																										"src": "1647:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 194,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 173,
																										"src": "1650:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 192,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										119,
																										158
																									],
																									"referencedDeclaration": 119,
																									"src": "1642:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 195,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1642:11:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 196,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 173,
																								"src": "1655:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 191,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 26,
																							"src": "1637:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 197,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1637:20:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 198,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1659:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 190,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						119,
																						158
																					],
																					"referencedDeclaration": 119,
																					"src": "1632:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1632:30:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1628:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 201,
																		"nodeType": "ExpressionStatement",
																		"src": "1628:34:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 182,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "1580:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 183,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "1584:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1580:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 203,
															"nodeType": "WhileStatement",
															"src": "1573:104:0"
														}
													]
												}
											}
										]
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1434:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:11:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1468:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:8:0"
									},
									"scope": 339,
									"src": "1419:322:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "1862:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 227,
																	"name": "total_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1889:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 228,
																	"name": "percentage_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "1897:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 226,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "1884:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1884:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31303030",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1912:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"id": 225,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															158
														],
														"referencedDeclaration": 119,
														"src": "1879:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1879:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 232,
												"nodeType": "Return",
												"src": "1872:46:0"
											}
										]
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentageAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1777:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "percentage_",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1793:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 219,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1775:37:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "percentAmount_",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1837:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:26:0"
									},
									"scope": 339,
									"src": "1750:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2105:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "total_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2127:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 247,
																			"name": "total_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 236,
																			"src": "2145:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 248,
																			"name": "percentageToSub_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 238,
																			"src": "2153:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 246,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 103,
																		"src": "2140:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2140:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"id": 245,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	119,
																	158
																],
																"referencedDeclaration": 119,
																"src": "2135:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2135:44:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 243,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															42,
															69
														],
														"referencedDeclaration": 42,
														"src": "2122:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 242,
												"id": 253,
												"nodeType": "Return",
												"src": "2115:66:0"
											}
										]
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "substractPercentage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2022:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "percentageToSub_",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2038:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 237,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2038:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:42:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "result_",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2087:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:19:0"
									},
									"scope": 339,
									"src": "1992:196:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2297:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 266,
																	"name": "part_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "2323:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2330:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"id": 265,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "2319:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2319:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 269,
															"name": "total_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2337:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 264,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															158
														],
														"referencedDeclaration": 119,
														"src": "2314:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 271,
												"nodeType": "Return",
												"src": "2307:38:0"
											}
										]
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentageOfTotal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "part_",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2222:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:33:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "percent_",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2278:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2276:20:0"
									},
									"scope": 339,
									"src": "2194:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "2620:119:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 283,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "2692:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2696:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2692:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 286,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 287,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "2702:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2706:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2702:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 290,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2691:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 292,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 276,
																					"src": "2713:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2717:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2713:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 295,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 278,
																					"src": "2721:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2725:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2721:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2713:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2712:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2730:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2712:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 302,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2711:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2691:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 282,
												"id": 304,
												"nodeType": "Return",
												"src": "2684:48:0"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "2358:186:0",
										"text": " Taken from Hypersonic https://github.com/M2629/HyperSonic/blob/main/Math.sol\n @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2566:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2565:22:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2611:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:9:0"
									},
									"scope": 339,
									"src": "2549:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "2844:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 317,
																	"name": "multiplier_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "2873:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 318,
																	"name": "payment_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "2886:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 316,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "2868:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2868:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 315,
														"name": "sqrrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2861:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2861:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 314,
												"id": 321,
												"nodeType": "Return",
												"src": "2854:44:0"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quadraticPricing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "payment_",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2772:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "multiplier_",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2790:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:41:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2835:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:9:0"
									},
									"scope": 339,
									"src": "2745:160:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "3003:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "multiplier_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "3023:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 334,
															"name": "supply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "3036:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 332,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "3018:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3018:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 331,
												"id": 336,
												"nodeType": "Return",
												"src": "3011:34:0"
											}
										]
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bondingCurve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "supply_",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2932:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "multiplier_",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2949:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:40:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2994:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:9:0"
									},
									"scope": 339,
									"src": "2909:141:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 340,
							"src": "175:2877:0"
						}
					],
					"src": "79:2975:0"
				},
				"id": 0
			},
			"contracts/sOHM.sol": {
				"ast": {
					"absolutePath": "contracts/sOHM.sol",
					"exportedSymbols": {
						"Counters": [
							955
						],
						"ERC20": [
							909
						],
						"ERC20Permit": [
							1147
						],
						"IERC20": [
							418
						],
						"IERC2612Permit": [
							982
						],
						"IOwnable": [
							1164
						],
						"Ownable": [
							1293
						],
						"SafeMath": [
							339
						],
						"sOlympus": [
							2021
						]
					},
					"id": 2022,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 341,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 342,
							"nodeType": "ImportDirective",
							"scope": 2022,
							"sourceUnit": 340,
							"src": "137:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 343,
								"nodeType": "StructuredDocumentation",
								"src": "173:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": false,
							"id": 418,
							"linearizedBaseContracts": [
								418
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "760:62:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:2:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "871:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:9:1"
									},
									"scope": 418,
									"src": "825:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "884:68:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "974:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:17:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1014:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1014:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1013:9:1"
									},
									"scope": 418,
									"src": "955:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1027:197:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1245:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1264:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1244:35:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1298:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1298:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:6:1"
									},
									"scope": 418,
									"src": "1227:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1308:252:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "1582:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "1597:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1581:32:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "1637:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1636:9:1"
									},
									"scope": 418,
									"src": "1563:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "1650:616:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2286:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2286:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2303:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2303:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2285:33:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2337:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2337:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2336:6:1"
									},
									"scope": 418,
									"src": "2269:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2347:280:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2668:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:51:1"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2721:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2721:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2720:6:1"
									},
									"scope": 418,
									"src": "2630:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2731:148:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 408,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2897:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2897:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2919:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2919:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2939:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2896:57:1"
									},
									"src": "2882:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "2958:142:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 417,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "3118:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "3141:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "3166:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3117:63:1"
									},
									"src": "3103:78:1"
								}
							],
							"scope": 2022,
							"src": "739:2444:1"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 419,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 418,
										"src": "3219:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$418",
											"typeString": "contract IERC20"
										}
									},
									"id": 420,
									"nodeType": "InheritanceSpecifier",
									"src": "3219:6:1"
								}
							],
							"contractDependencies": [
								418
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 909,
							"linearizedBaseContracts": [
								909,
								418
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 423,
									"libraryName": {
										"id": 421,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 339,
										"src": "3239:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$339",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "3233:27:1",
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3252:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 428,
									"mutability": "constant",
									"name": "ERC20TOKEN_ERC1820_INTERFACE_ID",
									"nodeType": "VariableDeclaration",
									"scope": 909,
									"src": "3301:84:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 424,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3301:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4552433230546f6b656e",
												"id": 426,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3371:12:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												},
												"value": "ERC20Token"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												}
											],
											"id": 425,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "3360:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 427,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3360:25:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 432,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 909,
									"src": "3417:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 431,
										"keyType": {
											"id": 429,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3426:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3417:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 430,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3437:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 438,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 909,
									"src": "3492:70:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 437,
										"keyType": {
											"id": 433,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3501:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3492:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 436,
											"keyType": {
												"id": 434,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3521:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3512:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 435,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3532:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 440,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 909,
									"src": "3590:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 439,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3590:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 442,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 909,
									"src": "3647:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 441,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3647:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 444,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 909,
									"src": "3700:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 443,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3700:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 446,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 909,
									"src": "3755:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 445,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3755:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "4156:74:1",
										"statements": [
											{
												"expression": {
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 456,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "4162:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 457,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "4170:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4162:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "4162:13:1"
											},
											{
												"expression": {
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 460,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "4181:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 461,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "4191:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4181:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "4181:17:1"
											},
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 464,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "4204:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 465,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "4216:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4204:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "4204:21:1"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "3784:295:1",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 469,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4095:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4095:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4116:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4116:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4139:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 452,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4139:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4094:61:1"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4156:0:1"
									},
									"scope": 909,
									"src": "4082:148:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "4362:23:1",
										"statements": [
											{
												"expression": {
													"id": 475,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 442,
													"src": "4375:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 474,
												"id": 476,
												"nodeType": "Return",
												"src": "4368:12:1"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4234:50:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4323:2:1"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4347:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4347:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4346:15:1"
									},
									"scope": 909,
									"src": "4310:75:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "4565:25:1",
										"statements": [
											{
												"expression": {
													"id": 484,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 444,
													"src": "4578:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 483,
												"id": 485,
												"nodeType": "Return",
												"src": "4571:14:1"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "4389:96:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4526:2:1"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "4550:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4550:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:15:1"
									},
									"scope": 909,
									"src": "4511:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "5256:27:1",
										"statements": [
											{
												"expression": {
													"id": 493,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 446,
													"src": "5269:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 492,
												"id": 494,
												"nodeType": "Return",
												"src": "5262:16:1"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "4594:588:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5225:2:1"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5249:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 490,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5249:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:7:1"
									},
									"scope": 909,
									"src": "5208:75:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										349
									],
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "5420:30:1",
										"statements": [
											{
												"expression": {
													"id": 503,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 440,
													"src": "5433:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 502,
												"id": 504,
												"nodeType": "Return",
												"src": "5426:19:1"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "5287:45:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 499,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5393:8:1"
									},
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5378:2:1"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "5411:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5411:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5410:9:1"
									},
									"scope": 909,
									"src": "5358:92:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										357
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "5606:36:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 515,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "5619:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 517,
													"indexExpression": {
														"id": 516,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "5629:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5619:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 514,
												"id": 518,
												"nodeType": "Return",
												"src": "5612:25:1"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "5454:43:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 511,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5579:8:1"
									},
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "5542:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5542:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5541:17:1"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "5597:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5596:9:1"
									},
									"scope": 909,
									"src": "5523:119:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										367
									],
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "5986:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 532,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6002:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6002:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 534,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "6014:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "6025:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 531,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "5992:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5992:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "5992:40:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6045:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 530,
												"id": 539,
												"nodeType": "Return",
												"src": "6038:11:1"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "5646:178:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 527,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5962:8:1"
									},
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5912:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5912:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5931:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5931:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5911:35:1"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5980:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5980:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5979:6:1"
									},
									"scope": 909,
									"src": "5894:160:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "6235:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 552,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "6252:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 554,
														"indexExpression": {
															"id": 553,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "6264:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6252:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 556,
													"indexExpression": {
														"id": 555,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "6271:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6252:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 551,
												"id": 557,
												"nodeType": "Return",
												"src": "6245:34:1"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "6060:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 548,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6208:8:1"
									},
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6156:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6171:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6171:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6155:32:1"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6226:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6225:9:1"
									},
									"scope": 909,
									"src": "6137:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										387
									],
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "6538:75:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 571,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6557:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6557:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 573,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "6569:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "6578:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 570,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "6548:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6548:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "6548:37:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6602:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 569,
												"id": 578,
												"nodeType": "Return",
												"src": "6595:11:1"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "6292:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 566,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6514:8:1"
									},
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "6466:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6466:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "6483:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6483:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6465:33:1"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "6532:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6532:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6531:6:1"
									},
									"scope": 909,
									"src": "6449:164:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										399
									],
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "7217:201:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 594,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "7237:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 595,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "7245:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 596,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "7256:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 593,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "7227:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7227:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "7227:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 600,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "7282:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 601,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7290:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7290:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 610,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "7338:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7346:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 603,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "7302:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 605,
																		"indexExpression": {
																			"id": 604,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 583,
																			"src": "7314:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7302:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 608,
																	"indexExpression": {
																		"expression": {
																			"id": 606,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "7322:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7322:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7302:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 69,
																"src": "7302:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7302:87:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "7273:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7273:117:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "7273:117:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7407:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 592,
												"id": 616,
												"nodeType": "Return",
												"src": "7400:11:1"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "6619:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 589,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7193:8:1"
									},
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "7127:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7127:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "7143:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "7162:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7162:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7126:51:1"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "7211:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 590,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7211:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7210:6:1"
									},
									"scope": 909,
									"src": "7105:313:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "7907:117:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 629,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7926:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7926:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 631,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "7938:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 639,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "7984:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 632,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "7947:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 635,
																		"indexExpression": {
																			"expression": {
																				"id": 633,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "7959:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "7959:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7947:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 637,
																	"indexExpression": {
																		"id": 636,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "7971:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7947:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 26,
																"src": "7947:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7947:48:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 628,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "7917:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7917:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "7917:79:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8013:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 627,
												"id": 644,
												"nodeType": "Return",
												"src": "8006:11:1"
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "7424:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "7840:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7840:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "7857:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7857:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7839:37:1"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "7901:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7901:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7900:6:1"
									},
									"scope": 909,
									"src": "7813:211:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "8610:163:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 657,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "8629:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8629:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 659,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "8641:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 667,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "8687:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8704:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 660,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "8650:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 663,
																		"indexExpression": {
																			"expression": {
																				"id": 661,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "8662:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "8662:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8650:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 665,
																	"indexExpression": {
																		"id": 664,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "8674:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8650:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 69,
																"src": "8650:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8650:94:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 656,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "8620:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8620:125:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "8620:125:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8762:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 655,
												"id": 673,
												"nodeType": "Return",
												"src": "8755:11:1"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "8030:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "8538:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8538:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "8555:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8555:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8537:42:1"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "8604:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 653,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8604:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8603:6:1"
									},
									"scope": 909,
									"src": "8511:262:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "9304:417:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 686,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "9318:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9336:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9328:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 687,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9328:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9328:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9318:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9340:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 685,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9310:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9310:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "9310:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 696,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "9394:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9415:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9407:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 697,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9407:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9407:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9394:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9419:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9386:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9386:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "9386:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 706,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "9485:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "9493:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 708,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "9504:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 705,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "9464:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9464:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "9464:47:1"
											},
											{
												"expression": {
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 711,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "9518:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 713,
														"indexExpression": {
															"id": 712,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "9528:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9518:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 718,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "9560:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9568:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 714,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "9538:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 716,
																"indexExpression": {
																	"id": 715,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "9548:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9538:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "9538:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9538:71:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9518:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "9518:91:1"
											},
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 723,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "9615:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 725,
														"indexExpression": {
															"id": 724,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "9625:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9615:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 730,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "9663:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 726,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "9638:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 728,
																"indexExpression": {
																	"id": 727,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "9648:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9638:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "9638:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9638:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9615:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "9615:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 735,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "9690:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "9698:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "9709:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 734,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "9681:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9681:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "EmitStatement",
												"src": "9676:40:1"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "8777:437:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "9236:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9236:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "9252:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "9271:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9271:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9235:51:1"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9304:0:1"
									},
									"scope": 909,
									"src": "9217:504:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "10085:326:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 750,
																"name": "account_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "10103:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10123:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10115:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 751,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10115:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10115:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10103:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10127:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10095:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10095:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "10095:66:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 762,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "10201:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$909",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$909",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10192:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 760,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10192:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10192:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "10209:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "10219:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 759,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "10171:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10171:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "10171:57:1"
											},
											{
												"expression": {
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 768,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "10238:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 771,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "10270:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 769,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "10253:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "10253:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10253:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10238:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "10238:41:1"
											},
											{
												"expression": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 775,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "10289:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 777,
														"indexExpression": {
															"id": 776,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "10299:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10289:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 782,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "10335:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 778,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "10311:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 780,
																"indexExpression": {
																	"id": 779,
																	"name": "account_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "10321:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10311:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "10311:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10311:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10289:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "10289:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 789,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "10377:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$909",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$909",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10368:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 787,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10368:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10368:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "10385:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "10395:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 786,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "10359:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10359:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "EmitStatement",
												"src": "10354:50:1"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "9727:260:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "10032:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10032:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "ammount_",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "10050:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10031:36:1"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10085:0:1"
									},
									"scope": 909,
									"src": "10017:394:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "10821:345:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 805,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "10839:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10858:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10850:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 806,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10850:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10850:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10839:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10862:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 804,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10831:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10831:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "10831:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "10930:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10939:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 816,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10939:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10939:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 820,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "10951:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "10909:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10909:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "10909:49:1"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 823,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "10969:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 825,
														"indexExpression": {
															"id": 824,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "10979:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10969:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 830,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "11013:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11021:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 826,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "10990:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 828,
																"indexExpression": {
																	"id": 827,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "11000:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10990:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "10990:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10990:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10969:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "10969:89:1"
											},
											{
												"expression": {
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "11068:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 838,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "11100:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 836,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "11083:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "11083:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11083:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11068:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "11068:39:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 843,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "11131:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11148:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11140:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 844,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11140:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11140:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 848,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "11152:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 842,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "11122:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11122:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "EmitStatement",
												"src": "11117:42:1"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "10417:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "10771:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10771:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "10788:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10788:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10770:33:1"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10821:0:1"
									},
									"scope": 909,
									"src": "10756:410:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "11697:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 863,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "11715:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11732:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11724:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 864,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11724:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11724:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11715:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11736:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11707:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11707:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "11707:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 873,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "11793:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11812:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11804:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 874,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11804:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11804:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11793:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11816:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 872,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11785:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11785:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "11785:68:1"
											},
											{
												"expression": {
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 882,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "11864:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 885,
															"indexExpression": {
																"id": 883,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "11876:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11864:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 886,
														"indexExpression": {
															"id": 884,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "11883:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11864:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 887,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "11894:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11864:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "11864:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 891,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "11924:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "11931:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "11940:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "11915:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11915:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "EmitStatement",
												"src": "11910:37:1"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "11172:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "11632:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11632:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "11647:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11647:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "11664:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11631:48:1"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11697:0:1"
									},
									"scope": 909,
									"src": "11614:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "13173:3:1",
										"statements": []
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "12503:550:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "from_",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13110:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to_",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13125:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13125:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13138:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13138:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13108:47:1"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13173:0:1"
									},
									"scope": 909,
									"src": "13079:97:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2022,
							"src": "3185:9993:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 955,
							"linearizedBaseContracts": [
								955
							],
							"name": "Counters",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 912,
									"libraryName": {
										"id": 910,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 339,
										"src": "13209:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$339",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "13203:27:1",
									"typeName": {
										"id": 911,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13222:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Counters.Counter",
									"id": 915,
									"members": [
										{
											"constant": false,
											"id": 914,
											"mutability": "mutable",
											"name": "_value",
											"nodeType": "VariableDeclaration",
											"scope": 915,
											"src": "13575:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 913,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nodeType": "StructDefinition",
									"scope": 955,
									"src": "13236:374:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "13690:38:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 922,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "13707:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 914,
													"src": "13707:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 921,
												"id": 924,
												"nodeType": "Return",
												"src": "13700:21:1"
											}
										]
									},
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "13633:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 916,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 915,
													"src": "13633:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13632:25:1"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "13681:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13681:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13680:9:1"
									},
									"scope": 955,
									"src": "13616:112:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "13787:125:1",
										"statements": [
											{
												"expression": {
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 931,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "13886:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 914,
														"src": "13886:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13904:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "13886:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "13886:19:1"
											}
										]
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13753:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 927,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 915,
													"src": "13753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13752:25:1"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13787:0:1"
									},
									"scope": 955,
									"src": "13734:178:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "13971:55:1",
										"statements": [
											{
												"expression": {
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 943,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "13981:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 914,
														"src": "13981:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14017:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"expression": {
																	"id": 946,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "13998:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 914,
																"src": "13998:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "13998:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13998:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13981:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "13981:38:1"
											}
										]
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "13937:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 939,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 915,
													"src": "13937:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13936:25:1"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13971:0:1"
									},
									"scope": 955,
									"src": "13918:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2022,
							"src": "13180:848:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 982,
							"linearizedBaseContracts": [
								982
							],
							"name": "IERC2612Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "14061:834:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "14925:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14925:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "14948:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "14973:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14973:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "14997:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "15023:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 965,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15023:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "15040:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 967,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15040:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "15059:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 969,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14915:159:1"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15083:0:1"
									},
									"scope": 982,
									"src": "14900:184:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "15090:302:1",
										"text": " @dev Returns the current ERC2612 nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "15413:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15413:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15412:15:1"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "15451:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15451:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15450:9:1"
									},
									"scope": 982,
									"src": "15397:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2022,
							"src": "14030:1432:1"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 983,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 909,
										"src": "15497:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$909",
											"typeString": "contract ERC20"
										}
									},
									"id": 984,
									"nodeType": "InheritanceSpecifier",
									"src": "15497:5:1"
								},
								{
									"baseName": {
										"id": 985,
										"name": "IERC2612Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 982,
										"src": "15504:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC2612Permit_$982",
											"typeString": "contract IERC2612Permit"
										}
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "15504:14:1"
								}
							],
							"contractDependencies": [
								418,
								909,
								982
							],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 1147,
							"linearizedBaseContracts": [
								1147,
								982,
								909,
								418
							],
							"name": "ERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 989,
									"libraryName": {
										"id": 987,
										"name": "Counters",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 955,
										"src": "15531:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Counters_$955",
											"typeString": "library Counters"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "15525:36:1",
									"typeName": {
										"id": 988,
										"name": "Counters.Counter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 915,
										"src": "15544:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 993,
									"mutability": "mutable",
									"name": "_nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1147,
									"src": "15567:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$915_storage_$",
										"typeString": "mapping(address => struct Counters.Counter)"
									},
									"typeName": {
										"id": 992,
										"keyType": {
											"id": 990,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "15575:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "15567:36:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$915_storage_$",
											"typeString": "mapping(address => struct Counters.Counter)"
										},
										"valueType": {
											"id": 991,
											"name": "Counters.Counter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 915,
											"src": "15586:16:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
												"typeString": "struct Counters.Counter"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "30adf81f",
									"id": 996,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1147,
									"src": "15730:108:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 994,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "15730:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 995,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15772:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3644e515",
									"id": 998,
									"mutability": "mutable",
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 1147,
									"src": "15845:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 997,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "15845:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "15897:397:1",
										"statements": [
											{
												"assignments": [
													1002
												],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 1034,
														"src": "15908:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1001,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15908:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1003,
												"nodeType": "VariableDeclarationStatement",
												"src": "15908:15:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15942:44:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15956:20:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "15967:7:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15967:9:1"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "15956:7:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1002,
														"isOffset": false,
														"isSlot": false,
														"src": "15956:7:1",
														"valueSize": 1
													}
												],
												"id": 1004,
												"nodeType": "InlineAssembly",
												"src": "15933:53:1"
											},
											{
												"expression": {
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1005,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "15996:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16059:84:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 1009,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "16049:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16049:95:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1015,
																							"name": "name",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 478,
																							"src": "16174:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																								"typeString": "function () view returns (string memory)"
																							}
																						},
																						"id": 1016,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16174:6:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 1014,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "16168:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1013,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "16168:5:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16168:13:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1012,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "16158:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16158:24:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 1022,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "16212:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 1021,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "16206:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1020,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "16206:5:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16206:10:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1019,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "16196:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16196:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1025,
																		"name": "chainID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "16242:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1028,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "16271:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20Permit_$1147",
																					"typeString": "contract ERC20Permit"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20Permit_$1147",
																					"typeString": "contract ERC20Permit"
																				}
																			],
																			"id": 1027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16263:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1026,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16263:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16263:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1007,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "16025:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "16025:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16025:261:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1006,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -8,
															"src": "16015:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16015:272:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "15996:291:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "15996:291:1"
											}
										]
									},
									"id": 1035,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15894:2:1"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15897:0:1"
									},
									"scope": 1147,
									"src": "15883:411:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										973
									],
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "16563:550:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1055,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "16581:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "16581:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1057,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "16600:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16581:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5065726d69743a206578706972656420646561646c696e65",
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16610:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															},
															"value": "Permit: expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16573:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16573:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "16573:64:1"
											},
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "hashStruct",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "16648:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1062,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16648:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1079,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1067,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "16702:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1068,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "16719:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1069,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "16726:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1070,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "16735:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"baseExpression": {
																				"id": 1071,
																				"name": "_nonces",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 993,
																				"src": "16743:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$915_storage_$",
																					"typeString": "mapping(address => struct Counters.Counter storage ref)"
																				}
																			},
																			"id": 1073,
																			"indexExpression": {
																				"id": 1072,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1038,
																				"src": "16751:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16743:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$915_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 926,
																		"src": "16743:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$915_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$915_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16743:24:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1076,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "16769:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1065,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16691:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "16691:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16691:87:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1064,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "16681:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16681:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16648:131:1"
											},
											{
												"assignments": [
													1081
												],
												"declarations": [
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "_hash",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "16790:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1080,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16790:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1093,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "307831393031",
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16840:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			},
																			"value": "0x1901"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			}
																		],
																		"id": 1086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16833:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 1085,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "16833:6:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16833:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																{
																	"id": 1089,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "16849:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1090,
																	"name": "hashStruct",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "16867:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1083,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16816:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "16816:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16816:62:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1082,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "16806:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16806:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16790:89:1"
											},
											{
												"assignments": [
													1095
												],
												"declarations": [
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "16890:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1094,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16890:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"initialValue": {
													"arguments": [
														{
															"id": 1097,
															"name": "_hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "16917:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1098,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "16924:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1099,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "16927:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1100,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "16930:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1096,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "16907:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16907:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16890:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1104,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "16950:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16968:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16960:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1105,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16960:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16960:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "16950:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1110,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "16974:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1111,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "16984:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16974:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16950:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16991:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee",
																"typeString": "literal_string \"ZeroSwapPermit: Invalid signature\""
															},
															"value": "ZeroSwapPermit: Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee",
																"typeString": "literal_string \"ZeroSwapPermit: Invalid signature\""
															}
														],
														"id": 1103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16942:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16942:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "16942:85:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1117,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "17038:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$915_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1119,
															"indexExpression": {
																"id": 1118,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "17046:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17038:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$915_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 938,
														"src": "17038:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$915_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$915_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17038:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "17038:26:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1124,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "17083:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "17090:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1126,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "17099:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1123,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "17074:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17074:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "17074:32:1"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "16300:59:1",
										"text": " @dev See {IERC2612Permit-permit}."
									},
									"functionSelector": "d505accf",
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1052,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16554:8:1"
									},
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "16389:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16389:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "16412:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "16437:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16437:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "16461:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16461:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "16487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1045,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16487:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "16504:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1047,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16504:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "16523:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1049,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16379:159:1"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16563:0:1"
									},
									"scope": 1147,
									"src": "16364:749:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										981
									],
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "17246:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1139,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "17263:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$915_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1141,
															"indexExpression": {
																"id": 1140,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "17271:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17263:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$915_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 926,
														"src": "17263:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$915_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$915_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17263:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1144,
												"nodeType": "Return",
												"src": "17256:31:1"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "17119:52:1",
										"text": " @dev See {IERC2612Permit-nonces}."
									},
									"functionSelector": "7ecebe00",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1135,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17219:8:1"
									},
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "17192:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17191:15:1"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "17237:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17237:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17236:9:1"
									},
									"scope": 1147,
									"src": "17176:118:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2022,
							"src": "15464:1832:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1164,
							"linearizedBaseContracts": [
								1164
							],
							"name": "IOwnable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "481c6a75",
									"id": 1152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "manager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17337:2:1"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "17363:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17363:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17362:9:1"
									},
									"scope": 1164,
									"src": "17321:51:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "089208d8",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17403:2:1"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17414:0:1"
									},
									"scope": 1164,
									"src": "17376:39:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46f68ee9",
									"id": 1160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "17446:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17446:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17444:21:1"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17474:0:1"
									},
									"scope": 1164,
									"src": "17421:54:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a96ac0a",
									"id": 1163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17504:2:1"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17515:0:1"
									},
									"scope": 1164,
									"src": "17481:35:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2022,
							"src": "17298:220:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1165,
										"name": "IOwnable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1164,
										"src": "17540:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOwnable_$1164",
											"typeString": "contract IOwnable"
										}
									},
									"id": 1166,
									"nodeType": "InheritanceSpecifier",
									"src": "17540:8:1"
								}
							],
							"contractDependencies": [
								1164
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								1164
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1168,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "17556:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1167,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "17556:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1170,
									"mutability": "mutable",
									"name": "_newOwner",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "17585:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1169,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "17585:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1176,
									"name": "OwnershipPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "17640:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17640:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "17671:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17671:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17639:57:1"
									},
									"src": "17618:79:1"
								},
								{
									"anonymous": false,
									"id": 1182,
									"name": "OwnershipPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "17724:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "17755:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17755:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17723:57:1"
									},
									"src": "17702:79:1"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "17802:88:1",
										"statements": [
											{
												"expression": {
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1185,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "17812:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1186,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "17821:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "17821:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "17812:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "17812:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17871:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17863:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1191,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17863:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17863:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1195,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "17875:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1190,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "17846:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17846:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "17841:42:1"
											}
										]
									},
									"id": 1199,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17799:2:1"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17802:0:1"
									},
									"scope": 1293,
									"src": "17787:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1152
									],
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "17954:30:1",
										"statements": [
											{
												"expression": {
													"id": 1205,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1168,
													"src": "17971:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1204,
												"id": 1206,
												"nodeType": "Return",
												"src": "17964:13:1"
											}
										]
									},
									"functionSelector": "481c6a75",
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "manager",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1201,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17927:8:1"
									},
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17912:2:1"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "17945:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17944:9:1"
									},
									"scope": 1293,
									"src": "17896:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "18013:95:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1211,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "18032:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1212,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "18042:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18042:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18032:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18054:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18023:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18023:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "18023:67:1"
											},
											{
												"id": 1218,
												"nodeType": "PlaceholderStatement",
												"src": "18100:1:1"
											}
										]
									},
									"id": 1220,
									"name": "onlyManager",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18010:2:1"
									},
									"src": "17990:118:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1155
									],
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "18182:88:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1227,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "18214:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18230:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18222:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1228,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18222:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18222:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1226,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "18197:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18197:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "EmitStatement",
												"src": "18192:42:1"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1234,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "18244:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18261:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18253:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1235,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18253:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18253:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "18244:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "18244:19:1"
											}
										]
									},
									"functionSelector": "089208d8",
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1224,
											"modifierName": {
												"id": 1223,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1220,
												"src": "18168:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18168:13:1"
										}
									],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1222,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18159:8:1"
									},
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18141:2:1"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18182:0:1"
									},
									"scope": 1293,
									"src": "18114:156:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1160
									],
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "18359:174:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "newOwner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "18378:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18399:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18391:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1252,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18391:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18391:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18378:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18403:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18369:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18369:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "18369:75:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1261,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "18476:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1262,
															"name": "newOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "18484:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1260,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "18459:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18459:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "EmitStatement",
												"src": "18454:41:1"
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1265,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "18505:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1266,
														"name": "newOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "18517:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18505:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "18505:21:1"
											}
										]
									},
									"functionSelector": "46f68ee9",
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1248,
											"modifierName": {
												"id": 1247,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1220,
												"src": "18345:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18345:13:1"
										}
									],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1246,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18336:8:1"
									},
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "18301:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18301:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18299:21:1"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18359:0:1"
									},
									"scope": 1293,
									"src": "18276:257:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1163
									],
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "18593:167:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1275,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "18612:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18612:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1277,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "18626:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18612:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18637:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															},
															"value": "Ownable: must be new owner to pull"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															}
														],
														"id": 1274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18603:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18603:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "18603:71:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1283,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "18706:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "18714:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1282,
														"name": "OwnershipPulled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "18689:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18689:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "EmitStatement",
												"src": "18684:41:1"
											},
											{
												"expression": {
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1287,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "18735:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1288,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "18744:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18735:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "18735:18:1"
											}
										]
									},
									"functionSelector": "5a96ac0a",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1272,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18584:8:1"
									},
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18566:2:1"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18593:0:1"
									},
									"scope": 1293,
									"src": "18543:217:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2022,
							"src": "17520:1242:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1294,
										"name": "ERC20Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1147,
										"src": "18785:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Permit_$1147",
											"typeString": "contract ERC20Permit"
										}
									},
									"id": 1295,
									"nodeType": "InheritanceSpecifier",
									"src": "18785:11:1"
								},
								{
									"baseName": {
										"id": 1296,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1293,
										"src": "18798:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1293",
											"typeString": "contract Ownable"
										}
									},
									"id": 1297,
									"nodeType": "InheritanceSpecifier",
									"src": "18798:7:1"
								}
							],
							"contractDependencies": [
								418,
								909,
								982,
								1147,
								1164,
								1293
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2021,
							"linearizedBaseContracts": [
								2021,
								1293,
								1164,
								1147,
								982,
								909,
								418
							],
							"name": "sOlympus",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1300,
									"libraryName": {
										"id": 1298,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 339,
										"src": "18819:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$339",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "18813:27:1",
									"typeName": {
										"id": 1299,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18832:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "18877:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1303,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "18896:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18896:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1305,
																"name": "stakingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "18910:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18896:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18887:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "18887:40:1"
											},
											{
												"id": 1309,
												"nodeType": "PlaceholderStatement",
												"src": "18937:1:1"
											}
										]
									},
									"id": 1311,
									"name": "onlyStakingContract",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18874:2:1"
									},
									"src": "18846:99:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ee99205c",
									"id": 1313,
									"mutability": "mutable",
									"name": "stakingContract",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "18951:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1312,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18951:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ce110d7",
									"id": 1315,
									"mutability": "mutable",
									"name": "initializer",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "18987:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1314,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18987:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1323,
									"name": "LogSupply",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "19036:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19036:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "19059:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "19078:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19078:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19035:64:1"
									},
									"src": "19020:80:1"
								},
								{
									"anonymous": false,
									"id": 1331,
									"name": "LogRebase",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "19122:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19122:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": false,
												"mutability": "mutable",
												"name": "rebase",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "19145:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19145:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "19161:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19120:56:1"
									},
									"src": "19105:72:1"
								},
								{
									"anonymous": false,
									"id": 1335,
									"name": "LogStakingContractUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakingContract",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "19215:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19213:27:1"
									},
									"src": "19182:59:1"
								},
								{
									"canonicalName": "sOlympus.Rebase",
									"id": 1350,
									"members": [
										{
											"constant": false,
											"id": 1337,
											"mutability": "mutable",
											"name": "epoch",
											"nodeType": "VariableDeclaration",
											"scope": 1350,
											"src": "19271:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1336,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "19271:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1339,
											"mutability": "mutable",
											"name": "rebase",
											"nodeType": "VariableDeclaration",
											"scope": 1350,
											"src": "19291:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1338,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "19291:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1341,
											"mutability": "mutable",
											"name": "totalStakedBefore",
											"nodeType": "VariableDeclaration",
											"scope": 1350,
											"src": "19327:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1340,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "19327:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1343,
											"mutability": "mutable",
											"name": "totalStakedAfter",
											"nodeType": "VariableDeclaration",
											"scope": 1350,
											"src": "19359:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1342,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "19359:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1345,
											"mutability": "mutable",
											"name": "amountRebased",
											"nodeType": "VariableDeclaration",
											"scope": 1350,
											"src": "19390:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1344,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "19390:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1347,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 1350,
											"src": "19418:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1346,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "19418:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1349,
											"mutability": "mutable",
											"name": "blockNumberOccured",
											"nodeType": "VariableDeclaration",
											"scope": 1350,
											"src": "19438:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1348,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "19438:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Rebase",
									"nodeType": "StructDefinition",
									"scope": 2021,
									"src": "19247:221:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73c69eb7",
									"id": 1353,
									"mutability": "mutable",
									"name": "rebases",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "19473:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Rebase_$1350_storage_$dyn_storage",
										"typeString": "struct sOlympus.Rebase[]"
									},
									"typeName": {
										"baseType": {
											"id": 1351,
											"name": "Rebase",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1350,
											"src": "19473:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Rebase_$1350_storage_ptr",
												"typeString": "struct sOlympus.Rebase"
											}
										},
										"id": 1352,
										"nodeType": "ArrayTypeName",
										"src": "19473:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Rebase_$1350_storage_$dyn_storage_ptr",
											"typeString": "struct sOlympus.Rebase[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2df75cb1",
									"id": 1355,
									"mutability": "mutable",
									"name": "INDEX",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "19503:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1354,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "19503:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1362,
									"mutability": "constant",
									"name": "MAX_UINT256",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "19527:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1356,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19527:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1361,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "19566:11:1",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19575:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1358,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "19567:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19567:7:1",
													"typeDescriptions": {}
												}
											},
											"id": 1360,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "19567:10:1",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1369,
									"mutability": "constant",
									"name": "INITIAL_FRAGMENTS_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "19583:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19583:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										},
										"id": 1368,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35303030303030",
											"id": 1364,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "19635:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5000000_by_1",
												"typeString": "int_const 5000000"
											},
											"value": "5000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 1367,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1365,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "19645:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 1366,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "19649:1:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "19645:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "19635:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1377,
									"mutability": "constant",
									"name": "TOTAL_GONS",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "19830:92:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1370,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19830:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1371,
											"name": "MAX_UINT256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1362,
											"src": "19868:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "MAX_UINT256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "19883:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1373,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "19897:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19883:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1375,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "19882:40:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "19868:54:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1384,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "20000:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20000:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "20038:11:1",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20047:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1380,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "20039:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint128_$",
													"typeString": "type(uint128)"
												},
												"typeName": {
													"id": 1379,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "20039:7:1",
													"typeDescriptions": {}
												}
											},
											"id": 1382,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "20039:10:1",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1386,
									"mutability": "mutable",
									"name": "_gonsPerFragment",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "20072:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20072:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1390,
									"mutability": "mutable",
									"name": "_gonBalances",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "20110:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1389,
										"keyType": {
											"id": 1387,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "20118:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "20110:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1388,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "20129:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1396,
									"mutability": "mutable",
									"name": "_allowedValue",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "20165:75:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1395,
										"keyType": {
											"id": 1391,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "20175:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "20165:53:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1394,
											"keyType": {
												"id": 1392,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "20196:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "20186:30:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1393,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "20207:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "20310:147:1",
										"statements": [
											{
												"expression": {
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1406,
														"name": "initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "20320:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1407,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "20334:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "20334:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "20320:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "20320:24:1"
											},
											{
												"expression": {
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1411,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "20354:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1412,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "20369:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20354:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "20354:39:1"
											},
											{
												"expression": {
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1415,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "20403:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1418,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "20437:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1416,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "20422:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "20422:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20422:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20403:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "20403:47:1"
											}
										]
									},
									"id": 1423,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5374616b6564204f6c796d707573",
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20267:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_160563d5e45bd2d38a59e1d8c9b2de3959abd8b5800722606b884bf092f59dd7",
														"typeString": "literal_string \"Staked Olympus\""
													},
													"value": "Staked Olympus"
												},
												{
													"hexValue": "734f484d",
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20285:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a7e7eb95bb3e87e8dfaa679c27e8e813bf0f9c0b9b260e19a0ebfd934d15679b",
														"typeString": "literal_string \"sOHM\""
													},
													"value": "sOHM"
												},
												{
													"hexValue": "39",
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20293:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												}
											],
											"id": 1402,
											"modifierName": {
												"id": 1398,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 909,
												"src": "20261:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$909_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20261:34:1"
										},
										{
											"arguments": [],
											"id": 1404,
											"modifierName": {
												"id": 1403,
												"name": "ERC20Permit",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1147,
												"src": "20296:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Permit_$1147_$",
													"typeString": "type(contract ERC20Permit)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20296:13:1"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20258:2:1"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20310:0:1"
									},
									"scope": 2021,
									"src": "20247:210:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "20537:397:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1431,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "20556:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "20556:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1433,
																"name": "initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "20570:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20556:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20547:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20547:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "20547:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1438,
																"name": "stakingContract_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "20602:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20630:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20622:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1439,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20622:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20622:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20602:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20593:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20593:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "20593:41:1"
											},
											{
												"expression": {
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1446,
														"name": "stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "20644:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1447,
														"name": "stakingContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "20662:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20644:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "20644:34:1"
											},
											{
												"expression": {
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1450,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "20688:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1452,
														"indexExpression": {
															"id": 1451,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "20702:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20688:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1453,
														"name": "TOTAL_GONS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "20722:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20688:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "20688:44:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307830",
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20766:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20758:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20758:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20758:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1461,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "20772:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1462,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "20789:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1456,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "20748:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20748:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1464,
												"nodeType": "EmitStatement",
												"src": "20743:60:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1466,
															"name": "stakingContract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "20845:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1465,
														"name": "LogStakingContractUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "20818:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20818:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "EmitStatement",
												"src": "20813:50:1"
											},
											{
												"expression": {
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1469,
														"name": "initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "20882:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20904:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20896:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1470,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20896:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20896:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "20882:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "20882:24:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20923:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1429,
												"id": 1477,
												"nodeType": "Return",
												"src": "20916:11:1"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "stakingContract_",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "20484:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20484:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20482:28:1"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "20530:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20530:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20528:8:1"
									},
									"scope": 2021,
									"src": "20463:471:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "21013:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1489,
																"name": "INDEX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "21032:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21041:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21032:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "21023:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21023:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "21023:21:1"
											},
											{
												"expression": {
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1494,
														"name": "INDEX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "21054:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1496,
																"name": "_INDEX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "21078:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1495,
															"name": "gonsForBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "21062:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21062:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21054:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "21054:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21103:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1487,
												"id": 1501,
												"nodeType": "Return",
												"src": "21096:11:1"
											}
										]
									},
									"functionSelector": "40a5737f",
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1484,
											"modifierName": {
												"id": 1483,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1220,
												"src": "20982:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20982:13:1"
										}
									],
									"name": "setIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "_INDEX",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "20959:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20959:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20957:15:1"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "21006:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21006:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21004:8:1"
									},
									"scope": 2021,
									"src": "20940:174:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1595,
										"nodeType": "Block",
										"src": "21375:772:1",
										"statements": [
											{
												"assignments": [
													1516
												],
												"declarations": [
													{
														"constant": false,
														"id": 1516,
														"mutability": "mutable",
														"name": "rebaseAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1595,
														"src": "21385:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1515,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21385:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1517,
												"nodeType": "VariableDeclarationStatement",
												"src": "21385:20:1"
											},
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "circulatingSupply_",
														"nodeType": "VariableDeclaration",
														"scope": 1595,
														"src": "21415:26:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21415:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1522,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1520,
														"name": "circulatingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "21444:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21444:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21415:48:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1523,
														"name": "profit_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "21479:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21490:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21479:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1543,
															"name": "circulatingSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "21668:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21689:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "21668:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1561,
														"nodeType": "Block",
														"src": "21791:47:1",
														"statements": [
															{
																"expression": {
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1557,
																		"name": "rebaseAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1516,
																		"src": "21805:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1558,
																		"name": "profit_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "21820:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "21805:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1560,
																"nodeType": "ExpressionStatement",
																"src": "21805:22:1"
															}
														]
													},
													"id": 1562,
													"nodeType": "IfStatement",
													"src": "21663:175:1",
													"trueBody": {
														"id": 1556,
														"nodeType": "Block",
														"src": "21692:93:1",
														"statements": [
															{
																"expression": {
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1546,
																		"name": "rebaseAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1516,
																		"src": "21706:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1552,
																				"name": "circulatingSupply_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1519,
																				"src": "21754:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1549,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 440,
																						"src": "21734:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1547,
																						"name": "profit_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1506,
																						"src": "21721:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 103,
																					"src": "21721:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21721:27:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 119,
																			"src": "21721:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21721:53:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "21706:68:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1555,
																"nodeType": "ExpressionStatement",
																"src": "21706:68:1"
															}
														]
													}
												},
												"id": 1563,
												"nodeType": "IfStatement",
												"src": "21474:364:1",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "21494:163:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1527,
																		"name": "epoch_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "21524:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1528,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "21532:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "21532:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1530,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 440,
																		"src": "21549:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1526,
																	"name": "LogSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "21513:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21513:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1532,
															"nodeType": "EmitStatement",
															"src": "21508:55:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1534,
																		"name": "epoch_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "21593:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21601:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1536,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1717,
																			"src": "21604:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21604:7:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1533,
																	"name": "LogRebase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "21582:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21582:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1539,
															"nodeType": "EmitStatement",
															"src": "21577:36:1"
														},
														{
															"expression": {
																"id": 1540,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "21634:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1514,
															"id": 1541,
															"nodeType": "Return",
															"src": "21627:19:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1564,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "21848:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1567,
																"name": "rebaseAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "21881:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1565,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "21863:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "21863:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21863:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21848:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "21848:47:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1571,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "21911:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1572,
														"name": "MAX_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "21926:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21911:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1579,
												"nodeType": "IfStatement",
												"src": "21906:83:1",
												"trueBody": {
													"id": 1578,
													"nodeType": "Block",
													"src": "21939:50:1",
													"statements": [
														{
															"expression": {
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1574,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "21953:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1575,
																	"name": "MAX_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "21968:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21953:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1577,
															"nodeType": "ExpressionStatement",
															"src": "21953:25:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1580,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "21999:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1583,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "22034:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1581,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "22018:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "22018:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22018:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21999:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "21999:49:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1588,
															"name": "circulatingSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "22073:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1589,
															"name": "profit_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "22093:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1590,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "22102:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1587,
														"name": "_storeRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "22059:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,uint256) returns (bool)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22059:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "22059:51:1"
											},
											{
												"expression": {
													"id": 1593,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 440,
													"src": "22128:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1594,
												"nodeType": "Return",
												"src": "22121:19:1"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "21120:153:1",
										"text": "@notice increases sOHM supply to increase staking balances relative to profit_\n@param profit_ uint256\n@return uint256"
									},
									"functionSelector": "058ecdb4",
									"id": 1596,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1511,
											"modifierName": {
												"id": 1510,
												"name": "onlyStakingContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1311,
												"src": "21333:19:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21333:21:1"
										}
									],
									"name": "rebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "profit_",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "21295:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21295:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "21312:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "21312:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21293:32:1"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "21365:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21365:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21363:11:1"
									},
									"scope": 2021,
									"src": "21278:869:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "22441:576:1",
										"statements": [
											{
												"assignments": [
													1609
												],
												"declarations": [
													{
														"constant": false,
														"id": 1609,
														"mutability": "mutable",
														"name": "rebasePercent",
														"nodeType": "VariableDeclaration",
														"scope": 1651,
														"src": "22451:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1608,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "22451:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1617,
												"initialValue": {
													"arguments": [
														{
															"id": 1615,
															"name": "previousCirculating_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "22497:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22485:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 1610,
																	"name": "profit_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "22472:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "22472:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22472:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "22472:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22472:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22451:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1622,
																	"name": "epoch_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "22574:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1623,
																	"name": "rebasePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "22602:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1624,
																	"name": "previousCirculating_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "22663:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1625,
																		"name": "circulatingSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "22715:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22715:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1627,
																	"name": "profit_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "22763:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1628,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1717,
																		"src": "22791:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22791:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1630,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "22832:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "22832:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1621,
																"name": "Rebase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "22544:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Rebase_$1350_storage_ptr_$",
																	"typeString": "type(struct sOlympus.Rebase storage pointer)"
																}
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"epoch",
																"rebase",
																"totalStakedBefore",
																"totalStakedAfter",
																"amountRebased",
																"index",
																"blockNumberOccured"
															],
															"nodeType": "FunctionCall",
															"src": "22544:311:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Rebase_$1350_memory_ptr",
																"typeString": "struct sOlympus.Rebase memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Rebase_$1350_memory_ptr",
																"typeString": "struct sOlympus.Rebase memory"
															}
														],
														"expression": {
															"id": 1618,
															"name": "rebases",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "22530:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Rebase_$1350_storage_$dyn_storage",
																"typeString": "struct sOlympus.Rebase storage ref[] storage ref"
															}
														},
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "22530:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Rebase_$1350_storage_$returns$__$",
															"typeString": "function (struct sOlympus.Rebase storage ref)"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22530:326:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1634,
												"nodeType": "ExpressionStatement",
												"src": "22530:326:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1636,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "22891:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1637,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "22899:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "22899:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1639,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "22916:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1635,
														"name": "LogSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "22880:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22880:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1641,
												"nodeType": "EmitStatement",
												"src": "22875:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1643,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "22956:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1644,
															"name": "rebasePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "22964:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1645,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "22979:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22979:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1642,
														"name": "LogRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "22945:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22945:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1648,
												"nodeType": "EmitStatement",
												"src": "22940:48:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23006:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1607,
												"id": 1650,
												"nodeType": "Return",
												"src": "22999:11:1"
											}
										]
									},
									"documentation": {
										"id": 1597,
										"nodeType": "StructuredDocumentation",
										"src": "22153:179:1",
										"text": "@notice emits event with data about rebase\n@param previousCirculating_ uint\n@param profit_ uint\n@param epoch_ uint\n@return bool"
									},
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_storeRebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "previousCirculating_",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "22360:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22360:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "profit_",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "22387:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22387:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "22401:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22401:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22358:56:1"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "22434:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22434:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22432:8:1"
									},
									"scope": 2021,
									"src": "22337:680:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										520
									],
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "23098:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1664,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "23140:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1660,
																"name": "_gonBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "23115:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1662,
															"indexExpression": {
																"id": 1661,
																"name": "who",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "23129:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23115:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "23115:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23115:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1666,
												"nodeType": "Return",
												"src": "23108:50:1"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1656,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23069:8:1"
									},
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "23043:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23043:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23041:15:1"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "23088:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23088:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23086:11:1"
									},
									"scope": 2021,
									"src": "23023:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "23239:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1677,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "23268:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "23256:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "23256:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23256:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1674,
												"id": 1679,
												"nodeType": "Return",
												"src": "23249:37:1"
											}
										]
									},
									"functionSelector": "1bd39674",
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gonsForBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "23196:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "23196:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23194:15:1"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "23232:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "23232:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23230:8:1"
									},
									"scope": 2021,
									"src": "23171:122:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "23365:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1690,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "23392:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1688,
															"name": "gons",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "23382:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "23382:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23382:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1687,
												"id": 1692,
												"nodeType": "Return",
												"src": "23375:35:1"
											}
										]
									},
									"functionSelector": "7965d56d",
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceForGons",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "gons",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "23324:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "23324:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23322:13:1"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "23358:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "23358:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23356:8:1"
									},
									"scope": 2021,
									"src": "23299:118:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "23523:72:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1702,
																	"name": "stakingContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1313,
																	"src": "23569:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1701,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1668
																],
																"referencedDeclaration": 1668,
																"src": "23558:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23558:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1699,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "23540:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 42,
														"src": "23540:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23540:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1698,
												"id": 1705,
												"nodeType": "Return",
												"src": "23533:55:1"
											}
										]
									},
									"functionSelector": "9358928b",
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "circulatingSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23491:2:1"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "23516:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "23516:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23514:8:1"
									},
									"scope": 2021,
									"src": "23465:130:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "23647:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1713,
															"name": "INDEX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "23680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1712,
														"name": "balanceForGons",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "23664:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23664:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1711,
												"id": 1715,
												"nodeType": "Return",
												"src": "23657:30:1"
											}
										]
									},
									"functionSelector": "2986c0e5",
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23615:2:1"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "23640:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "23640:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23638:8:1"
									},
									"scope": 2021,
									"src": "23601:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										541
									],
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "23778:280:1",
										"statements": [
											{
												"assignments": [
													1728
												],
												"declarations": [
													{
														"constant": false,
														"id": 1728,
														"mutability": "mutable",
														"name": "gonValue",
														"nodeType": "VariableDeclaration",
														"scope": 1767,
														"src": "23788:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1727,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23788:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1733,
												"initialValue": {
													"arguments": [
														{
															"id": 1731,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "23818:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1729,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "23807:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "23807:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23807:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23788:48:1"
											},
											{
												"expression": {
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1734,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "23846:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1737,
														"indexExpression": {
															"expression": {
																"id": 1735,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "23860:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23860:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23846:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1743,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "23907:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1738,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "23875:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1741,
																"indexExpression": {
																	"expression": {
																		"id": 1739,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "23889:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "23889:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "23875:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "23875:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23875:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23846:71:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1746,
												"nodeType": "ExpressionStatement",
												"src": "23846:71:1"
											},
											{
												"expression": {
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1747,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "23927:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1749,
														"indexExpression": {
															"id": 1748,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "23941:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23927:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1754,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "23972:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1750,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "23948:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1752,
																"indexExpression": {
																	"id": 1751,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "23962:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "23948:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "23948:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23948:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23927:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "23927:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1759,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "24007:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "24007:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1761,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "24019:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1762,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "24023:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1758,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "23997:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23997:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1764,
												"nodeType": "EmitStatement",
												"src": "23992:38:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24047:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1726,
												"id": 1766,
												"nodeType": "Return",
												"src": "24040:11:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1723,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23754:8:1"
									},
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "23719:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "23731:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23731:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23717:29:1"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "23772:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23772:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23771:6:1"
									},
									"scope": 2021,
									"src": "23700:358:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										559
									],
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "24159:58:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1778,
															"name": "_allowedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "24176:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1780,
														"indexExpression": {
															"id": 1779,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "24191:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "24176:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1782,
													"indexExpression": {
														"id": 1781,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "24201:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24176:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1777,
												"id": 1783,
												"nodeType": "Return",
												"src": "24169:41:1"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1774,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24130:8:1"
									},
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "24084:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24084:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "24100:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24100:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24082:35:1"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "24149:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24147:11:1"
									},
									"scope": 2021,
									"src": "24064:153:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										618
									],
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "24321:429:1",
										"statements": [
											{
												"expression": {
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1797,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "24330:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1801,
															"indexExpression": {
																"id": 1798,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "24345:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24330:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1802,
														"indexExpression": {
															"expression": {
																"id": 1799,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "24353:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "24353:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24330:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1810,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "24409:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1803,
																		"name": "_allowedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1396,
																		"src": "24368:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1805,
																	"indexExpression": {
																		"id": 1804,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1787,
																		"src": "24383:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "24368:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1808,
																"indexExpression": {
																	"expression": {
																		"id": 1806,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "24391:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "24391:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24368:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "24368:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24368:48:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24330:86:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "24330:86:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1815,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "24440:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1816,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "24446:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "24446:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1818,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1396,
																	"src": "24459:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1820,
																"indexExpression": {
																	"id": 1819,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "24474:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24459:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1823,
															"indexExpression": {
																"expression": {
																	"id": 1821,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "24482:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "24482:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24459:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1814,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "24430:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24430:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1825,
												"nodeType": "EmitStatement",
												"src": "24425:71:1"
											},
											{
												"assignments": [
													1827
												],
												"declarations": [
													{
														"constant": false,
														"id": 1827,
														"mutability": "mutable",
														"name": "gonValue",
														"nodeType": "VariableDeclaration",
														"scope": 1862,
														"src": "24507:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1826,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24507:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1831,
												"initialValue": {
													"arguments": [
														{
															"id": 1829,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "24542:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1828,
														"name": "gonsForBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "24526:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24526:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24507:42:1"
											},
											{
												"expression": {
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1832,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "24559:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1834,
														"indexExpression": {
															"id": 1833,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "24573:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24559:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1839,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "24606:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1835,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "24582:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1837,
																"indexExpression": {
																	"id": 1836,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "24595:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24582:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "24582:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24582:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24559:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "24559:57:1"
											},
											{
												"expression": {
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1843,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "24626:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1845,
														"indexExpression": {
															"id": 1844,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "24640:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24626:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1850,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "24669:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1846,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "24647:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1848,
																"indexExpression": {
																	"id": 1847,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1789,
																	"src": "24660:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24647:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "24647:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24647:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24626:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "24626:53:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1855,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "24704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1856,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "24710:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1857,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "24714:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1854,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "24694:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24694:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1859,
												"nodeType": "EmitStatement",
												"src": "24689:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24739:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1796,
												"id": 1861,
												"nodeType": "Return",
												"src": "24732:11:1"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1793,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24295:8:1"
									},
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "24246:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24246:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "24260:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24260:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "24272:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24272:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24244:43:1"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "24314:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24314:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24312:8:1"
									},
									"scope": 2021,
									"src": "24223:527:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										580
									],
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "24838:140:1",
										"statements": [
											{
												"expression": {
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1873,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "24849:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1877,
															"indexExpression": {
																"expression": {
																	"id": 1874,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "24864:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "24864:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24849:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1878,
														"indexExpression": {
															"id": 1876,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "24878:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24849:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1879,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "24890:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24849:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "24849:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1883,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "24921:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "24921:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1885,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "24933:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1886,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "24942:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1882,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "24911:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24911:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1888,
												"nodeType": "EmitStatement",
												"src": "24906:43:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24967:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1872,
												"id": 1890,
												"nodeType": "Return",
												"src": "24960:11:1"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1869,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24814:8:1"
									},
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "24774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24774:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "24791:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24772:34:1"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "24832:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1870,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24832:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24831:6:1"
									},
									"scope": 2021,
									"src": "24756:222:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										897
									],
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "25113:102:1",
										"statements": [
											{
												"expression": {
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1902,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "25123:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1905,
															"indexExpression": {
																"id": 1903,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "25137:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25123:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1906,
														"indexExpression": {
															"id": 1904,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "25144:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25123:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1907,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "25155:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25123:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "25123:37:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1911,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "25185:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1912,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "25192:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "25201:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1910,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "25175:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25175:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1915,
												"nodeType": "EmitStatement",
												"src": "25170:38:1"
											}
										]
									},
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1900,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25096:8:1"
									},
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "25039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "25054:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "25071:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25071:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25037:49:1"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25113:0:1"
									},
									"scope": 2021,
									"src": "25020:195:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										646
									],
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "25318:221:1",
										"statements": [
											{
												"expression": {
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1927,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "25328:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1931,
															"indexExpression": {
																"expression": {
																	"id": 1928,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "25343:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "25343:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25328:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1932,
														"indexExpression": {
															"id": 1930,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "25357:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25328:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1940,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "25413:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1933,
																		"name": "_allowedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1396,
																		"src": "25369:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1936,
																	"indexExpression": {
																		"expression": {
																			"id": 1934,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "25384:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "25384:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "25369:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1938,
																"indexExpression": {
																	"id": 1937,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1919,
																	"src": "25398:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25369:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "25369:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25369:56:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25328:97:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1943,
												"nodeType": "ExpressionStatement",
												"src": "25328:97:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1945,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "25450:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "25450:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1947,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "25462:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1948,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1396,
																	"src": "25471:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1951,
																"indexExpression": {
																	"expression": {
																		"id": 1949,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "25486:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "25486:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25471:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1953,
															"indexExpression": {
																"id": 1952,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "25500:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25471:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1944,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "25440:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25440:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1955,
												"nodeType": "EmitStatement",
												"src": "25435:76:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25528:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1926,
												"id": 1957,
												"nodeType": "Return",
												"src": "25521:11:1"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1923,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25294:8:1"
									},
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "25249:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25249:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "25266:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25266:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25247:39:1"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "25312:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1924,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25312:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25311:6:1"
									},
									"scope": 2021,
									"src": "25221:318:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										675
									],
									"body": {
										"id": 2019,
										"nodeType": "Block",
										"src": "25647:393:1",
										"statements": [
											{
												"assignments": [
													1970
												],
												"declarations": [
													{
														"constant": false,
														"id": 1970,
														"mutability": "mutable",
														"name": "oldValue",
														"nodeType": "VariableDeclaration",
														"scope": 2019,
														"src": "25657:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1969,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25657:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1977,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1971,
															"name": "_allowedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "25676:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1974,
														"indexExpression": {
															"expression": {
																"id": 1972,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "25691:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "25691:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "25676:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1976,
													"indexExpression": {
														"id": 1975,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "25705:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25676:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25657:57:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1978,
														"name": "subtractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "25728:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1979,
														"name": "oldValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "25747:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25728:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2003,
													"nodeType": "Block",
													"src": "25830:97:1",
													"statements": [
														{
															"expression": {
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1991,
																			"name": "_allowedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1396,
																			"src": "25844:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1995,
																		"indexExpression": {
																			"expression": {
																				"id": 1992,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "25859:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "25859:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "25844:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1996,
																	"indexExpression": {
																		"id": 1994,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1961,
																		"src": "25873:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "25844:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1999,
																			"name": "subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1963,
																			"src": "25899:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1997,
																			"name": "oldValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1970,
																			"src": "25885:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 42,
																		"src": "25885:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25885:31:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25844:72:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2002,
															"nodeType": "ExpressionStatement",
															"src": "25844:72:1"
														}
													]
												},
												"id": 2004,
												"nodeType": "IfStatement",
												"src": "25724:203:1",
												"trueBody": {
													"id": 1990,
													"nodeType": "Block",
													"src": "25757:67:1",
													"statements": [
														{
															"expression": {
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1981,
																			"name": "_allowedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1396,
																			"src": "25771:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1985,
																		"indexExpression": {
																			"expression": {
																				"id": 1982,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "25786:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "25786:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "25771:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1986,
																	"indexExpression": {
																		"id": 1984,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1961,
																		"src": "25800:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "25771:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25812:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "25771:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1989,
															"nodeType": "ExpressionStatement",
															"src": "25771:42:1"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2006,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "25951:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "25951:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2008,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "25963:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 2009,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1396,
																	"src": "25972:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 2012,
																"indexExpression": {
																	"expression": {
																		"id": 2010,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "25987:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "25987:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25972:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2014,
															"indexExpression": {
																"id": 2013,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1961,
																"src": "26001:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25972:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2005,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "25941:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25941:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2016,
												"nodeType": "EmitStatement",
												"src": "25936:76:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26029:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1968,
												"id": 2018,
												"nodeType": "Return",
												"src": "26022:11:1"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 2020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1965,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25623:8:1"
									},
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "25573:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25573:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "25590:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25590:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25571:44:1"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "25641:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25641:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25640:6:1"
									},
									"scope": 2021,
									"src": "25545:495:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2022,
							"src": "18764:7278:1"
						}
					],
					"src": "113:25929:1"
				},
				"id": 1
			}
		}
	}
}