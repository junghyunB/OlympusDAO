{
	"id": "9a585d7d19c0c5ddea697525cf00d2ea",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/gOHM.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2021-11-24\n*/\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\nimport \"./interfaces/IgOHM.sol\";\nimport \"./types/ERC20.sol\";\nimport \"./libraries/Address.sol\";\nimport \"./libraries/SafeMath.sol\";\nimport \"./interfaces/IsOHM.sol\";\ncontract gOHM is IgOHM, ERC20 {\n\n    /* ========== DEPENDENCIES ========== */\n\n    using Address for address;\n    using SafeMath for uint256;\n\n    /* ========== MODIFIERS ========== */\n\n    modifier onlyApproved() {\n        require(msg.sender == approved, \"Only approved\");\n        _;\n    }\n\n    /* ========== EVENTS ========== */\n\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /* ========== DATA STRUCTURES ========== */\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint256 fromBlock;\n        uint256 votes;\n    }\n\n    /* ========== STATE VARIABLES ========== */\n\n    IsOHM public sOHM;\n    address public approved; // minter\n    bool public migrated;\n\n    mapping(address => mapping(uint256 => Checkpoint)) public checkpoints;\n    mapping(address => uint256) public numCheckpoints;\n    mapping(address => address) public delegates;\n\n    /* ========== CONSTRUCTOR ========== */\n\n    constructor(address _migrator, address _sOHM)\n        ERC20(\"Governance OHM\", \"gOHM\", 18)\n    {\n        require(_migrator != address(0), \"Zero address: Migrator\");\n        approved = _migrator;\n        require(_sOHM != address(0), \"Zero address: sOHM\");\n        sOHM = IsOHM(_sOHM);\n    }\n\n    /* ========== MUTATIVE FUNCTIONS ========== */\n\n    /**\n     * @notice transfer mint rights from migrator to staking\n     * @notice can only be done once, at the time of contract migration\n     * @param _staking address\n     * @param _sOHM address\n     */\n    function migrate(address _staking, address _sOHM) external override onlyApproved {\n        require(!migrated, \"Migrated\");\n        migrated = true;\n\n        require(_staking != approved, \"Invalid argument\");\n        require(_staking != address(0), \"Zero address found\");\n        approved = _staking;\n\n        require(_sOHM != address(0), \"Zero address found\");\n        sOHM = IsOHM(_sOHM);\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) external {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n        @notice mint gOHM\n        @param _to address\n        @param _amount uint\n     */\n    function mint(address _to, uint256 _amount) external override onlyApproved {\n        _mint(_to, _amount);\n    }\n\n    /**\n        @notice burn gOHM\n        @param _from address\n        @param _amount uint\n     */\n    function burn(address _from, uint256 _amount) external override onlyApproved {\n        _burn(_from, _amount);\n    }\n\n    /* ========== VIEW FUNCTIONS ========== */\n\n    /**\n     * @notice pull index from sOHM token\n     */\n    function index() public view override returns (uint256) {\n        return sOHM.index();\n    }\n\n    /**\n        @notice converts gOHM amount to OHM\n        @param _amount uint\n        @return uint\n     */\n    function balanceFrom(uint256 _amount) public view override returns (uint256) {\n        return _amount.mul(index()).div(10**decimals());\n    }\n\n    /**\n        @notice converts OHM amount to gOHM\n        @param _amount uint\n        @return uint\n     */\n    function balanceTo(uint256 _amount) public view override returns (uint256) {\n        return _amount.mul(10**decimals()).div(index());\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint256) {\n        uint256 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint256 blockNumber) external view returns (uint256) {\n        require(blockNumber < block.number, \"gOHM::getPriorVotes: not yet determined\");\n\n        uint256 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint256 lower = 0;\n        uint256 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint256 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    /* ========== INTERNAL FUNCTIONS ========== */\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint256 delegatorBalance = _balances[delegator];\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(\n        address srcRep,\n        address dstRep,\n        uint256 amount\n    ) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint256 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount);\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint256 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount);\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        address delegatee,\n        uint256 nCheckpoints,\n        uint256 oldVotes,\n        uint256 newVotes\n    ) internal {\n        if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number) {\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n        } else {\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(block.number, newVotes);\n            numCheckpoints[delegatee] = nCheckpoints + 1;\n        }\n\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    /**\n        @notice Ensure delegation moves when token is transferred.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override {\n        _moveDelegates(delegates[from], delegates[to], amount);\n    }\n}"
			},
			"contracts/interfaces/IsOHM.sol": {
				"content": "// File: interfaces/IsOHM.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"./IERC20.sol\";\n\ninterface IsOHM is IERC20 {\n    function rebase( uint256 ohmProfit_, uint epoch_) external returns (uint256);\n\n    function circulatingSupply() external view returns (uint256);\n\n    function gonsForBalance( uint amount ) external view returns ( uint );\n\n    function balanceForGons( uint gons ) external view returns ( uint );\n\n    function index() external view returns ( uint );\n\n    function toG(uint amount) external view returns (uint);\n\n    function fromG(uint amount) external view returns (uint);\n\n     function changeDebt(\n        uint256 amount,\n        address debtor,\n        bool add\n    ) external;\n\n    function debtBalances(address _address) external view returns (uint256);\n}"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// File: libraries/SafeMath.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\n\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\nlibrary SafeMath {\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    // Only used in the  BondingCalculator.sol\n    function sqrrt(uint256 a) internal pure returns (uint c) {\n        if (a > 3) {\n            c = a;\n            uint b = add( div( a, 2), 1 );\n            while (b < c) {\n                c = b;\n                b = div( add( div( a, b ), b), 2 );\n            }\n        } else if (a != 0) {\n            c = 1;\n        }\n    }   \n\n    function percentageAmount( uint256 total_, uint8 percentage_ ) internal pure returns ( uint256 percentAmount_ ) {\n        return div( mul( total_, percentage_ ), 1000 );\n    }\n\n    /*\n     * Expects percentage to be trailed by 00,\n    */\n    function substractPercentage( uint256 total_, uint8 percentageToSub_ ) internal pure returns ( uint256 result_ ) {\n        return sub( total_, div( mul( total_, percentageToSub_ ), 1000 ) );\n    }\n\n    function percentageOfTotal( uint256 part_, uint256 total_ ) internal pure returns ( uint256 percent_ ) {\n        return div( mul(part_, 100) , total_ );\n    }\n\n    /**\n     * Taken from Hypersonic https://github.com/M2629/HyperSonic/blob/main/Math.sol\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n\n    function quadraticPricing( uint256 payment_, uint256 multiplier_ ) internal pure returns (uint256) {\n        return sqrrt( mul( multiplier_, payment_ ) );\n    }\n\n  function bondingCurve( uint256 supply_, uint256 multiplier_ ) internal pure returns (uint256) {\n      return mul( multiplier_, supply_ );\n  }\n}\n\n"
			},
			"contracts/libraries/Address.sol": {
				"content": "// File: libraries/Address.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\n\n// TODO(zx): replace with OZ implementation.\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    // function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n    //     require(address(this).balance >= value, \"Address: insufficient balance for call\");\n    //     return _functionCallWithValue(target, data, value, errorMessage);\n    // }\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n  /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n    function addressToString(address _address) internal pure returns(string memory) {\n        bytes32 _bytes = bytes32(uint256(_address));\n        bytes memory HEX = \"0123456789abcdef\";\n        bytes memory _addr = new bytes(42);\n\n        _addr[0] = '0';\n        _addr[1] = 'x';\n\n        for(uint256 i = 0; i < 20; i++) {\n            _addr[2+i*2] = HEX[uint8(_bytes[i + 12] >> 4)];\n            _addr[3+i*2] = HEX[uint8(_bytes[i + 12] & 0x0f)];\n        }\n\n        return string(_addr);\n\n    }\n}"
			},
			"contracts/types/ERC20.sol": {
				"content": "// File: types/ERC20.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"../interfaces/IERC20.sol\";\nimport \"../libraries/SafeMath.sol\";\n\n\n\nabstract contract ERC20 is IERC20 {\n\n  using SafeMath for uint256;\n\n  // TODO comment actual hash value.\n  bytes32 constant private ERC20TOKEN_ERC1820_INTERFACE_ID = keccak256( \"ERC20Token\" );\n    \n  // Present in ERC777\n  mapping (address => uint256) internal _balances;\n\n  // Present in ERC777\n  mapping (address => mapping (address => uint256)) internal _allowances;\n\n  // Present in ERC777\n  uint256 internal _totalSupply;\n\n  // Present in ERC777\n  string internal _name;\n    \n  // Present in ERC777\n  string internal _symbol;\n    \n  // Present in ERC777\n  uint8 internal _decimals;\n\n  /**\n   * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n   * a default value of 18.\n   *\n   * To select a different value for {decimals}, use {_setupDecimals}.\n   *\n   * All three of these values are immutable: they can only be set once during\n   * construction.\n   */\n  constructor (string memory name_, string memory symbol_, uint8 decimals_) {\n    _name = name_;\n    _symbol = symbol_;\n    _decimals = decimals_;\n  }\n\n  /**\n   * @dev Returns the name of the token.\n   */\n  // Present in ERC777\n  function name() public view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev Returns the symbol of the token, usually a shorter version of the\n   * name.\n   */\n  // Present in ERC777\n  function symbol() public view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n   * @dev Returns the number of decimals used to get its user representation.\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\n   * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n   *\n   * Tokens usually opt for a value of 18, imitating the relationship between\n   * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n   * called.\n   *\n   * NOTE: This information is only used for _display_ purposes: it in\n   * no way affects any of the arithmetic of the contract, including\n   * {IERC20-balanceOf} and {IERC20-transfer}.\n   */\n  // Present in ERC777\n  function decimals() public view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev See {IERC20-totalSupply}.\n   */\n  // Present in ERC777\n  function totalSupply() public view override returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {IERC20-balanceOf}.\n   */\n  // Present in ERC777\n  function balanceOf(address account) public view virtual override returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {IERC20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  // Overrideen in ERC777\n  // Confirm that this behavior changes \n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n    _transfer(msg.sender, recipient, amount);\n    return true;\n  }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    // Present in ERC777\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    // Present in ERC777\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    // Present in ERC777\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n    require(sender != address(0), \"ERC20: transfer from the zero address\");\n    require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n    _beforeTokenTransfer(sender, recipient, amount);\n\n    _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    // Present in ERC777\n    function _mint(address account_, uint256 ammount_) internal virtual {\n        require(account_ != address(0), \"ERC20: mint to the zero address\");\n        _beforeTokenTransfer(address( this ), account_, ammount_);\n        _totalSupply = _totalSupply.add(ammount_);\n        _balances[account_] = _balances[account_].add(ammount_);\n        emit Transfer(address( this ), account_, ammount_);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    // Present in ERC777\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    // Present in ERC777\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    // Considering deprication to reduce size of bytecode as changing _decimals to internal acheived the same functionality.\n    // function _setupDecimals(uint8 decimals_) internal {\n    //     _decimals = decimals_;\n    // }\n\n  /**\n   * @dev Hook that is called before any transfer of tokens. This includes\n   * minting and burning.\n   *\n   * Calling conditions:\n   *\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n   * will be to transferred to `to`.\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n   * - `from` and `to` are never both zero.\n   *\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n   */\n  // Present in ERC777\n  function _beforeTokenTransfer( address from_, address to_, uint256 amount_ ) internal virtual { }\n}"
			},
			"contracts/interfaces/IgOHM.sol": {
				"content": "// File: interfaces/IgOHM.sol\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"./IERC20.sol\";\n\n\n\n\ninterface IgOHM is IERC20 {\n  function mint(address _to, uint256 _amount) external;\n\n  function burn(address _from, uint256 _amount) external;\n\n  function index() external view returns (uint256);\n\n  function balanceFrom(uint256 _amount) external view returns (uint256);\n\n  function balanceTo(uint256 _amount) external view returns (uint256);\n\n  function migrate( address _staking, address _sOHM ) external;\n}\n\n"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\n// File: interfaces/IERC20.sol\n\n\npragma solidity ^0.7.5;\n\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/gOHM.sol": {
				"gOHM": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_migrator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_sOHM",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "approved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "balanceFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "balanceTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "fromBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staking",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_sOHM",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrated",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sOHM",
							"outputs": [
								{
									"internalType": "contract IsOHM",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceFrom(uint256)": {
								"params": {
									"_amount": "uint"
								},
								"returns": {
									"_0": "uint"
								}
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"balanceTo(uint256)": {
								"params": {
									"_amount": "uint"
								},
								"returns": {
									"_0": "uint"
								}
							},
							"burn(address,uint256)": {
								"params": {
									"_amount": "uint",
									"_from": "address"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"returns": {
									"_0": "The number of current votes for `account`"
								}
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"returns": {
									"_0": "The number of votes the account had as of the given block"
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"migrate(address,address)": {
								"params": {
									"_sOHM": "address",
									"_staking": "address"
								}
							},
							"mint(address,uint256)": {
								"params": {
									"_amount": "uint",
									"_to": "address"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/gOHM.sol\":300:7953  contract gOHM is IgOHM, ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/gOHM.sol\":1422:1710  constructor(address _migrator, address _sOHM)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/types/ERC20.sol\":1058:1206  constructor (string memory name_, string memory symbol_, uint8 decimals_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x476f7665726e616e6365204f484d000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x674f484d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/gOHM.sol\":1508:1510  18 */\n  0x12\n    /* \"contracts/types/ERC20.sol\":1146:1151  name_ */\n  dup3\n    /* \"contracts/types/ERC20.sol\":1138:1143  _name */\n  0x03\n    /* \"contracts/types/ERC20.sol\":1138:1151  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/types/ERC20.sol\":1167:1174  symbol_ */\n  dup2\n    /* \"contracts/types/ERC20.sol\":1157:1164  _symbol */\n  0x04\n    /* \"contracts/types/ERC20.sol\":1157:1174  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/types/ERC20.sol\":1192:1201  decimals_ */\n  dup1\n    /* \"contracts/types/ERC20.sol\":1180:1189  _decimals */\n  0x05\n  0x00\n    /* \"contracts/types/ERC20.sol\":1180:1201  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/types/ERC20.sol\":1058:1206  constructor (string memory name_, string memory symbol_, uint8 decimals_) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/gOHM.sol\":1555:1556  0 */\n  0x00\n    /* \"contracts/gOHM.sol\":1534:1557  _migrator != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/gOHM.sol\":1534:1543  _migrator */\n  dup3\n    /* \"contracts/gOHM.sol\":1534:1557  _migrator != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/gOHM.sol\":1526:1584  require(_migrator != address(0), \"Zero address: Migrator\") */\n  tag_10\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x16\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x5a65726f20616464726573733a204d69677261746f7200000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_10:\n    /* \"contracts/gOHM.sol\":1605:1614  _migrator */\n  dup2\n    /* \"contracts/gOHM.sol\":1594:1602  approved */\n  0x06\n  0x00\n    /* \"contracts/gOHM.sol\":1594:1614  approved = _migrator */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/gOHM.sol\":1649:1650  0 */\n  0x00\n    /* \"contracts/gOHM.sol\":1632:1651  _sOHM != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/gOHM.sol\":1632:1637  _sOHM */\n  dup2\n    /* \"contracts/gOHM.sol\":1632:1651  _sOHM != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/gOHM.sol\":1624:1674  require(_sOHM != address(0), \"Zero address: sOHM\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x12\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x5a65726f20616464726573733a20734f484d0000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/gOHM.sol\":1697:1702  _sOHM */\n  dup1\n    /* \"contracts/gOHM.sol\":1684:1688  sOHM */\n  0x05\n  0x01\n    /* \"contracts/gOHM.sol\":1684:1703  sOHM = IsOHM(_sOHM) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/gOHM.sol\":1422:1710  constructor(address _migrator, address _sOHM)... */\n  pop\n  pop\n    /* \"contracts/gOHM.sol\":300:7953  contract gOHM is IgOHM, ERC20 {... */\n  jump(tag_12)\ntag_7:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_14\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_13)\ntag_14:\n  dup3\n  0x1f\n  lt\n  tag_15\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_13)\ntag_15:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_13\n  jumpi\n  swap2\n  dup3\n  add\ntag_16:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_16)\ntag_17:\ntag_13:\n  pop\n  swap1\n  pop\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  pop\n  swap1\n  jump\t// out\ntag_19:\ntag_20:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_21\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_20)\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/gOHM.sol\":300:7953  contract gOHM is IgOHM, ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x587cde1e\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xa8248768\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xa8248768\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x587cde1e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x66a5236c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x782d6fe1\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x19d40b08\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x2c678c64\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x2c678c64\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x19d40b08\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2986c0e5\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0cdfebfa\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1068361f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x15079925\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_36:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_36)\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_39\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_39:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":3425:3589  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gOHM.sol\":1196:1265  mapping(address => mapping(uint256 => Checkpoint)) public checkpoints */\n    tag_5:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gOHM.sol\":1976:2371  function migrate(address _staking, address _sOHM) external override onlyApproved {... */\n    tag_6:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/gOHM.sol\":1107:1124  IsOHM public sOHM */\n    tag_7:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":2334:2426  function totalSupply() public view override returns (uint256) {... */\n    tag_8:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gOHM.sol\":1130:1153  address public approved */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":4081:4394  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gOHM.sol\":3161:3253  function index() public view override returns (uint256) {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gOHM.sol\":1169:1189  bool public migrated */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":2184:2259  function decimals() public view returns (uint8) {... */\n    tag_13:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":4789:5000  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_14:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gOHM.sol\":2718:2829  function mint(address _to, uint256 _amount) external override onlyApproved {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/gOHM.sol\":1326:1370  mapping(address => address) public delegates */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gOHM.sol\":2513:2615  function delegate(address delegatee) external {... */\n    tag_17:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/gOHM.sol\":3624:3763  function balanceTo(uint256 _amount) public view override returns (uint256) {... */\n    tag_18:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gOHM.sol\":1271:1320  mapping(address => uint256) public numCheckpoints */\n    tag_19:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":2499:2618  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_20:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gOHM.sol\":4600:5796  function getPriorVotes(address account, uint256 blockNumber) external view returns (uint256) {... */\n    tag_21:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":1487:1566  function symbol() public view returns (string memory) {... */\n    tag_22:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_90:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_92\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_90)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_93:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gOHM.sol\":2934:3049  function burn(address _from, uint256 _amount) external override onlyApproved {... */\n    tag_23:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"contracts/types/ERC20.sol\":5487:5749  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_24:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gOHM.sol\":3368:3509  function balanceFrom(uint256 _amount) public view override returns (uint256) {... */\n    tag_25:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":2870:3030  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_26:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gOHM.sol\":3957:4178  function getCurrentVotes(address account) external view returns (uint256) {... */\n    tag_27:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":3113:3262  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_28:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\n    tag_35:\n        /* \"contracts/types/ERC20.sol\":1323:1336  string memory */\n      0x60\n        /* \"contracts/types/ERC20.sol\":1351:1356  _name */\n      0x03\n        /* \"contracts/types/ERC20.sol\":1344:1356  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_113\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_114\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_113)\n    tag_114:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_115:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_115\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":1286:1361  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":3425:3589  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_42:\n        /* \"contracts/types/ERC20.sol\":3508:3512  bool */\n      0x00\n        /* \"contracts/types/ERC20.sol\":3524:3561  _approve(msg.sender, spender, amount) */\n      tag_117\n        /* \"contracts/types/ERC20.sol\":3533:3543  msg.sender */\n      caller\n        /* \"contracts/types/ERC20.sol\":3545:3552  spender */\n      dup5\n        /* \"contracts/types/ERC20.sol\":3554:3560  amount */\n      dup5\n        /* \"contracts/types/ERC20.sol\":3524:3532  _approve */\n      tag_118\n        /* \"contracts/types/ERC20.sol\":3524:3561  _approve(msg.sender, spender, amount) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/types/ERC20.sol\":3578:3582  true */\n      0x01\n        /* \"contracts/types/ERC20.sol\":3571:3582  return true */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":3425:3589  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":1196:1265  mapping(address => mapping(uint256 => Checkpoint)) public checkpoints */\n    tag_45:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/gOHM.sol\":1976:2371  function migrate(address _staking, address _sOHM) external override onlyApproved {... */\n    tag_48:\n        /* \"contracts/gOHM.sol\":546:554  approved */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":532:554  msg.sender == approved */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":532:542  msg.sender */\n      caller\n        /* \"contracts/gOHM.sol\":532:554  msg.sender == approved */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/gOHM.sol\":524:572  require(msg.sender == approved, \"Only approved\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f6e6c7920617070726f76656400000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/gOHM.sol\":2076:2084  migrated */\n      0x06\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/gOHM.sol\":2075:2084  !migrated */\n      iszero\n        /* \"contracts/gOHM.sol\":2067:2097  require(!migrated, \"Migrated\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4d69677261746564000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/gOHM.sol\":2118:2122  true */\n      0x01\n        /* \"contracts/gOHM.sol\":2107:2115  migrated */\n      0x06\n      0x14\n        /* \"contracts/gOHM.sol\":2107:2122  migrated = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/gOHM.sol\":2153:2161  approved */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":2141:2161  _staking != approved */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":2141:2149  _staking */\n      dup3\n        /* \"contracts/gOHM.sol\":2141:2161  _staking != approved */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/gOHM.sol\":2133:2182  require(_staking != approved, \"Invalid argument\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e76616c696420617267756d656e7400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/gOHM.sol\":2220:2221  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":2200:2222  _staking != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":2200:2208  _staking */\n      dup3\n        /* \"contracts/gOHM.sol\":2200:2222  _staking != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/gOHM.sol\":2192:2245  require(_staking != address(0), \"Zero address found\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5a65726f206164647265737320666f756e640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/gOHM.sol\":2266:2274  _staking */\n      dup2\n        /* \"contracts/gOHM.sol\":2255:2263  approved */\n      0x06\n      0x00\n        /* \"contracts/gOHM.sol\":2255:2274  approved = _staking */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/gOHM.sol\":2310:2311  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":2293:2312  _sOHM != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":2293:2298  _sOHM */\n      dup2\n        /* \"contracts/gOHM.sol\":2293:2312  _sOHM != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/gOHM.sol\":2285:2335  require(_sOHM != address(0), \"Zero address found\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5a65726f206164647265737320666f756e640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/gOHM.sol\":2358:2363  _sOHM */\n      dup1\n        /* \"contracts/gOHM.sol\":2345:2349  sOHM */\n      0x05\n      0x01\n        /* \"contracts/gOHM.sol\":2345:2364  sOHM = IsOHM(_sOHM) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/gOHM.sol\":1976:2371  function migrate(address _staking, address _sOHM) external override onlyApproved {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":1107:1124  IsOHM public sOHM */\n    tag_50:\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":2334:2426  function totalSupply() public view override returns (uint256) {... */\n    tag_52:\n        /* \"contracts/types/ERC20.sol\":2387:2394  uint256 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":2409:2421  _totalSupply */\n      sload(0x02)\n        /* \"contracts/types/ERC20.sol\":2402:2421  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":2334:2426  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gOHM.sol\":1130:1153  address public approved */\n    tag_54:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":4081:4394  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_57:\n        /* \"contracts/types/ERC20.sol\":4187:4191  bool */\n      0x00\n        /* \"contracts/types/ERC20.sol\":4203:4239  _transfer(sender, recipient, amount) */\n      tag_128\n        /* \"contracts/types/ERC20.sol\":4213:4219  sender */\n      dup5\n        /* \"contracts/types/ERC20.sol\":4221:4230  recipient */\n      dup5\n        /* \"contracts/types/ERC20.sol\":4232:4238  amount */\n      dup5\n        /* \"contracts/types/ERC20.sol\":4203:4212  _transfer */\n      tag_129\n        /* \"contracts/types/ERC20.sol\":4203:4239  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/types/ERC20.sol\":4249:4366  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_130\n        /* \"contracts/types/ERC20.sol\":4258:4264  sender */\n      dup5\n        /* \"contracts/types/ERC20.sol\":4266:4276  msg.sender */\n      caller\n        /* \"contracts/types/ERC20.sol\":4278:4365  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_131\n        /* \"contracts/types/ERC20.sol\":4314:4320  amount */\n      dup6\n        /* \"contracts/types/ERC20.sol\":4278:4365  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/types/ERC20.sol\":4278:4289  _allowances */\n      0x01\n        /* \"contracts/types/ERC20.sol\":4278:4297  _allowances[sender] */\n      0x00\n        /* \"contracts/types/ERC20.sol\":4290:4296  sender */\n      dup12\n        /* \"contracts/types/ERC20.sol\":4278:4297  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20.sol\":4278:4309  _allowances[sender][msg.sender] */\n      0x00\n        /* \"contracts/types/ERC20.sol\":4298:4308  msg.sender */\n      caller\n        /* \"contracts/types/ERC20.sol\":4278:4309  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/types/ERC20.sol\":4278:4313  _allowances[sender][msg.sender].sub */\n      tag_132\n      swap1\n        /* \"contracts/types/ERC20.sol\":4278:4365  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"contracts/types/ERC20.sol\":4249:4257  _approve */\n      tag_118\n        /* \"contracts/types/ERC20.sol\":4249:4366  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/types/ERC20.sol\":4383:4387  true */\n      0x01\n        /* \"contracts/types/ERC20.sol\":4376:4387  return true */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":4081:4394  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":3161:3253  function index() public view override returns (uint256) {... */\n    tag_59:\n        /* \"contracts/gOHM.sol\":3208:3215  uint256 */\n      0x00\n        /* \"contracts/gOHM.sol\":3234:3238  sOHM */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":3234:3244  sOHM.index */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2986c0e5\n        /* \"contracts/gOHM.sol\":3234:3246  sOHM.index() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/gOHM.sol\":3227:3246  return sOHM.index() */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":3161:3253  function index() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gOHM.sol\":1169:1189  bool public migrated */\n    tag_61:\n      0x06\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":2184:2259  function decimals() public view returns (uint8) {... */\n    tag_63:\n        /* \"contracts/types/ERC20.sol\":2225:2230  uint8 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":2245:2254  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/types/ERC20.sol\":2238:2254  return _decimals */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":2184:2259  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":4789:5000  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_66:\n        /* \"contracts/types/ERC20.sol\":4877:4881  bool */\n      0x00\n        /* \"contracts/types/ERC20.sol\":4893:4972  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_140\n        /* \"contracts/types/ERC20.sol\":4902:4912  msg.sender */\n      caller\n        /* \"contracts/types/ERC20.sol\":4914:4921  spender */\n      dup5\n        /* \"contracts/types/ERC20.sol\":4923:4971  _allowances[msg.sender][spender].add(addedValue) */\n      tag_141\n        /* \"contracts/types/ERC20.sol\":4960:4970  addedValue */\n      dup6\n        /* \"contracts/types/ERC20.sol\":4923:4934  _allowances */\n      0x01\n        /* \"contracts/types/ERC20.sol\":4923:4946  _allowances[msg.sender] */\n      0x00\n        /* \"contracts/types/ERC20.sol\":4935:4945  msg.sender */\n      caller\n        /* \"contracts/types/ERC20.sol\":4923:4946  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20.sol\":4923:4955  _allowances[msg.sender][spender] */\n      0x00\n        /* \"contracts/types/ERC20.sol\":4947:4954  spender */\n      dup10\n        /* \"contracts/types/ERC20.sol\":4923:4955  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/types/ERC20.sol\":4923:4959  _allowances[msg.sender][spender].add */\n      tag_142\n      swap1\n        /* \"contracts/types/ERC20.sol\":4923:4971  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"contracts/types/ERC20.sol\":4893:4901  _approve */\n      tag_118\n        /* \"contracts/types/ERC20.sol\":4893:4972  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/types/ERC20.sol\":4989:4993  true */\n      0x01\n        /* \"contracts/types/ERC20.sol\":4982:4993  return true */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":4789:5000  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":2718:2829  function mint(address _to, uint256 _amount) external override onlyApproved {... */\n    tag_69:\n        /* \"contracts/gOHM.sol\":546:554  approved */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":532:554  msg.sender == approved */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":532:542  msg.sender */\n      caller\n        /* \"contracts/gOHM.sol\":532:554  msg.sender == approved */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/gOHM.sol\":524:572  require(msg.sender == approved, \"Only approved\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f6e6c7920617070726f76656400000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"contracts/gOHM.sol\":2803:2822  _mint(_to, _amount) */\n      tag_146\n        /* \"contracts/gOHM.sol\":2809:2812  _to */\n      dup3\n        /* \"contracts/gOHM.sol\":2814:2821  _amount */\n      dup3\n        /* \"contracts/gOHM.sol\":2803:2808  _mint */\n      tag_147\n        /* \"contracts/gOHM.sol\":2803:2822  _mint(_to, _amount) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/gOHM.sol\":2718:2829  function mint(address _to, uint256 _amount) external override onlyApproved {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":1326:1370  mapping(address => address) public delegates */\n    tag_72:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/gOHM.sol\":2513:2615  function delegate(address delegatee) external {... */\n    tag_75:\n        /* \"contracts/gOHM.sol\":2576:2608  _delegate(msg.sender, delegatee) */\n      tag_149\n        /* \"contracts/gOHM.sol\":2586:2596  msg.sender */\n      caller\n        /* \"contracts/gOHM.sol\":2598:2607  delegatee */\n      dup3\n        /* \"contracts/gOHM.sol\":2576:2585  _delegate */\n      tag_150\n        /* \"contracts/gOHM.sol\":2576:2608  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/gOHM.sol\":2513:2615  function delegate(address delegatee) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":3624:3763  function balanceTo(uint256 _amount) public view override returns (uint256) {... */\n    tag_78:\n        /* \"contracts/gOHM.sol\":3690:3697  uint256 */\n      0x00\n        /* \"contracts/gOHM.sol\":3716:3756  _amount.mul(10**decimals()).div(index()) */\n      tag_152\n        /* \"contracts/gOHM.sol\":3748:3755  index() */\n      tag_153\n        /* \"contracts/gOHM.sol\":3748:3753  index */\n      tag_59\n        /* \"contracts/gOHM.sol\":3748:3755  index() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/gOHM.sol\":3716:3743  _amount.mul(10**decimals()) */\n      tag_154\n        /* \"contracts/gOHM.sol\":3732:3742  decimals() */\n      tag_155\n        /* \"contracts/gOHM.sol\":3732:3740  decimals */\n      tag_63\n        /* \"contracts/gOHM.sol\":3732:3742  decimals() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/gOHM.sol\":3728:3742  10**decimals() */\n      0xff\n      and\n        /* \"contracts/gOHM.sol\":3728:3730  10 */\n      0x0a\n        /* \"contracts/gOHM.sol\":3728:3742  10**decimals() */\n      exp\n        /* \"contracts/gOHM.sol\":3716:3723  _amount */\n      dup6\n        /* \"contracts/gOHM.sol\":3716:3727  _amount.mul */\n      tag_156\n      swap1\n        /* \"contracts/gOHM.sol\":3716:3743  _amount.mul(10**decimals()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/gOHM.sol\":3716:3747  _amount.mul(10**decimals()).div */\n      tag_157\n      swap1\n        /* \"contracts/gOHM.sol\":3716:3756  _amount.mul(10**decimals()).div(index()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"contracts/gOHM.sol\":3709:3756  return _amount.mul(10**decimals()).div(index()) */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":3624:3763  function balanceTo(uint256 _amount) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":1271:1320  mapping(address => uint256) public numCheckpoints */\n    tag_81:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":2499:2618  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_84:\n        /* \"contracts/types/ERC20.sol\":2573:2580  uint256 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":2595:2604  _balances */\n      dup1\n        /* \"contracts/types/ERC20.sol\":2595:2613  _balances[account] */\n      0x00\n        /* \"contracts/types/ERC20.sol\":2605:2612  account */\n      dup4\n        /* \"contracts/types/ERC20.sol\":2595:2613  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/types/ERC20.sol\":2588:2613  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":2499:2618  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":4600:5796  function getPriorVotes(address account, uint256 blockNumber) external view returns (uint256) {... */\n    tag_87:\n        /* \"contracts/gOHM.sol\":4684:4691  uint256 */\n      0x00\n        /* \"contracts/gOHM.sol\":4725:4737  block.number */\n      number\n        /* \"contracts/gOHM.sol\":4711:4722  blockNumber */\n      dup3\n        /* \"contracts/gOHM.sol\":4711:4737  blockNumber < block.number */\n      lt\n        /* \"contracts/gOHM.sol\":4703:4781  require(blockNumber < block.number, \"gOHM::getPriorVotes: not yet determined\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_af7c5741dc8cf648e56d5bf296014d9d34a36f052c1eefaa826779d4817e5e92\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/gOHM.sol\":4792:4812  uint256 nCheckpoints */\n      0x00\n        /* \"contracts/gOHM.sol\":4815:4829  numCheckpoints */\n      0x08\n        /* \"contracts/gOHM.sol\":4815:4838  numCheckpoints[account] */\n      0x00\n        /* \"contracts/gOHM.sol\":4830:4837  account */\n      dup6\n        /* \"contracts/gOHM.sol\":4815:4838  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/gOHM.sol\":4792:4838  uint256 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":4868:4869  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":4852:4864  nCheckpoints */\n      dup2\n        /* \"contracts/gOHM.sol\":4852:4869  nCheckpoints == 0 */\n      eq\n        /* \"contracts/gOHM.sol\":4848:4904  if (nCheckpoints == 0) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/gOHM.sol\":4892:4893  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":4885:4893  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_159)\n        /* \"contracts/gOHM.sol\":4848:4904  if (nCheckpoints == 0) {... */\n    tag_161:\n        /* \"contracts/gOHM.sol\":5013:5024  blockNumber */\n      dup3\n        /* \"contracts/gOHM.sol\":4961:4972  checkpoints */\n      0x07\n        /* \"contracts/gOHM.sol\":4961:4981  checkpoints[account] */\n      0x00\n        /* \"contracts/gOHM.sol\":4973:4980  account */\n      dup7\n        /* \"contracts/gOHM.sol\":4961:4981  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":4961:4999  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/gOHM.sol\":4997:4998  1 */\n      0x01\n        /* \"contracts/gOHM.sol\":4982:4994  nCheckpoints */\n      dup5\n        /* \"contracts/gOHM.sol\":4982:4998  nCheckpoints - 1 */\n      sub\n        /* \"contracts/gOHM.sol\":4961:4999  checkpoints[account][nCheckpoints - 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":4961:5009  checkpoints[account][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      sload\n        /* \"contracts/gOHM.sol\":4961:5024  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      gt\n        /* \"contracts/gOHM.sol\":4957:5102  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_162\n      jumpi\n        /* \"contracts/gOHM.sol\":5047:5058  checkpoints */\n      0x07\n        /* \"contracts/gOHM.sol\":5047:5067  checkpoints[account] */\n      0x00\n        /* \"contracts/gOHM.sol\":5059:5066  account */\n      dup6\n        /* \"contracts/gOHM.sol\":5047:5067  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":5047:5085  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/gOHM.sol\":5083:5084  1 */\n      0x01\n        /* \"contracts/gOHM.sol\":5068:5080  nCheckpoints */\n      dup4\n        /* \"contracts/gOHM.sol\":5068:5084  nCheckpoints - 1 */\n      sub\n        /* \"contracts/gOHM.sol\":5047:5085  checkpoints[account][nCheckpoints - 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":5047:5091  checkpoints[account][nCheckpoints - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/gOHM.sol\":5040:5091  return checkpoints[account][nCheckpoints - 1].votes */\n      swap2\n      pop\n      pop\n      jump(tag_159)\n        /* \"contracts/gOHM.sol\":4957:5102  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_162:\n        /* \"contracts/gOHM.sol\":5196:5207  blockNumber */\n      dup3\n        /* \"contracts/gOHM.sol\":5160:5171  checkpoints */\n      0x07\n        /* \"contracts/gOHM.sol\":5160:5180  checkpoints[account] */\n      0x00\n        /* \"contracts/gOHM.sol\":5172:5179  account */\n      dup7\n        /* \"contracts/gOHM.sol\":5160:5180  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":5160:5183  checkpoints[account][0] */\n      0x00\n        /* \"contracts/gOHM.sol\":5181:5182  0 */\n      dup1\n        /* \"contracts/gOHM.sol\":5160:5183  checkpoints[account][0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":5160:5193  checkpoints[account][0].fromBlock */\n      0x00\n      add\n      sload\n        /* \"contracts/gOHM.sol\":5160:5207  checkpoints[account][0].fromBlock > blockNumber */\n      gt\n        /* \"contracts/gOHM.sol\":5156:5242  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"contracts/gOHM.sol\":5230:5231  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":5223:5231  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_159)\n        /* \"contracts/gOHM.sol\":5156:5242  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_163:\n        /* \"contracts/gOHM.sol\":5252:5265  uint256 lower */\n      0x00\n        /* \"contracts/gOHM.sol\":5279:5292  uint256 upper */\n      dup1\n        /* \"contracts/gOHM.sol\":5310:5311  1 */\n      0x01\n        /* \"contracts/gOHM.sol\":5295:5307  nCheckpoints */\n      dup4\n        /* \"contracts/gOHM.sol\":5295:5311  nCheckpoints - 1 */\n      sub\n        /* \"contracts/gOHM.sol\":5279:5311  uint256 upper = nCheckpoints - 1 */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":5321:5740  while (upper > lower) {... */\n    tag_164:\n        /* \"contracts/gOHM.sol\":5336:5341  lower */\n      dup2\n        /* \"contracts/gOHM.sol\":5328:5333  upper */\n      dup2\n        /* \"contracts/gOHM.sol\":5328:5341  upper > lower */\n      gt\n        /* \"contracts/gOHM.sol\":5321:5740  while (upper > lower) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/gOHM.sol\":5357:5371  uint256 center */\n      0x00\n        /* \"contracts/gOHM.sol\":5400:5401  2 */\n      0x02\n        /* \"contracts/gOHM.sol\":5391:5396  lower */\n      dup4\n        /* \"contracts/gOHM.sol\":5383:5388  upper */\n      dup4\n        /* \"contracts/gOHM.sol\":5383:5396  upper - lower */\n      sub\n        /* \"contracts/gOHM.sol\":5382:5401  (upper - lower) / 2 */\n      dup2\n      tag_166\n      jumpi\n      invalid\n    tag_166:\n      div\n        /* \"contracts/gOHM.sol\":5374:5379  upper */\n      dup3\n        /* \"contracts/gOHM.sol\":5374:5401  upper - (upper - lower) / 2 */\n      sub\n        /* \"contracts/gOHM.sol\":5357:5401  uint256 center = upper - (upper - lower) / 2 */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":5442:5462  Checkpoint memory cp */\n      tag_167\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"contracts/gOHM.sol\":5465:5476  checkpoints */\n      0x07\n        /* \"contracts/gOHM.sol\":5465:5485  checkpoints[account] */\n      0x00\n        /* \"contracts/gOHM.sol\":5477:5484  account */\n      dup10\n        /* \"contracts/gOHM.sol\":5465:5485  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":5465:5493  checkpoints[account][center] */\n      0x00\n        /* \"contracts/gOHM.sol\":5486:5492  center */\n      dup4\n        /* \"contracts/gOHM.sol\":5465:5493  checkpoints[account][center] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":5442:5493  Checkpoint memory cp = checkpoints[account][center] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":5527:5538  blockNumber */\n      dup7\n        /* \"contracts/gOHM.sol\":5511:5513  cp */\n      dup2\n        /* \"contracts/gOHM.sol\":5511:5523  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"contracts/gOHM.sol\":5511:5538  cp.fromBlock == blockNumber */\n      eq\n        /* \"contracts/gOHM.sol\":5507:5730  if (cp.fromBlock == blockNumber) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"contracts/gOHM.sol\":5565:5567  cp */\n      dup1\n        /* \"contracts/gOHM.sol\":5565:5573  cp.votes */\n      0x20\n      add\n      mload\n        /* \"contracts/gOHM.sol\":5558:5573  return cp.votes */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_159)\n        /* \"contracts/gOHM.sol\":5507:5730  if (cp.fromBlock == blockNumber) {... */\n    tag_169:\n        /* \"contracts/gOHM.sol\":5613:5624  blockNumber */\n      dup7\n        /* \"contracts/gOHM.sol\":5598:5600  cp */\n      dup2\n        /* \"contracts/gOHM.sol\":5598:5610  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"contracts/gOHM.sol\":5598:5624  cp.fromBlock < blockNumber */\n      lt\n        /* \"contracts/gOHM.sol\":5594:5730  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"contracts/gOHM.sol\":5652:5658  center */\n      dup2\n        /* \"contracts/gOHM.sol\":5644:5658  lower = center */\n      swap4\n      pop\n        /* \"contracts/gOHM.sol\":5594:5730  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_172)\n    tag_171:\n        /* \"contracts/gOHM.sol\":5714:5715  1 */\n      0x01\n        /* \"contracts/gOHM.sol\":5705:5711  center */\n      dup3\n        /* \"contracts/gOHM.sol\":5705:5715  center - 1 */\n      sub\n        /* \"contracts/gOHM.sol\":5697:5715  upper = center - 1 */\n      swap3\n      pop\n        /* \"contracts/gOHM.sol\":5594:5730  if (cp.fromBlock < blockNumber) {... */\n    tag_172:\n        /* \"contracts/gOHM.sol\":5321:5740  while (upper > lower) {... */\n      pop\n      pop\n      jump(tag_164)\n    tag_165:\n        /* \"contracts/gOHM.sol\":5756:5767  checkpoints */\n      0x07\n        /* \"contracts/gOHM.sol\":5756:5776  checkpoints[account] */\n      0x00\n        /* \"contracts/gOHM.sol\":5768:5775  account */\n      dup8\n        /* \"contracts/gOHM.sol\":5756:5776  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":5756:5783  checkpoints[account][lower] */\n      0x00\n        /* \"contracts/gOHM.sol\":5777:5782  lower */\n      dup4\n        /* \"contracts/gOHM.sol\":5756:5783  checkpoints[account][lower] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":5756:5789  checkpoints[account][lower].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/gOHM.sol\":5749:5789  return checkpoints[account][lower].votes */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/gOHM.sol\":4600:5796  function getPriorVotes(address account, uint256 blockNumber) external view returns (uint256) {... */\n    tag_159:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":1487:1566  function symbol() public view returns (string memory) {... */\n    tag_89:\n        /* \"contracts/types/ERC20.sol\":1526:1539  string memory */\n      0x60\n        /* \"contracts/types/ERC20.sol\":1554:1561  _symbol */\n      0x04\n        /* \"contracts/types/ERC20.sol\":1547:1561  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_174\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_175\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_174)\n    tag_175:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_176:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_176\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":1487:1566  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gOHM.sol\":2934:3049  function burn(address _from, uint256 _amount) external override onlyApproved {... */\n    tag_96:\n        /* \"contracts/gOHM.sol\":546:554  approved */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":532:554  msg.sender == approved */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":532:542  msg.sender */\n      caller\n        /* \"contracts/gOHM.sol\":532:554  msg.sender == approved */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/gOHM.sol\":524:572  require(msg.sender == approved, \"Only approved\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f6e6c7920617070726f76656400000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/gOHM.sol\":3021:3042  _burn(_from, _amount) */\n      tag_180\n        /* \"contracts/gOHM.sol\":3027:3032  _from */\n      dup3\n        /* \"contracts/gOHM.sol\":3034:3041  _amount */\n      dup3\n        /* \"contracts/gOHM.sol\":3021:3026  _burn */\n      tag_181\n        /* \"contracts/gOHM.sol\":3021:3042  _burn(_from, _amount) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/gOHM.sol\":2934:3049  function burn(address _from, uint256 _amount) external override onlyApproved {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":5487:5749  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_99:\n        /* \"contracts/types/ERC20.sol\":5580:5584  bool */\n      0x00\n        /* \"contracts/types/ERC20.sol\":5596:5721  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_183\n        /* \"contracts/types/ERC20.sol\":5605:5615  msg.sender */\n      caller\n        /* \"contracts/types/ERC20.sol\":5617:5624  spender */\n      dup5\n        /* \"contracts/types/ERC20.sol\":5626:5720  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_184\n        /* \"contracts/types/ERC20.sol\":5663:5678  subtractedValue */\n      dup6\n        /* \"contracts/types/ERC20.sol\":5626:5720  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/types/ERC20.sol\":5626:5637  _allowances */\n      0x01\n        /* \"contracts/types/ERC20.sol\":5626:5649  _allowances[msg.sender] */\n      0x00\n        /* \"contracts/types/ERC20.sol\":5638:5648  msg.sender */\n      caller\n        /* \"contracts/types/ERC20.sol\":5626:5649  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20.sol\":5626:5658  _allowances[msg.sender][spender] */\n      0x00\n        /* \"contracts/types/ERC20.sol\":5650:5657  spender */\n      dup11\n        /* \"contracts/types/ERC20.sol\":5626:5658  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/types/ERC20.sol\":5626:5662  _allowances[msg.sender][spender].sub */\n      tag_132\n      swap1\n        /* \"contracts/types/ERC20.sol\":5626:5720  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"contracts/types/ERC20.sol\":5596:5604  _approve */\n      tag_118\n        /* \"contracts/types/ERC20.sol\":5596:5721  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/types/ERC20.sol\":5738:5742  true */\n      0x01\n        /* \"contracts/types/ERC20.sol\":5731:5742  return true */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":5487:5749  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":3368:3509  function balanceFrom(uint256 _amount) public view override returns (uint256) {... */\n    tag_102:\n        /* \"contracts/gOHM.sol\":3436:3443  uint256 */\n      0x00\n        /* \"contracts/gOHM.sol\":3462:3502  _amount.mul(index()).div(10**decimals()) */\n      tag_186\n        /* \"contracts/gOHM.sol\":3491:3501  decimals() */\n      tag_187\n        /* \"contracts/gOHM.sol\":3491:3499  decimals */\n      tag_63\n        /* \"contracts/gOHM.sol\":3491:3501  decimals() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/gOHM.sol\":3487:3501  10**decimals() */\n      0xff\n      and\n        /* \"contracts/gOHM.sol\":3487:3489  10 */\n      0x0a\n        /* \"contracts/gOHM.sol\":3487:3501  10**decimals() */\n      exp\n        /* \"contracts/gOHM.sol\":3462:3482  _amount.mul(index()) */\n      tag_188\n        /* \"contracts/gOHM.sol\":3474:3481  index() */\n      tag_189\n        /* \"contracts/gOHM.sol\":3474:3479  index */\n      tag_59\n        /* \"contracts/gOHM.sol\":3474:3481  index() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/gOHM.sol\":3462:3469  _amount */\n      dup6\n        /* \"contracts/gOHM.sol\":3462:3473  _amount.mul */\n      tag_156\n      swap1\n        /* \"contracts/gOHM.sol\":3462:3482  _amount.mul(index()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"contracts/gOHM.sol\":3462:3486  _amount.mul(index()).div */\n      tag_157\n      swap1\n        /* \"contracts/gOHM.sol\":3462:3502  _amount.mul(index()).div(10**decimals()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contracts/gOHM.sol\":3455:3502  return _amount.mul(index()).div(10**decimals()) */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":3368:3509  function balanceFrom(uint256 _amount) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":2870:3030  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_105:\n        /* \"contracts/types/ERC20.sol\":2956:2960  bool */\n      0x00\n        /* \"contracts/types/ERC20.sol\":2968:3008  _transfer(msg.sender, recipient, amount) */\n      tag_191\n        /* \"contracts/types/ERC20.sol\":2978:2988  msg.sender */\n      caller\n        /* \"contracts/types/ERC20.sol\":2990:2999  recipient */\n      dup5\n        /* \"contracts/types/ERC20.sol\":3001:3007  amount */\n      dup5\n        /* \"contracts/types/ERC20.sol\":2968:2977  _transfer */\n      tag_129\n        /* \"contracts/types/ERC20.sol\":2968:3008  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/types/ERC20.sol\":3021:3025  true */\n      0x01\n        /* \"contracts/types/ERC20.sol\":3014:3025  return true */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":2870:3030  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":3957:4178  function getCurrentVotes(address account) external view returns (uint256) {... */\n    tag_108:\n        /* \"contracts/gOHM.sol\":4022:4029  uint256 */\n      0x00\n        /* \"contracts/gOHM.sol\":4041:4061  uint256 nCheckpoints */\n      dup1\n        /* \"contracts/gOHM.sol\":4064:4078  numCheckpoints */\n      0x08\n        /* \"contracts/gOHM.sol\":4064:4087  numCheckpoints[account] */\n      0x00\n        /* \"contracts/gOHM.sol\":4079:4086  account */\n      dup5\n        /* \"contracts/gOHM.sol\":4064:4087  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/gOHM.sol\":4041:4087  uint256 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":4119:4120  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":4104:4116  nCheckpoints */\n      dup2\n        /* \"contracts/gOHM.sol\":4104:4120  nCheckpoints > 0 */\n      gt\n        /* \"contracts/gOHM.sol\":4104:4171  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_193\n      jumpi\n        /* \"contracts/gOHM.sol\":4170:4171  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":4104:4171  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_194)\n    tag_193:\n        /* \"contracts/gOHM.sol\":4123:4134  checkpoints */\n      0x07\n        /* \"contracts/gOHM.sol\":4123:4143  checkpoints[account] */\n      0x00\n        /* \"contracts/gOHM.sol\":4135:4142  account */\n      dup5\n        /* \"contracts/gOHM.sol\":4123:4143  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":4123:4161  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/gOHM.sol\":4159:4160  1 */\n      0x01\n        /* \"contracts/gOHM.sol\":4144:4156  nCheckpoints */\n      dup4\n        /* \"contracts/gOHM.sol\":4144:4160  nCheckpoints - 1 */\n      sub\n        /* \"contracts/gOHM.sol\":4123:4161  checkpoints[account][nCheckpoints - 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":4123:4167  checkpoints[account][nCheckpoints - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/gOHM.sol\":4104:4171  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_194:\n        /* \"contracts/gOHM.sol\":4097:4171  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/gOHM.sol\":3957:4178  function getCurrentVotes(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":3113:3262  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_111:\n        /* \"contracts/types/ERC20.sol\":3202:3209  uint256 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":3228:3239  _allowances */\n      0x01\n        /* \"contracts/types/ERC20.sol\":3228:3246  _allowances[owner] */\n      0x00\n        /* \"contracts/types/ERC20.sol\":3240:3245  owner */\n      dup5\n        /* \"contracts/types/ERC20.sol\":3228:3246  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20.sol\":3228:3255  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/types/ERC20.sol\":3247:3254  spender */\n      dup4\n        /* \"contracts/types/ERC20.sol\":3228:3255  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/types/ERC20.sol\":3221:3255  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/types/ERC20.sol\":3113:3262  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":8590:8930  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_118:\n        /* \"contracts/types/ERC20.sol\":8708:8709  0 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":8691:8710  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20.sol\":8691:8696  owner */\n      dup4\n        /* \"contracts/types/ERC20.sol\":8691:8710  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/types/ERC20.sol\":8683:8751  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contracts/types/ERC20.sol\":8788:8789  0 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":8769:8790  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20.sol\":8769:8776  spender */\n      dup3\n        /* \"contracts/types/ERC20.sol\":8769:8790  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/types/ERC20.sol\":8761:8829  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/types/ERC20.sol\":8870:8876  amount */\n      dup1\n        /* \"contracts/types/ERC20.sol\":8840:8851  _allowances */\n      0x01\n        /* \"contracts/types/ERC20.sol\":8840:8858  _allowances[owner] */\n      0x00\n        /* \"contracts/types/ERC20.sol\":8852:8857  owner */\n      dup6\n        /* \"contracts/types/ERC20.sol\":8840:8858  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20.sol\":8840:8867  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/types/ERC20.sol\":8859:8866  spender */\n      dup5\n        /* \"contracts/types/ERC20.sol\":8840:8867  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20.sol\":8840:8876  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/types/ERC20.sol\":8907:8914  spender */\n      dup2\n        /* \"contracts/types/ERC20.sol\":8891:8923  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20.sol\":8900:8905  owner */\n      dup4\n        /* \"contracts/types/ERC20.sol\":8891:8923  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/types/ERC20.sol\":8916:8922  amount */\n      dup4\n        /* \"contracts/types/ERC20.sol\":8891:8923  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/types/ERC20.sol\":8590:8930  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":6193:6697  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_129:\n        /* \"contracts/types/ERC20.sol\":6312:6313  0 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":6294:6314  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20.sol\":6294:6300  sender */\n      dup4\n        /* \"contracts/types/ERC20.sol\":6294:6314  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/types/ERC20.sol\":6286:6356  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/types/ERC20.sol\":6391:6392  0 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":6370:6393  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20.sol\":6370:6379  recipient */\n      dup3\n        /* \"contracts/types/ERC20.sol\":6370:6393  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/types/ERC20.sol\":6362:6433  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/types/ERC20.sol\":6440:6487  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_202\n        /* \"contracts/types/ERC20.sol\":6461:6467  sender */\n      dup4\n        /* \"contracts/types/ERC20.sol\":6469:6478  recipient */\n      dup4\n        /* \"contracts/types/ERC20.sol\":6480:6486  amount */\n      dup4\n        /* \"contracts/types/ERC20.sol\":6440:6460  _beforeTokenTransfer */\n      tag_203\n        /* \"contracts/types/ERC20.sol\":6440:6487  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/types/ERC20.sol\":6514:6585  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_204\n        /* \"contracts/types/ERC20.sol\":6536:6542  amount */\n      dup2\n        /* \"contracts/types/ERC20.sol\":6514:6585  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/types/ERC20.sol\":6514:6523  _balances */\n      0x00\n        /* \"contracts/types/ERC20.sol\":6514:6531  _balances[sender] */\n      dup1\n        /* \"contracts/types/ERC20.sol\":6524:6530  sender */\n      dup8\n        /* \"contracts/types/ERC20.sol\":6514:6531  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/types/ERC20.sol\":6514:6535  _balances[sender].sub */\n      tag_132\n      swap1\n        /* \"contracts/types/ERC20.sol\":6514:6585  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"contracts/types/ERC20.sol\":6494:6503  _balances */\n      0x00\n        /* \"contracts/types/ERC20.sol\":6494:6511  _balances[sender] */\n      dup1\n        /* \"contracts/types/ERC20.sol\":6504:6510  sender */\n      dup6\n        /* \"contracts/types/ERC20.sol\":6494:6511  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20.sol\":6494:6585  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/types/ERC20.sol\":6614:6646  _balances[recipient].add(amount) */\n      tag_205\n        /* \"contracts/types/ERC20.sol\":6639:6645  amount */\n      dup2\n        /* \"contracts/types/ERC20.sol\":6614:6623  _balances */\n      0x00\n        /* \"contracts/types/ERC20.sol\":6614:6634  _balances[recipient] */\n      dup1\n        /* \"contracts/types/ERC20.sol\":6624:6633  recipient */\n      dup6\n        /* \"contracts/types/ERC20.sol\":6614:6634  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/types/ERC20.sol\":6614:6638  _balances[recipient].add */\n      tag_142\n      swap1\n        /* \"contracts/types/ERC20.sol\":6614:6646  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"contracts/types/ERC20.sol\":6591:6600  _balances */\n      0x00\n        /* \"contracts/types/ERC20.sol\":6591:6611  _balances[recipient] */\n      dup1\n        /* \"contracts/types/ERC20.sol\":6601:6610  recipient */\n      dup5\n        /* \"contracts/types/ERC20.sol\":6591:6611  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20.sol\":6591:6646  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/types/ERC20.sol\":6674:6683  recipient */\n      dup2\n        /* \"contracts/types/ERC20.sol\":6657:6692  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20.sol\":6666:6672  sender */\n      dup4\n        /* \"contracts/types/ERC20.sol\":6657:6692  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/types/ERC20.sol\":6685:6691  amount */\n      dup4\n        /* \"contracts/types/ERC20.sol\":6657:6692  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/types/ERC20.sol\":6193:6697  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":521:708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_132:\n        /* \"contracts/libraries/SafeMath.sol\":607:614  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":639:640  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":634:635  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":634:640  b <= a */\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":642:654  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":626:655  require(b <= a, errorMessage) */\n      swap1\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_208:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_210\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_208)\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_211\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_211:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":665:674  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":681:682  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":677:678  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":677:682  a - b */\n      sub\n        /* \"contracts/libraries/SafeMath.sol\":665:682  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":700:701  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":693:701  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":521:708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":199:375  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_142:\n        /* \"contracts/libraries/SafeMath.sol\":257:264  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":276:285  uint256 c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":292:293  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":288:289  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":288:293  a + b */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":276:293  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":316:317  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":311:312  c */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":311:317  c >= a */\n      lt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":303:349  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/libraries/SafeMath.sol\":367:368  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":360:368  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":199:375  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":6993:7387  function _mint(address account_, uint256 ammount_) internal virtual {... */\n    tag_147:\n        /* \"contracts/types/ERC20.sol\":7099:7100  0 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":7079:7101  account_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20.sol\":7079:7087  account_ */\n      dup3\n        /* \"contracts/types/ERC20.sol\":7079:7101  account_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/types/ERC20.sol\":7071:7137  require(account_ != address(0), \"ERC20: mint to the zero address\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/types/ERC20.sol\":7147:7204  _beforeTokenTransfer(address( this ), account_, ammount_) */\n      tag_216\n        /* \"contracts/types/ERC20.sol\":7177:7181  this */\n      address\n        /* \"contracts/types/ERC20.sol\":7185:7193  account_ */\n      dup4\n        /* \"contracts/types/ERC20.sol\":7195:7203  ammount_ */\n      dup4\n        /* \"contracts/types/ERC20.sol\":7147:7167  _beforeTokenTransfer */\n      tag_203\n        /* \"contracts/types/ERC20.sol\":7147:7204  _beforeTokenTransfer(address( this ), account_, ammount_) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/types/ERC20.sol\":7229:7255  _totalSupply.add(ammount_) */\n      tag_217\n        /* \"contracts/types/ERC20.sol\":7246:7254  ammount_ */\n      dup2\n        /* \"contracts/types/ERC20.sol\":7229:7241  _totalSupply */\n      sload(0x02)\n        /* \"contracts/types/ERC20.sol\":7229:7245  _totalSupply.add */\n      tag_142\n      swap1\n        /* \"contracts/types/ERC20.sol\":7229:7255  _totalSupply.add(ammount_) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"contracts/types/ERC20.sol\":7214:7226  _totalSupply */\n      0x02\n        /* \"contracts/types/ERC20.sol\":7214:7255  _totalSupply = _totalSupply.add(ammount_) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/types/ERC20.sol\":7287:7320  _balances[account_].add(ammount_) */\n      tag_218\n        /* \"contracts/types/ERC20.sol\":7311:7319  ammount_ */\n      dup2\n        /* \"contracts/types/ERC20.sol\":7287:7296  _balances */\n      0x00\n        /* \"contracts/types/ERC20.sol\":7287:7306  _balances[account_] */\n      dup1\n        /* \"contracts/types/ERC20.sol\":7297:7305  account_ */\n      dup6\n        /* \"contracts/types/ERC20.sol\":7287:7306  _balances[account_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/types/ERC20.sol\":7287:7310  _balances[account_].add */\n      tag_142\n      swap1\n        /* \"contracts/types/ERC20.sol\":7287:7320  _balances[account_].add(ammount_) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"contracts/types/ERC20.sol\":7265:7274  _balances */\n      0x00\n        /* \"contracts/types/ERC20.sol\":7265:7284  _balances[account_] */\n      dup1\n        /* \"contracts/types/ERC20.sol\":7275:7283  account_ */\n      dup5\n        /* \"contracts/types/ERC20.sol\":7265:7284  _balances[account_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20.sol\":7265:7320  _balances[account_] = _balances[account_].add(ammount_) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/types/ERC20.sol\":7361:7369  account_ */\n      dup2\n        /* \"contracts/types/ERC20.sol\":7335:7380  Transfer(address( this ), account_, ammount_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20.sol\":7353:7357  this */\n      address\n        /* \"contracts/types/ERC20.sol\":7335:7380  Transfer(address( this ), account_, ammount_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/types/ERC20.sol\":7371:7379  ammount_ */\n      dup4\n        /* \"contracts/types/ERC20.sol\":7335:7380  Transfer(address( this ), account_, ammount_) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/types/ERC20.sol\":6993:7387  function _mint(address account_, uint256 ammount_) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":5854:6223  function _delegate(address delegator, address delegatee) internal {... */\n    tag_150:\n        /* \"contracts/gOHM.sol\":5930:5953  address currentDelegate */\n      0x00\n        /* \"contracts/gOHM.sol\":5956:5965  delegates */\n      0x09\n        /* \"contracts/gOHM.sol\":5956:5976  delegates[delegator] */\n      0x00\n        /* \"contracts/gOHM.sol\":5966:5975  delegator */\n      dup5\n        /* \"contracts/gOHM.sol\":5956:5976  delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":5930:5976  address currentDelegate = delegates[delegator] */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":5986:6010  uint256 delegatorBalance */\n      0x00\n        /* \"contracts/gOHM.sol\":6013:6022  _balances */\n      dup1\n        /* \"contracts/gOHM.sol\":6013:6033  _balances[delegator] */\n      0x00\n        /* \"contracts/gOHM.sol\":6023:6032  delegator */\n      dup6\n        /* \"contracts/gOHM.sol\":6013:6033  _balances[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/gOHM.sol\":5986:6033  uint256 delegatorBalance = _balances[delegator] */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":6066:6075  delegatee */\n      dup3\n        /* \"contracts/gOHM.sol\":6043:6052  delegates */\n      0x09\n        /* \"contracts/gOHM.sol\":6043:6063  delegates[delegator] */\n      0x00\n        /* \"contracts/gOHM.sol\":6053:6062  delegator */\n      dup7\n        /* \"contracts/gOHM.sol\":6043:6063  delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/gOHM.sol\":6043:6075  delegates[delegator] = delegatee */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/gOHM.sol\":6135:6144  delegatee */\n      dup3\n        /* \"contracts/gOHM.sol\":6091:6145  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":6118:6133  currentDelegate */\n      dup3\n        /* \"contracts/gOHM.sol\":6091:6145  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":6107:6116  delegator */\n      dup6\n        /* \"contracts/gOHM.sol\":6091:6145  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/gOHM.sol\":6156:6216  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_220\n        /* \"contracts/gOHM.sol\":6171:6186  currentDelegate */\n      dup3\n        /* \"contracts/gOHM.sol\":6188:6197  delegatee */\n      dup5\n        /* \"contracts/gOHM.sol\":6199:6215  delegatorBalance */\n      dup4\n        /* \"contracts/gOHM.sol\":6156:6170  _moveDelegates */\n      tag_221\n        /* \"contracts/gOHM.sol\":6156:6216  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/gOHM.sol\":5854:6223  function _delegate(address delegator, address delegatee) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":714:955  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_156:\n        /* \"contracts/libraries/SafeMath.sol\":772:779  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":800:801  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":795:796  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":795:801  a == 0 */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":791:836  if (a == 0) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"contracts/libraries/SafeMath.sol\":824:825  0 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":817:825  return 0 */\n      swap1\n      pop\n      jump(tag_222)\n        /* \"contracts/libraries/SafeMath.sol\":791:836  if (a == 0) {... */\n    tag_223:\n        /* \"contracts/libraries/SafeMath.sol\":846:855  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":862:863  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":858:859  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":858:863  a * b */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":846:863  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":890:891  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":885:886  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":881:882  c */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":881:886  c / a */\n      dup2\n      tag_224\n      jumpi\n      invalid\n    tag_224:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":881:891  c / a == b */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":873:929  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"contracts/libraries/SafeMath.sol\":947:948  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":940:948  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":714:955  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_222:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_157:\n        /* \"contracts/libraries/SafeMath.sol\":1019:1026  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      tag_227\n        /* \"contracts/libraries/SafeMath.sol\":1049:1050  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1052:1053  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1045:1048  div */\n      tag_228\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_227:\n        /* \"contracts/libraries/SafeMath.sol\":1038:1084  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/types/ERC20.sol\":7732:8142  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_181:\n        /* \"contracts/types/ERC20.sol\":7834:7835  0 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":7815:7836  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20.sol\":7815:7822  account */\n      dup3\n        /* \"contracts/types/ERC20.sol\":7815:7836  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/types/ERC20.sol\":7807:7874  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"contracts/types/ERC20.sol\":7885:7934  _beforeTokenTransfer(account, address(0), amount) */\n      tag_231\n        /* \"contracts/types/ERC20.sol\":7906:7913  account */\n      dup3\n        /* \"contracts/types/ERC20.sol\":7923:7924  0 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":7927:7933  amount */\n      dup4\n        /* \"contracts/types/ERC20.sol\":7885:7905  _beforeTokenTransfer */\n      tag_203\n        /* \"contracts/types/ERC20.sol\":7885:7934  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/types/ERC20.sol\":7966:8034  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_232\n        /* \"contracts/types/ERC20.sol\":7989:7995  amount */\n      dup2\n        /* \"contracts/types/ERC20.sol\":7966:8034  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n        /* \"contracts/types/ERC20.sol\":7966:7975  _balances */\n      0x00\n        /* \"contracts/types/ERC20.sol\":7966:7984  _balances[account] */\n      dup1\n        /* \"contracts/types/ERC20.sol\":7976:7983  account */\n      dup7\n        /* \"contracts/types/ERC20.sol\":7966:7984  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/types/ERC20.sol\":7966:7988  _balances[account].sub */\n      tag_132\n      swap1\n        /* \"contracts/types/ERC20.sol\":7966:8034  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"contracts/types/ERC20.sol\":7945:7954  _balances */\n      0x00\n        /* \"contracts/types/ERC20.sol\":7945:7963  _balances[account] */\n      dup1\n        /* \"contracts/types/ERC20.sol\":7955:7962  account */\n      dup5\n        /* \"contracts/types/ERC20.sol\":7945:7963  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/types/ERC20.sol\":7945:8034  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/types/ERC20.sol\":8059:8083  _totalSupply.sub(amount) */\n      tag_233\n        /* \"contracts/types/ERC20.sol\":8076:8082  amount */\n      dup2\n        /* \"contracts/types/ERC20.sol\":8059:8071  _totalSupply */\n      sload(0x02)\n        /* \"contracts/types/ERC20.sol\":8059:8075  _totalSupply.sub */\n      tag_234\n      swap1\n        /* \"contracts/types/ERC20.sol\":8059:8083  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/types/ERC20.sol\":8044:8056  _totalSupply */\n      0x02\n        /* \"contracts/types/ERC20.sol\":8044:8083  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/types/ERC20.sol\":8124:8125  0 */\n      0x00\n        /* \"contracts/types/ERC20.sol\":8098:8135  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/types/ERC20.sol\":8107:8114  account */\n      dup3\n        /* \"contracts/types/ERC20.sol\":8098:8135  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/types/ERC20.sol\":8128:8134  amount */\n      dup4\n        /* \"contracts/types/ERC20.sol\":8098:8135  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/types/ERC20.sol\":7732:8142  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":7760:7951  function _beforeTokenTransfer(... */\n    tag_203:\n        /* \"contracts/gOHM.sol\":7890:7944  _moveDelegates(delegates[from], delegates[to], amount) */\n      tag_236\n        /* \"contracts/gOHM.sol\":7905:7914  delegates */\n      0x09\n        /* \"contracts/gOHM.sol\":7905:7920  delegates[from] */\n      0x00\n        /* \"contracts/gOHM.sol\":7915:7919  from */\n      dup6\n        /* \"contracts/gOHM.sol\":7905:7920  delegates[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":7922:7931  delegates */\n      0x09\n        /* \"contracts/gOHM.sol\":7922:7935  delegates[to] */\n      0x00\n        /* \"contracts/gOHM.sol\":7932:7934  to */\n      dup6\n        /* \"contracts/gOHM.sol\":7922:7935  delegates[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":7937:7943  amount */\n      dup4\n        /* \"contracts/gOHM.sol\":7890:7904  _moveDelegates */\n      tag_221\n        /* \"contracts/gOHM.sol\":7890:7944  _moveDelegates(delegates[from], delegates[to], amount) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/gOHM.sol\":7760:7951  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":6229:7096  function _moveDelegates(... */\n    tag_221:\n        /* \"contracts/gOHM.sol\":6364:6370  dstRep */\n      dup2\n        /* \"contracts/gOHM.sol\":6354:6370  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":6354:6360  srcRep */\n      dup4\n        /* \"contracts/gOHM.sol\":6354:6370  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/gOHM.sol\":6354:6384  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_238\n      jumpi\n      pop\n        /* \"contracts/gOHM.sol\":6383:6384  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":6374:6380  amount */\n      dup2\n        /* \"contracts/gOHM.sol\":6374:6384  amount > 0 */\n      gt\n        /* \"contracts/gOHM.sol\":6354:6384  srcRep != dstRep && amount > 0 */\n    tag_238:\n        /* \"contracts/gOHM.sol\":6350:7090  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"contracts/gOHM.sol\":6422:6423  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":6404:6424  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":6404:6410  srcRep */\n      dup4\n        /* \"contracts/gOHM.sol\":6404:6424  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/gOHM.sol\":6400:6733  if (srcRep != address(0)) {... */\n      tag_240\n      jumpi\n        /* \"contracts/gOHM.sol\":6444:6461  uint256 srcRepNum */\n      0x00\n        /* \"contracts/gOHM.sol\":6464:6478  numCheckpoints */\n      0x08\n        /* \"contracts/gOHM.sol\":6464:6486  numCheckpoints[srcRep] */\n      0x00\n        /* \"contracts/gOHM.sol\":6479:6485  srcRep */\n      dup6\n        /* \"contracts/gOHM.sol\":6464:6486  numCheckpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/gOHM.sol\":6444:6486  uint256 srcRepNum = numCheckpoints[srcRep] */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":6504:6521  uint256 srcRepOld */\n      0x00\n        /* \"contracts/gOHM.sol\":6536:6537  0 */\n      dup1\n        /* \"contracts/gOHM.sol\":6524:6533  srcRepNum */\n      dup3\n        /* \"contracts/gOHM.sol\":6524:6537  srcRepNum > 0 */\n      gt\n        /* \"contracts/gOHM.sol\":6524:6584  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_241\n      jumpi\n        /* \"contracts/gOHM.sol\":6583:6584  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":6524:6584  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_242)\n    tag_241:\n        /* \"contracts/gOHM.sol\":6540:6551  checkpoints */\n      0x07\n        /* \"contracts/gOHM.sol\":6540:6559  checkpoints[srcRep] */\n      0x00\n        /* \"contracts/gOHM.sol\":6552:6558  srcRep */\n      dup7\n        /* \"contracts/gOHM.sol\":6540:6559  checkpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":6540:6574  checkpoints[srcRep][srcRepNum - 1] */\n      0x00\n        /* \"contracts/gOHM.sol\":6572:6573  1 */\n      0x01\n        /* \"contracts/gOHM.sol\":6560:6569  srcRepNum */\n      dup5\n        /* \"contracts/gOHM.sol\":6560:6573  srcRepNum - 1 */\n      sub\n        /* \"contracts/gOHM.sol\":6540:6574  checkpoints[srcRep][srcRepNum - 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":6540:6580  checkpoints[srcRep][srcRepNum - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/gOHM.sol\":6524:6584  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_242:\n        /* \"contracts/gOHM.sol\":6504:6584  uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":6602:6619  uint256 srcRepNew */\n      0x00\n        /* \"contracts/gOHM.sol\":6622:6643  srcRepOld.sub(amount) */\n      tag_243\n        /* \"contracts/gOHM.sol\":6636:6642  amount */\n      dup5\n        /* \"contracts/gOHM.sol\":6622:6631  srcRepOld */\n      dup4\n        /* \"contracts/gOHM.sol\":6622:6635  srcRepOld.sub */\n      tag_234\n      swap1\n        /* \"contracts/gOHM.sol\":6622:6643  srcRepOld.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"contracts/gOHM.sol\":6602:6643  uint256 srcRepNew = srcRepOld.sub(amount) */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":6661:6718  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_244\n        /* \"contracts/gOHM.sol\":6678:6684  srcRep */\n      dup7\n        /* \"contracts/gOHM.sol\":6686:6695  srcRepNum */\n      dup5\n        /* \"contracts/gOHM.sol\":6697:6706  srcRepOld */\n      dup5\n        /* \"contracts/gOHM.sol\":6708:6717  srcRepNew */\n      dup5\n        /* \"contracts/gOHM.sol\":6661:6677  _writeCheckpoint */\n      tag_245\n        /* \"contracts/gOHM.sol\":6661:6718  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/gOHM.sol\":6400:6733  if (srcRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_240:\n        /* \"contracts/gOHM.sol\":6769:6770  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":6751:6771  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gOHM.sol\":6751:6757  dstRep */\n      dup3\n        /* \"contracts/gOHM.sol\":6751:6771  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/gOHM.sol\":6747:7080  if (dstRep != address(0)) {... */\n      tag_246\n      jumpi\n        /* \"contracts/gOHM.sol\":6791:6808  uint256 dstRepNum */\n      0x00\n        /* \"contracts/gOHM.sol\":6811:6825  numCheckpoints */\n      0x08\n        /* \"contracts/gOHM.sol\":6811:6833  numCheckpoints[dstRep] */\n      0x00\n        /* \"contracts/gOHM.sol\":6826:6832  dstRep */\n      dup5\n        /* \"contracts/gOHM.sol\":6811:6833  numCheckpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/gOHM.sol\":6791:6833  uint256 dstRepNum = numCheckpoints[dstRep] */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":6851:6868  uint256 dstRepOld */\n      0x00\n        /* \"contracts/gOHM.sol\":6883:6884  0 */\n      dup1\n        /* \"contracts/gOHM.sol\":6871:6880  dstRepNum */\n      dup3\n        /* \"contracts/gOHM.sol\":6871:6884  dstRepNum > 0 */\n      gt\n        /* \"contracts/gOHM.sol\":6871:6931  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_247\n      jumpi\n        /* \"contracts/gOHM.sol\":6930:6931  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":6871:6931  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_248)\n    tag_247:\n        /* \"contracts/gOHM.sol\":6887:6898  checkpoints */\n      0x07\n        /* \"contracts/gOHM.sol\":6887:6906  checkpoints[dstRep] */\n      0x00\n        /* \"contracts/gOHM.sol\":6899:6905  dstRep */\n      dup6\n        /* \"contracts/gOHM.sol\":6887:6906  checkpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":6887:6921  checkpoints[dstRep][dstRepNum - 1] */\n      0x00\n        /* \"contracts/gOHM.sol\":6919:6920  1 */\n      0x01\n        /* \"contracts/gOHM.sol\":6907:6916  dstRepNum */\n      dup5\n        /* \"contracts/gOHM.sol\":6907:6920  dstRepNum - 1 */\n      sub\n        /* \"contracts/gOHM.sol\":6887:6921  checkpoints[dstRep][dstRepNum - 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":6887:6927  checkpoints[dstRep][dstRepNum - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/gOHM.sol\":6871:6931  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_248:\n        /* \"contracts/gOHM.sol\":6851:6931  uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":6949:6966  uint256 dstRepNew */\n      0x00\n        /* \"contracts/gOHM.sol\":6969:6990  dstRepOld.add(amount) */\n      tag_249\n        /* \"contracts/gOHM.sol\":6983:6989  amount */\n      dup5\n        /* \"contracts/gOHM.sol\":6969:6978  dstRepOld */\n      dup4\n        /* \"contracts/gOHM.sol\":6969:6982  dstRepOld.add */\n      tag_142\n      swap1\n        /* \"contracts/gOHM.sol\":6969:6990  dstRepOld.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"contracts/gOHM.sol\":6949:6990  uint256 dstRepNew = dstRepOld.add(amount) */\n      swap1\n      pop\n        /* \"contracts/gOHM.sol\":7008:7065  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_250\n        /* \"contracts/gOHM.sol\":7025:7031  dstRep */\n      dup6\n        /* \"contracts/gOHM.sol\":7033:7042  dstRepNum */\n      dup5\n        /* \"contracts/gOHM.sol\":7044:7053  dstRepOld */\n      dup5\n        /* \"contracts/gOHM.sol\":7055:7064  dstRepNew */\n      dup5\n        /* \"contracts/gOHM.sol\":7008:7024  _writeCheckpoint */\n      tag_245\n        /* \"contracts/gOHM.sol\":7008:7065  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n    tag_250:\n        /* \"contracts/gOHM.sol\":6747:7080  if (dstRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_246:\n        /* \"contracts/gOHM.sol\":6350:7090  if (srcRep != dstRep && amount > 0) {... */\n    tag_239:\n        /* \"contracts/gOHM.sol\":6229:7096  function _moveDelegates(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_228:\n        /* \"contracts/libraries/SafeMath.sol\":1183:1190  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1214:1215  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":1210:1211  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1210:1215  b > 0 */\n      gt\n        /* \"contracts/libraries/SafeMath.sol\":1217:1229  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":1202:1230  require(b > 0, errorMessage) */\n      swap1\n      tag_252\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_253:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_255\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_253)\n    tag_255:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_256\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_256:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_252:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1240:1249  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1256:1257  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1252:1253  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1252:1257  a / b */\n      dup2\n      tag_257\n      jumpi\n      invalid\n    tag_257:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":1240:1257  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1291:1292  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1287:1288  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1287:1292  a % b */\n      dup2\n      tag_258\n      jumpi\n      invalid\n    tag_258:\n      mod\n        /* \"contracts/libraries/SafeMath.sol\":1283:1284  c */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":1279:1280  b */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1279:1284  b * c */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":1279:1292  b * c + a % b */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":1274:1275  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1274:1292  a == b * c + a % b */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":1267:1293  assert(a == b * c + a % b) */\n      tag_259\n      jumpi\n      invalid\n    tag_259:\n        /* \"contracts/libraries/SafeMath.sol\":1358:1359  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":1351:1359  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":381:515  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_234:\n        /* \"contracts/libraries/SafeMath.sol\":439:446  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_261\n        /* \"contracts/libraries/SafeMath.sol\":469:470  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":472:473  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":465:468  sub */\n      tag_132\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_261:\n        /* \"contracts/libraries/SafeMath.sol\":458:508  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":381:515  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gOHM.sol\":7102:7671  function _writeCheckpoint(... */\n    tag_245:\n        /* \"contracts/gOHM.sol\":7281:7282  0 */\n      0x00\n        /* \"contracts/gOHM.sol\":7266:7278  nCheckpoints */\n      dup4\n        /* \"contracts/gOHM.sol\":7266:7282  nCheckpoints > 0 */\n      gt\n        /* \"contracts/gOHM.sol\":7266:7352  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number */\n      dup1\n      iszero\n      tag_263\n      jumpi\n      pop\n        /* \"contracts/gOHM.sol\":7340:7352  block.number */\n      number\n        /* \"contracts/gOHM.sol\":7286:7297  checkpoints */\n      0x07\n        /* \"contracts/gOHM.sol\":7286:7308  checkpoints[delegatee] */\n      0x00\n        /* \"contracts/gOHM.sol\":7298:7307  delegatee */\n      dup7\n        /* \"contracts/gOHM.sol\":7286:7308  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":7286:7326  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/gOHM.sol\":7324:7325  1 */\n      0x01\n        /* \"contracts/gOHM.sol\":7309:7321  nCheckpoints */\n      dup7\n        /* \"contracts/gOHM.sol\":7309:7325  nCheckpoints - 1 */\n      sub\n        /* \"contracts/gOHM.sol\":7286:7326  checkpoints[delegatee][nCheckpoints - 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":7286:7336  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      sload\n        /* \"contracts/gOHM.sol\":7286:7352  checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number */\n      eq\n        /* \"contracts/gOHM.sol\":7266:7352  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number */\n    tag_263:\n        /* \"contracts/gOHM.sol\":7262:7598  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"contracts/gOHM.sol\":7417:7425  newVotes */\n      dup1\n        /* \"contracts/gOHM.sol\":7368:7379  checkpoints */\n      0x07\n        /* \"contracts/gOHM.sol\":7368:7390  checkpoints[delegatee] */\n      0x00\n        /* \"contracts/gOHM.sol\":7380:7389  delegatee */\n      dup7\n        /* \"contracts/gOHM.sol\":7368:7390  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":7368:7408  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/gOHM.sol\":7406:7407  1 */\n      0x01\n        /* \"contracts/gOHM.sol\":7391:7403  nCheckpoints */\n      dup7\n        /* \"contracts/gOHM.sol\":7391:7407  nCheckpoints - 1 */\n      sub\n        /* \"contracts/gOHM.sol\":7368:7408  checkpoints[delegatee][nCheckpoints - 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":7368:7414  checkpoints[delegatee][nCheckpoints - 1].votes */\n      0x01\n      add\n        /* \"contracts/gOHM.sol\":7368:7425  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/gOHM.sol\":7262:7598  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number) {... */\n      jump(tag_265)\n    tag_264:\n        /* \"contracts/gOHM.sol\":7495:7529  Checkpoint(block.number, newVotes) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/gOHM.sol\":7506:7518  block.number */\n      number\n        /* \"contracts/gOHM.sol\":7495:7529  Checkpoint(block.number, newVotes) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/gOHM.sol\":7520:7528  newVotes */\n      dup3\n        /* \"contracts/gOHM.sol\":7495:7529  Checkpoint(block.number, newVotes) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/gOHM.sol\":7456:7467  checkpoints */\n      0x07\n        /* \"contracts/gOHM.sol\":7456:7478  checkpoints[delegatee] */\n      0x00\n        /* \"contracts/gOHM.sol\":7468:7477  delegatee */\n      dup7\n        /* \"contracts/gOHM.sol\":7456:7478  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":7456:7492  checkpoints[delegatee][nCheckpoints] */\n      0x00\n        /* \"contracts/gOHM.sol\":7479:7491  nCheckpoints */\n      dup6\n        /* \"contracts/gOHM.sol\":7456:7492  checkpoints[delegatee][nCheckpoints] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":7456:7529  checkpoints[delegatee][nCheckpoints] = Checkpoint(block.number, newVotes) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/gOHM.sol\":7586:7587  1 */\n      0x01\n        /* \"contracts/gOHM.sol\":7571:7583  nCheckpoints */\n      dup4\n        /* \"contracts/gOHM.sol\":7571:7587  nCheckpoints + 1 */\n      add\n        /* \"contracts/gOHM.sol\":7543:7557  numCheckpoints */\n      0x08\n        /* \"contracts/gOHM.sol\":7543:7568  numCheckpoints[delegatee] */\n      0x00\n        /* \"contracts/gOHM.sol\":7558:7567  delegatee */\n      dup7\n        /* \"contracts/gOHM.sol\":7543:7568  numCheckpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gOHM.sol\":7543:7587  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/gOHM.sol\":7262:7598  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number) {... */\n    tag_265:\n        /* \"contracts/gOHM.sol\":7634:7643  delegatee */\n      dup4\n        /* \"contracts/gOHM.sol\":7613:7664  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n        /* \"contracts/gOHM.sol\":7645:7653  oldVotes */\n      dup4\n        /* \"contracts/gOHM.sol\":7655:7663  newVotes */\n      dup4\n        /* \"contracts/gOHM.sol\":7613:7664  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/gOHM.sol\":7102:7671  function _writeCheckpoint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_168:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_af7c5741dc8cf648e56d5bf296014d9d34a36f052c1eefaa826779d4817e5e92 674f484d3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122022f7822aae2067dce77357444cbf7e5922299803da0c8b9d5d38cb6de74a985864736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620031cb380380620031cb833981810160405260408110156200003757600080fd5b8101908080519060200190929190805190602001909291905050506040518060400160405280600e81526020017f476f7665726e616e6365204f484d0000000000000000000000000000000000008152506040518060400160405280600481526020017f674f484d0000000000000000000000000000000000000000000000000000000081525060128260039080519060200190620000d8929190620002e2565b508160049080519060200190620000f1929190620002e2565b5080600560006101000a81548160ff021916908360ff160217905550505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f5a65726f20616464726573733a204d69677261746f720000000000000000000081525060200191505060405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000299576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5a65726f20616464726573733a20734f484d000000000000000000000000000081525060200191505060405180910390fd5b80600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000398565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200031a576000855562000366565b82601f106200033557805160ff191683800117855562000366565b8280016001018555821562000366579182015b828111156200036557825182559160200191906001019062000348565b5b50905062000375919062000379565b5090565b5b80821115620003945760008160009055506001016200037a565b5090565b612e2380620003a86000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063587cde1e116100de57806395d89b4111610097578063a824876811610071578063a82487681461089d578063a9059cbb146108df578063b4b5ea5714610943578063dd62ed3e1461099b5761018e565b806395d89b41146107685780639dc29fac146107eb578063a457c2d7146108395761018e565b8063587cde1e146105625780635c19a95c146105d057806366a5236c146106145780636fcfff451461065657806370a08231146106ae578063782d6fe1146107065761018e565b806319d40b081161014b5780632c678c64116101255780632c678c641461046f578063313ce5671461048f57806339509351146104b057806340c10f19146105145761018e565b806319d40b081461039957806323b872dd146103cd5780632986c0e5146104515761018e565b806306fdde0314610193578063095ea7b3146102165780630cdfebfa1461027a5780631068361f146102e3578063150799251461034757806318160ddd1461037b575b600080fd5b61019b610a13565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101db5780820151818401526020810190506101c0565b50505050905090810190601f1680156102085780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102626004803603604081101561022c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ab5565b60405180821515815260200191505060405180910390f35b6102c66004803603604081101561029057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610acc565b604051808381526020018281526020019250505060405180910390f35b610345600480360360408110156102f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610afd565b005b61034f610eee565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610383610f14565b6040518082815260200191505060405180910390f35b6103a1610f1e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610439600480360360608110156103e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f44565b60405180821515815260200191505060405180910390f35b61045961100f565b6040518082815260200191505060405180910390f35b6104776110b9565b60405180821515815260200191505060405180910390f35b6104976110cc565b604051808260ff16815260200191505060405180910390f35b6104fc600480360360408110156104c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110e3565b60405180821515815260200191505060405180910390f35b6105606004803603604081101561052a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611188565b005b6105a46004803603602081101561057857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611259565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610612600480360360208110156105e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061128c565b005b6106406004803603602081101561062a57600080fd5b8101908080359060200190929190505050611299565b6040518082815260200191505060405180910390f35b6106986004803603602081101561066c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112db565b6040518082815260200191505060405180910390f35b6106f0600480360360208110156106c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112f3565b6040518082815260200191505060405180910390f35b6107526004803603604081101561071c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061133b565b6040518082815260200191505060405180910390f35b61077061164a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107b0578082015181840152602081019050610795565b50505050905090810190601f1680156107dd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108376004803603604081101561080157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116ec565b005b6108856004803603604081101561084f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117bd565b60405180821515815260200191505060405180910390f35b6108c9600480360360208110156108b357600080fd5b810190808035906020019092919050505061187c565b6040518082815260200191505060405180910390f35b61092b600480360360408110156108f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118be565b60405180821515815260200191505060405180910390f35b6109856004803603602081101561095957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118d5565b6040518082815260200191505060405180910390f35b6109fd600480360360408110156109b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611989565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aab5780601f10610a8057610100808354040283529160200191610aab565b820191906000526020600020905b815481529060010190602001808311610a8e57829003601f168201915b5050505050905090565b6000610ac2338484611a10565b6001905092915050565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4f6e6c7920617070726f7665640000000000000000000000000000000000000081525060200191505060405180910390fd5b600660149054906101000a900460ff1615610c43576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f4d6967726174656400000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600660146101000a81548160ff021916908315150217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d22576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420617267756d656e740000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dc5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5a65726f206164647265737320666f756e64000000000000000000000000000081525060200191505060405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ea9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5a65726f206164647265737320666f756e64000000000000000000000000000081525060200191505060405180910390fd5b80600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610f51848484611c07565b6110048433610fff85604051806060016040528060288152602001612d1060289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ec89092919063ffffffff16565b611a10565b600190509392505050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632986c0e56040518163ffffffff1660e01b815260040160206040518083038186803b15801561107957600080fd5b505afa15801561108d573d6000803e3d6000fd5b505050506040513d60208110156110a357600080fd5b8101908080519060200190929190505050905090565b600660149054906101000a900460ff1681565b6000600560009054906101000a900460ff16905090565b600061117e338461117985600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8890919063ffffffff16565b611a10565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461124b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4f6e6c7920617070726f7665640000000000000000000000000000000000000081525060200191505060405180910390fd5b6112558282612010565b5050565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61129633826121d5565b50565b60006112d46112a661100f565b6112c66112b16110cc565b60ff16600a0a8561237c90919063ffffffff16565b61240290919063ffffffff16565b9050919050565b60086020528060005260406000206000915090505481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000438210611395576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612d386027913960400191505060405180910390fd5b6000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114156113ec576000915050611644565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018403815260200190815260200160002060000154116114a857600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018303815260200190815260200160002060010154915050611644565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080815260200190815260200160002060000154111561150d576000915050611644565b6000806001830390505b818111156115ea57600060028383038161152d57fe5b048203905061153a612c47565b600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905086816000015114156115c857806020015195505050505050611644565b86816000015110156115dc578193506115e3565b6001820392505b5050611517565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206001015493505050505b92915050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116e25780601f106116b7576101008083540402835291602001916116e2565b820191906000526020600020905b8154815290600101906020018083116116c557829003601f168201915b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4f6e6c7920617070726f7665640000000000000000000000000000000000000081525060200191505060405180910390fd5b6117b9828261244c565b5050565b6000611872338461186d85604051806060016040528060258152602001612dc960259139600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ec89092919063ffffffff16565b611a10565b6001905092915050565b60006118b76118896110cc565b60ff16600a0a6118a961189a61100f565b8561237c90919063ffffffff16565b61240290919063ffffffff16565b9050919050565b60006118cb338484611c07565b6001905092915050565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111611929576000611981565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600183038152602001908152602001600020600101545b915050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612da56024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ca76022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612d806025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c626023913960400191505060405180910390fd5b611d1e838383612610565b611d8981604051806060016040528060268152602001612cc9602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ec89092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e1c816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611f75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f3a578082015181840152602081019050611f1f565b50505050905090810190601f168015611f675780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015612006576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6120be308383612610565b6120d381600254611f8890919063ffffffff16565b60028190555061212a816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a46123768284836126de565b50505050565b60008083141561238f57600090506123fc565b60008284029050828482816123a057fe5b04146123f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612cef6021913960400191505060405180910390fd5b809150505b92915050565b600061244483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612937565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156124d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d5f6021913960400191505060405180910390fd5b6124de82600083612610565b61254981604051806060016040528060228152602001612c85602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ec89092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506125a081600254612a1390919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6126d9600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836126de565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561271a5750600081115b1561293257600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612828576000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008082116127a75760006127ff565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600184038152602001908152602001600020600101545b905060006128168483612a1390919063ffffffff16565b905061282486848484612a5d565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612931576000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008082116128b0576000612908565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600184038152602001908152602001600020600101545b9050600061291f8483611f8890919063ffffffff16565b905061292d85848484612a5d565b5050505b5b505050565b600080831182906129e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156129a857808201518184015260208101905061298d565b50505050905090810190601f1680156129d55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816129ef57fe5b0490508385816129fb57fe5b06818502018514612a0857fe5b809150509392505050565b6000612a5583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611ec8565b905092915050565b600083118015612ac2575043600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018603815260200190815260200160002060000154145b15612b275780600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018603815260200190815260200160002060010181905550612beb565b604051806040016040528043815260200182815250600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600082015181600001556020820151816001015590505060018301600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051808381526020018281526020019250505060405180910390a250505050565b60405180604001604052806000815260200160008152509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365674f484d3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122022f7822aae2067dce77357444cbf7e5922299803da0c8b9d5d38cb6de74a985864736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x31CB CODESIZE SUB DUP1 PUSH3 0x31CB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F7665726E616E6365204F484D000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x674F484D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x12 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD8 SWAP3 SWAP2 SWAP1 PUSH3 0x2E2 JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xF1 SWAP3 SWAP2 SWAP1 PUSH3 0x2E2 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x1B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5A65726F20616464726573733A204D69677261746F7200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x299 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5A65726F20616464726573733A20734F484D0000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x398 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x31A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x366 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x335 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x366 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x366 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x365 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x348 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x375 SWAP2 SWAP1 PUSH3 0x379 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x394 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x37A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2E23 DUP1 PUSH3 0x3A8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x587CDE1E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8248768 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA8248768 EQ PUSH2 0x89D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8DF JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x943 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x99B JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x7EB JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x839 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x66A5236C EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6AE JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x706 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x19D40B08 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x2C678C64 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x2C678C64 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x514 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x19D40B08 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x451 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xCDFEBFA EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x1068361F EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x15079925 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x37B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x208 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAFD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34F PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x477 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x560 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1188 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x612 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x128C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x640 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x698 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x752 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x770 PUSH2 0x164A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x795 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7DD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x837 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x885 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x187C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x985 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1989 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xAAB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA80 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAAB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC2 CALLER DUP5 DUP5 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C7920617070726F76656400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D69677261746564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C696420617267756D656E7400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5A65726F206164647265737320666F756E640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5A65726F206164647265737320666F756E640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF51 DUP5 DUP5 DUP5 PUSH2 0x1C07 JUMP JUMPDEST PUSH2 0x1004 DUP5 CALLER PUSH2 0xFFF DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D10 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1EC8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2986C0E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x108D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117E CALLER DUP5 PUSH2 0x1179 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x124B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C7920617070726F76656400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1255 DUP3 DUP3 PUSH2 0x2010 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1296 CALLER DUP3 PUSH2 0x21D5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D4 PUSH2 0x12A6 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x12C6 PUSH2 0x12B1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA EXP DUP6 PUSH2 0x237C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2402 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x1395 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D38 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1644 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0x14A8 JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x1644 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x150D JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x15EA JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB DUP2 PUSH2 0x152D JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0x153A PUSH2 0x2C47 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x15C8 JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x1644 JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x15DC JUMPI DUP2 SWAP4 POP PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x1517 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x16E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C7920617070726F76656400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17B9 DUP3 DUP3 PUSH2 0x244C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1872 CALLER DUP5 PUSH2 0x186D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2DC9 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1EC8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B7 PUSH2 0x1889 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0x18A9 PUSH2 0x189A PUSH2 0x100F JUMP JUMPDEST DUP6 PUSH2 0x237C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2402 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CB CALLER DUP5 DUP5 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1929 JUMPI PUSH1 0x0 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DA5 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CA7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D80 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C62 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D1E DUP4 DUP4 DUP4 PUSH2 0x2610 JUMP JUMPDEST PUSH2 0x1D89 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1EC8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E1C DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1F75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F3A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F1F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1F67 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2006 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20BE ADDRESS DUP4 DUP4 PUSH2 0x2610 JUMP JUMPDEST PUSH2 0x20D3 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1F88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x212A DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2376 DUP3 DUP5 DUP4 PUSH2 0x26DE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x238F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x23FC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x23A0 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x23F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CEF PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2444 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2937 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x24D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D5F PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24DE DUP3 PUSH1 0x0 DUP4 PUSH2 0x2610 JUMP JUMPDEST PUSH2 0x2549 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C85 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1EC8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x25A0 DUP2 PUSH1 0x2 SLOAD PUSH2 0x2A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x26D9 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x26DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x271A JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2932 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2828 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x27A7 JUMPI PUSH1 0x0 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2816 DUP5 DUP4 PUSH2 0x2A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2824 DUP7 DUP5 DUP5 DUP5 PUSH2 0x2A5D JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2931 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x28B0 JUMPI PUSH1 0x0 PUSH2 0x2908 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x291F DUP5 DUP4 PUSH2 0x1F88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x292D DUP6 DUP5 DUP5 DUP5 PUSH2 0x2A5D JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x29E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29A8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x298D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x29D5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x29EF JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x29FB JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x2A08 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A55 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x2AC2 JUMPI POP NUMBER PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP7 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2B27 JUMPI DUP1 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP7 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 NUMBER DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 DUP4 ADD PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x674F484D3A3A PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122022F7 DUP3 0x2A 0xAE KECCAK256 PUSH8 0xDCE77357444CBF7E MSIZE 0x22 0x29 SWAP9 SUB 0xDA 0xC DUP12 SWAP14 0x5D CODESIZE 0xCB PUSH14 0xE74A985864736F6C634300070500 CALLER ",
							"sourceMap": "300:7653:0:-:0;;;1422:288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1058:148:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:2:0;1146:5:6;1138;:13;;;;;;;;;;;;:::i;:::-;;1167:7;1157;:17;;;;;;;;;;;;:::i;:::-;;1192:9;1180;;:21;;;;;;;;;;;;;;;;;;1058:148;;;1555:1:0::1;1534:23;;:9;:23;;;;1526:58;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1605:9;1594:8;;:20;;;;;;;;;;;;;;;;;;1649:1;1632:19;;:5;:19;;;;1624:50;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1697:5;1684:4;;:19;;;;;;;;;;;;;;;;;;1422:288:::0;;300:7653;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061018e5760003560e01c8063587cde1e116100de57806395d89b4111610097578063a824876811610071578063a82487681461089d578063a9059cbb146108df578063b4b5ea5714610943578063dd62ed3e1461099b5761018e565b806395d89b41146107685780639dc29fac146107eb578063a457c2d7146108395761018e565b8063587cde1e146105625780635c19a95c146105d057806366a5236c146106145780636fcfff451461065657806370a08231146106ae578063782d6fe1146107065761018e565b806319d40b081161014b5780632c678c64116101255780632c678c641461046f578063313ce5671461048f57806339509351146104b057806340c10f19146105145761018e565b806319d40b081461039957806323b872dd146103cd5780632986c0e5146104515761018e565b806306fdde0314610193578063095ea7b3146102165780630cdfebfa1461027a5780631068361f146102e3578063150799251461034757806318160ddd1461037b575b600080fd5b61019b610a13565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101db5780820151818401526020810190506101c0565b50505050905090810190601f1680156102085780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102626004803603604081101561022c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ab5565b60405180821515815260200191505060405180910390f35b6102c66004803603604081101561029057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610acc565b604051808381526020018281526020019250505060405180910390f35b610345600480360360408110156102f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610afd565b005b61034f610eee565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610383610f14565b6040518082815260200191505060405180910390f35b6103a1610f1e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610439600480360360608110156103e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f44565b60405180821515815260200191505060405180910390f35b61045961100f565b6040518082815260200191505060405180910390f35b6104776110b9565b60405180821515815260200191505060405180910390f35b6104976110cc565b604051808260ff16815260200191505060405180910390f35b6104fc600480360360408110156104c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110e3565b60405180821515815260200191505060405180910390f35b6105606004803603604081101561052a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611188565b005b6105a46004803603602081101561057857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611259565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610612600480360360208110156105e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061128c565b005b6106406004803603602081101561062a57600080fd5b8101908080359060200190929190505050611299565b6040518082815260200191505060405180910390f35b6106986004803603602081101561066c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112db565b6040518082815260200191505060405180910390f35b6106f0600480360360208110156106c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112f3565b6040518082815260200191505060405180910390f35b6107526004803603604081101561071c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061133b565b6040518082815260200191505060405180910390f35b61077061164a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107b0578082015181840152602081019050610795565b50505050905090810190601f1680156107dd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108376004803603604081101561080157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116ec565b005b6108856004803603604081101561084f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117bd565b60405180821515815260200191505060405180910390f35b6108c9600480360360208110156108b357600080fd5b810190808035906020019092919050505061187c565b6040518082815260200191505060405180910390f35b61092b600480360360408110156108f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118be565b60405180821515815260200191505060405180910390f35b6109856004803603602081101561095957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118d5565b6040518082815260200191505060405180910390f35b6109fd600480360360408110156109b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611989565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aab5780601f10610a8057610100808354040283529160200191610aab565b820191906000526020600020905b815481529060010190602001808311610a8e57829003601f168201915b5050505050905090565b6000610ac2338484611a10565b6001905092915050565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4f6e6c7920617070726f7665640000000000000000000000000000000000000081525060200191505060405180910390fd5b600660149054906101000a900460ff1615610c43576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f4d6967726174656400000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600660146101000a81548160ff021916908315150217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d22576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420617267756d656e740000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dc5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5a65726f206164647265737320666f756e64000000000000000000000000000081525060200191505060405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ea9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5a65726f206164647265737320666f756e64000000000000000000000000000081525060200191505060405180910390fd5b80600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610f51848484611c07565b6110048433610fff85604051806060016040528060288152602001612d1060289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ec89092919063ffffffff16565b611a10565b600190509392505050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632986c0e56040518163ffffffff1660e01b815260040160206040518083038186803b15801561107957600080fd5b505afa15801561108d573d6000803e3d6000fd5b505050506040513d60208110156110a357600080fd5b8101908080519060200190929190505050905090565b600660149054906101000a900460ff1681565b6000600560009054906101000a900460ff16905090565b600061117e338461117985600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8890919063ffffffff16565b611a10565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461124b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4f6e6c7920617070726f7665640000000000000000000000000000000000000081525060200191505060405180910390fd5b6112558282612010565b5050565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61129633826121d5565b50565b60006112d46112a661100f565b6112c66112b16110cc565b60ff16600a0a8561237c90919063ffffffff16565b61240290919063ffffffff16565b9050919050565b60086020528060005260406000206000915090505481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000438210611395576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612d386027913960400191505060405180910390fd5b6000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114156113ec576000915050611644565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018403815260200190815260200160002060000154116114a857600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018303815260200190815260200160002060010154915050611644565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080815260200190815260200160002060000154111561150d576000915050611644565b6000806001830390505b818111156115ea57600060028383038161152d57fe5b048203905061153a612c47565b600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905086816000015114156115c857806020015195505050505050611644565b86816000015110156115dc578193506115e3565b6001820392505b5050611517565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206001015493505050505b92915050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116e25780601f106116b7576101008083540402835291602001916116e2565b820191906000526020600020905b8154815290600101906020018083116116c557829003601f168201915b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4f6e6c7920617070726f7665640000000000000000000000000000000000000081525060200191505060405180910390fd5b6117b9828261244c565b5050565b6000611872338461186d85604051806060016040528060258152602001612dc960259139600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ec89092919063ffffffff16565b611a10565b6001905092915050565b60006118b76118896110cc565b60ff16600a0a6118a961189a61100f565b8561237c90919063ffffffff16565b61240290919063ffffffff16565b9050919050565b60006118cb338484611c07565b6001905092915050565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111611929576000611981565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600183038152602001908152602001600020600101545b915050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612da56024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ca76022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612d806025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c626023913960400191505060405180910390fd5b611d1e838383612610565b611d8981604051806060016040528060268152602001612cc9602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ec89092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e1c816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611f75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f3a578082015181840152602081019050611f1f565b50505050905090810190601f168015611f675780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015612006576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6120be308383612610565b6120d381600254611f8890919063ffffffff16565b60028190555061212a816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a46123768284836126de565b50505050565b60008083141561238f57600090506123fc565b60008284029050828482816123a057fe5b04146123f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612cef6021913960400191505060405180910390fd5b809150505b92915050565b600061244483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612937565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156124d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d5f6021913960400191505060405180910390fd5b6124de82600083612610565b61254981604051806060016040528060228152602001612c85602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ec89092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506125a081600254612a1390919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6126d9600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836126de565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561271a5750600081115b1561293257600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612828576000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008082116127a75760006127ff565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600184038152602001908152602001600020600101545b905060006128168483612a1390919063ffffffff16565b905061282486848484612a5d565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612931576000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008082116128b0576000612908565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600184038152602001908152602001600020600101545b9050600061291f8483611f8890919063ffffffff16565b905061292d85848484612a5d565b5050505b5b505050565b600080831182906129e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156129a857808201518184015260208101905061298d565b50505050905090810190601f1680156129d55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816129ef57fe5b0490508385816129fb57fe5b06818502018514612a0857fe5b809150509392505050565b6000612a5583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611ec8565b905092915050565b600083118015612ac2575043600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018603815260200190815260200160002060000154145b15612b275780600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018603815260200190815260200160002060010181905550612beb565b604051806040016040528043815260200182815250600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600082015181600001556020820151816001015590505060018301600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051808381526020018281526020019250505060405180910390a250505050565b60405180604001604052806000815260200160008152509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365674f484d3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122022f7822aae2067dce77357444cbf7e5922299803da0c8b9d5d38cb6de74a985864736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x587CDE1E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8248768 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA8248768 EQ PUSH2 0x89D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8DF JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x943 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x99B JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x7EB JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x839 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x66A5236C EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6AE JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x706 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x19D40B08 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x2C678C64 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x2C678C64 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x514 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x19D40B08 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x451 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xCDFEBFA EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x1068361F EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x15079925 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x37B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x208 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAFD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34F PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x477 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x560 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1188 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x612 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x128C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x640 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x698 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x752 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x770 PUSH2 0x164A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x795 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7DD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x837 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x885 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x187C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x985 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1989 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xAAB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA80 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAAB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC2 CALLER DUP5 DUP5 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C7920617070726F76656400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D69677261746564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C696420617267756D656E7400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5A65726F206164647265737320666F756E640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5A65726F206164647265737320666F756E640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF51 DUP5 DUP5 DUP5 PUSH2 0x1C07 JUMP JUMPDEST PUSH2 0x1004 DUP5 CALLER PUSH2 0xFFF DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D10 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1EC8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2986C0E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x108D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117E CALLER DUP5 PUSH2 0x1179 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x124B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C7920617070726F76656400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1255 DUP3 DUP3 PUSH2 0x2010 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1296 CALLER DUP3 PUSH2 0x21D5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D4 PUSH2 0x12A6 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x12C6 PUSH2 0x12B1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA EXP DUP6 PUSH2 0x237C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2402 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x1395 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D38 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1644 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0x14A8 JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x1644 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x150D JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x15EA JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB DUP2 PUSH2 0x152D JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0x153A PUSH2 0x2C47 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x15C8 JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x1644 JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x15DC JUMPI DUP2 SWAP4 POP PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x1517 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x16E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C7920617070726F76656400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17B9 DUP3 DUP3 PUSH2 0x244C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1872 CALLER DUP5 PUSH2 0x186D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2DC9 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1EC8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B7 PUSH2 0x1889 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0x18A9 PUSH2 0x189A PUSH2 0x100F JUMP JUMPDEST DUP6 PUSH2 0x237C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2402 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CB CALLER DUP5 DUP5 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1929 JUMPI PUSH1 0x0 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DA5 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CA7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D80 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C62 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D1E DUP4 DUP4 DUP4 PUSH2 0x2610 JUMP JUMPDEST PUSH2 0x1D89 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1EC8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E1C DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1F75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F3A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F1F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1F67 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2006 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20BE ADDRESS DUP4 DUP4 PUSH2 0x2610 JUMP JUMPDEST PUSH2 0x20D3 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1F88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x212A DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2376 DUP3 DUP5 DUP4 PUSH2 0x26DE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x238F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x23FC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x23A0 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x23F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CEF PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2444 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2937 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x24D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D5F PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24DE DUP3 PUSH1 0x0 DUP4 PUSH2 0x2610 JUMP JUMPDEST PUSH2 0x2549 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C85 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1EC8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x25A0 DUP2 PUSH1 0x2 SLOAD PUSH2 0x2A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x26D9 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x26DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x271A JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2932 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2828 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x27A7 JUMPI PUSH1 0x0 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2816 DUP5 DUP4 PUSH2 0x2A13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2824 DUP7 DUP5 DUP5 DUP5 PUSH2 0x2A5D JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2931 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x28B0 JUMPI PUSH1 0x0 PUSH2 0x2908 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x291F DUP5 DUP4 PUSH2 0x1F88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x292D DUP6 DUP5 DUP5 DUP5 PUSH2 0x2A5D JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x29E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29A8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x298D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x29D5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x29EF JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x29FB JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x2A08 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A55 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x2AC2 JUMPI POP NUMBER PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP7 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2B27 JUMPI DUP1 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP7 SUB DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 NUMBER DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 DUP4 ADD PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x674F484D3A3A PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122022F7 DUP3 0x2A 0xAE KECCAK256 PUSH8 0xDCE77357444CBF7E MSIZE 0x22 0x29 SWAP9 SUB 0xDA 0xC DUP12 SWAP14 0x5D CODESIZE 0xCB PUSH14 0xE74A985864736F6C634300070500 CALLER ",
							"sourceMap": "300:7653:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1286:75:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3425:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1196:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1976:395;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1107:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2334:92:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1130:23:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4081:313:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3161:92:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1169:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2184:75:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4789:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2718:111:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1326:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2513:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3624:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1271:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2499:119:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4600:1196:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1487:79:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2934:115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5487:262:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3368:141:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2870:160:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3957:221:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3113:149:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1286:75;1323:13;1351:5;1344:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1286:75;:::o;3425:164::-;3508:4;3524:37;3533:10;3545:7;3554:6;3524:8;:37::i;:::-;3578:4;3571:11;;3425:164;;;;:::o;1196:69:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1976:395::-;546:8;;;;;;;;;;;532:22;;:10;:22;;;524:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2076:8:::1;;;;;;;;;;;2075:9;2067:30;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2118:4;2107:8;;:15;;;;;;;;;;;;;;;;;;2153:8;;;;;;;;;;;2141:20;;:8;:20;;;;2133:49;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2220:1;2200:22;;:8;:22;;;;2192:53;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2266:8;2255;;:19;;;;;;;;;;;;;;;;;;2310:1;2293:19;;:5;:19;;;;2285:50;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2358:5;2345:4;;:19;;;;;;;;;;;;;;;;;;1976:395:::0;;:::o;1107:17::-;;;;;;;;;;;;;:::o;2334:92:6:-;2387:7;2409:12;;2402:19;;2334:92;:::o;1130:23:0:-;;;;;;;;;;;;;:::o;4081:313:6:-;4187:4;4203:36;4213:6;4221:9;4232:6;4203:9;:36::i;:::-;4249:117;4258:6;4266:10;4278:87;4314:6;4278:87;;;;;;;;;;;;;;;;;:11;:19;4290:6;4278:19;;;;;;;;;;;;;;;:31;4298:10;4278:31;;;;;;;;;;;;;;;;:35;;:87;;;;;:::i;:::-;4249:8;:117::i;:::-;4383:4;4376:11;;4081:313;;;;;:::o;3161:92:0:-;3208:7;3234:4;;;;;;;;;;;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3227:19;;3161:92;:::o;1169:20::-;;;;;;;;;;;;;:::o;2184:75:6:-;2225:5;2245:9;;;;;;;;;;;2238:16;;2184:75;:::o;4789:211::-;4877:4;4893:79;4902:10;4914:7;4923:48;4960:10;4923:11;:23;4935:10;4923:23;;;;;;;;;;;;;;;:32;4947:7;4923:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;4893:8;:79::i;:::-;4989:4;4982:11;;4789:211;;;;:::o;2718:111:0:-;546:8;;;;;;;;;;;532:22;;:10;:22;;;524:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:19:::1;2809:3;2814:7;2803:5;:19::i;:::-;2718:111:::0;;:::o;1326:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;2513:102::-;2576:32;2586:10;2598:9;2576;:32::i;:::-;2513:102;:::o;3624:139::-;3690:7;3716:40;3748:7;:5;:7::i;:::-;3716:27;3732:10;:8;:10::i;:::-;3728:14;;:2;:14;3716:7;:11;;:27;;;;:::i;:::-;:31;;:40;;;;:::i;:::-;3709:47;;3624:139;;;:::o;1271:49::-;;;;;;;;;;;;;;;;;:::o;2499:119:6:-;2573:7;2595:9;:18;2605:7;2595:18;;;;;;;;;;;;;;;;2588:25;;2499:119;;;:::o;4600:1196:0:-;4684:7;4725:12;4711:11;:26;4703:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4792:20;4815:14;:23;4830:7;4815:23;;;;;;;;;;;;;;;;4792:46;;4868:1;4852:12;:17;4848:56;;;4892:1;4885:8;;;;;4848:56;5013:11;4961;:20;4973:7;4961:20;;;;;;;;;;;;;;;:38;4997:1;4982:12;:16;4961:38;;;;;;;;;;;:48;;;:63;4957:145;;5047:11;:20;5059:7;5047:20;;;;;;;;;;;;;;;:38;5083:1;5068:12;:16;5047:38;;;;;;;;;;;:44;;;5040:51;;;;;4957:145;5196:11;5160;:20;5172:7;5160:20;;;;;;;;;;;;;;;:23;5181:1;5160:23;;;;;;;;;;;:33;;;:47;5156:86;;;5230:1;5223:8;;;;;5156:86;5252:13;5279;5310:1;5295:12;:16;5279:32;;5321:419;5336:5;5328;:13;5321:419;;;5357:14;5400:1;5391:5;5383;:13;5382:19;;;;;;5374:5;:27;5357:44;;5442:20;;:::i;:::-;5465:11;:20;5477:7;5465:20;;;;;;;;;;;;;;;:28;5486:6;5465:28;;;;;;;;;;;5442:51;;;;;;;;;;;;;;;;;;;;;;;;;;;5527:11;5511:2;:12;;;:27;5507:223;;;5565:2;:8;;;5558:15;;;;;;;;;5507:223;5613:11;5598:2;:12;;;:26;5594:136;;;5652:6;5644:14;;5594:136;;;5714:1;5705:6;:10;5697:18;;5594:136;5321:419;;;;;5756:11;:20;5768:7;5756:20;;;;;;;;;;;;;;;:27;5777:5;5756:27;;;;;;;;;;;:33;;;5749:40;;;;;4600:1196;;;;;:::o;1487:79:6:-;1526:13;1554:7;1547:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:79;:::o;2934:115:0:-;546:8;;;;;;;;;;;532:22;;:10;:22;;;524:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3021:21:::1;3027:5;3034:7;3021:5;:21::i;:::-;2934:115:::0;;:::o;5487:262:6:-;5580:4;5596:125;5605:10;5617:7;5626:94;5663:15;5626:94;;;;;;;;;;;;;;;;;:11;:23;5638:10;5626:23;;;;;;;;;;;;;;;:32;5650:7;5626:32;;;;;;;;;;;;;;;;:36;;:94;;;;;:::i;:::-;5596:8;:125::i;:::-;5738:4;5731:11;;5487:262;;;;:::o;3368:141:0:-;3436:7;3462:40;3491:10;:8;:10::i;:::-;3487:14;;:2;:14;3462:20;3474:7;:5;:7::i;:::-;3462;:11;;:20;;;;:::i;:::-;:24;;:40;;;;:::i;:::-;3455:47;;3368:141;;;:::o;2870:160:6:-;2956:4;2968:40;2978:10;2990:9;3001:6;2968:9;:40::i;:::-;3021:4;3014:11;;2870:160;;;;:::o;3957:221:0:-;4022:7;4041:20;4064:14;:23;4079:7;4064:23;;;;;;;;;;;;;;;;4041:46;;4119:1;4104:12;:16;:67;;4170:1;4104:67;;;4123:11;:20;4135:7;4123:20;;;;;;;;;;;;;;;:38;4159:1;4144:12;:16;4123:38;;;;;;;;;;;:44;;;4104:67;4097:74;;;3957:221;;;:::o;3113:149:6:-;3202:7;3228:11;:18;3240:5;3228:18;;;;;;;;;;;;;;;:27;3247:7;3228:27;;;;;;;;;;;;;;;;3221:34;;3113:149;;;;:::o;8590:340::-;8708:1;8691:19;;:5;:19;;;;8683:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8788:1;8769:21;;:7;:21;;;;8761:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8870:6;8840:11;:18;8852:5;8840:18;;;;;;;;;;;;;;;:27;8859:7;8840:27;;;;;;;;;;;;;;;:36;;;;8907:7;8891:32;;8900:5;8891:32;;;8916:6;8891:32;;;;;;;;;;;;;;;;;;8590:340;;;:::o;6193:504::-;6312:1;6294:20;;:6;:20;;;;6286:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6391:1;6370:23;;:9;:23;;;;6362:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:47;6461:6;6469:9;6480:6;6440:20;:47::i;:::-;6514:71;6536:6;6514:71;;;;;;;;;;;;;;;;;:9;:17;6524:6;6514:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;6494:9;:17;6504:6;6494:17;;;;;;;;;;;;;;;:91;;;;6614:32;6639:6;6614:9;:20;6624:9;6614:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;6591:9;:20;6601:9;6591:20;;;;;;;;;;;;;;;:55;;;;6674:9;6657:35;;6666:6;6657:35;;;6685:6;6657:35;;;;;;;;;;;;;;;;;;6193:504;;;:::o;521:187:5:-;607:7;639:1;634;:6;;642:12;626:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:9;681:1;677;:5;665:17;;700:1;693:8;;;521:187;;;;;:::o;199:176::-;257:7;276:9;292:1;288;:5;276:17;;316:1;311;:6;;303:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;367:1;360:8;;;199:176;;;;:::o;6993:394:6:-;7099:1;7079:22;;:8;:22;;;;7071:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7147:57;7177:4;7185:8;7195;7147:20;:57::i;:::-;7229:26;7246:8;7229:12;;:16;;:26;;;;:::i;:::-;7214:12;:41;;;;7287:33;7311:8;7287:9;:19;7297:8;7287:19;;;;;;;;;;;;;;;;:23;;:33;;;;:::i;:::-;7265:9;:19;7275:8;7265:19;;;;;;;;;;;;;;;:55;;;;7361:8;7335:45;;7353:4;7335:45;;;7371:8;7335:45;;;;;;;;;;;;;;;;;;6993:394;;:::o;5854:369:0:-;5930:23;5956:9;:20;5966:9;5956:20;;;;;;;;;;;;;;;;;;;;;;;;;5930:46;;5986:24;6013:9;:20;6023:9;6013:20;;;;;;;;;;;;;;;;5986:47;;6066:9;6043;:20;6053:9;6043:20;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;6135:9;6091:54;;6118:15;6091:54;;6107:9;6091:54;;;;;;;;;;;;6156:60;6171:15;6188:9;6199:16;6156:14;:60::i;:::-;5854:369;;;;:::o;714:241:5:-;772:7;800:1;795;:6;791:45;;;824:1;817:8;;;;791:45;846:9;862:1;858;:5;846:17;;890:1;885;881;:5;;;;;;:10;873:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:1;940:8;;;714:241;;;;;:::o;961:130::-;1019:7;1045:39;1049:1;1052;1045:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;1038:46;;961:130;;;;:::o;7732:410:6:-;7834:1;7815:21;;:7;:21;;;;7807:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7885:49;7906:7;7923:1;7927:6;7885:20;:49::i;:::-;7966:68;7989:6;7966:68;;;;;;;;;;;;;;;;;:9;:18;7976:7;7966:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;7945:9;:18;7955:7;7945:18;;;;;;;;;;;;;;;:89;;;;8059:24;8076:6;8059:12;;:16;;:24;;;;:::i;:::-;8044:12;:39;;;;8124:1;8098:37;;8107:7;8098:37;;;8128:6;8098:37;;;;;;;;;;;;;;;;;;7732:410;;:::o;7760:191:0:-;7890:54;7905:9;:15;7915:4;7905:15;;;;;;;;;;;;;;;;;;;;;;;;;7922:9;:13;7932:2;7922:13;;;;;;;;;;;;;;;;;;;;;;;;;7937:6;7890:14;:54::i;:::-;7760:191;;;:::o;6229:867::-;6364:6;6354:16;;:6;:16;;;;:30;;;;;6383:1;6374:6;:10;6354:30;6350:740;;;6422:1;6404:20;;:6;:20;;;6400:333;;6444:17;6464:14;:22;6479:6;6464:22;;;;;;;;;;;;;;;;6444:42;;6504:17;6536:1;6524:9;:13;:60;;6583:1;6524:60;;;6540:11;:19;6552:6;6540:19;;;;;;;;;;;;;;;:34;6572:1;6560:9;:13;6540:34;;;;;;;;;;;:40;;;6524:60;6504:80;;6602:17;6622:21;6636:6;6622:9;:13;;:21;;;;:::i;:::-;6602:41;;6661:57;6678:6;6686:9;6697;6708;6661:16;:57::i;:::-;6400:333;;;;6769:1;6751:20;;:6;:20;;;6747:333;;6791:17;6811:14;:22;6826:6;6811:22;;;;;;;;;;;;;;;;6791:42;;6851:17;6883:1;6871:9;:13;:60;;6930:1;6871:60;;;6887:11;:19;6899:6;6887:19;;;;;;;;;;;;;;;:34;6919:1;6907:9;:13;6887:34;;;;;;;;;;;:40;;;6871:60;6851:80;;6949:17;6969:21;6983:6;6969:9;:13;;:21;;;;:::i;:::-;6949:41;;7008:57;7025:6;7033:9;7044;7055;7008:16;:57::i;:::-;6747:333;;;;6350:740;6229:867;;;:::o;1097:269:5:-;1183:7;1214:1;1210;:5;1217:12;1202:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:9;1256:1;1252;:5;;;;;;1240:17;;1291:1;1287;:5;;;;;;1283:1;1279;:5;:13;1274:1;:18;1267:26;;;;1358:1;1351:8;;;1097:269;;;;;:::o;381:134::-;439:7;465:43;469:1;472;465:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;458:50;;381:134;;;;:::o;7102:569:0:-;7281:1;7266:12;:16;:86;;;;;7340:12;7286:11;:22;7298:9;7286:22;;;;;;;;;;;;;;;:40;7324:1;7309:12;:16;7286:40;;;;;;;;;;;:50;;;:66;7266:86;7262:336;;;7417:8;7368:11;:22;7380:9;7368:22;;;;;;;;;;;;;;;:40;7406:1;7391:12;:16;7368:40;;;;;;;;;;;:46;;:57;;;;7262:336;;;7495:34;;;;;;;;7506:12;7495:34;;;;7520:8;7495:34;;;7456:11;:22;7468:9;7456:22;;;;;;;;;;;;;;;:36;7479:12;7456:36;;;;;;;;;;;:73;;;;;;;;;;;;;;;;;;;7586:1;7571:12;:16;7543:14;:25;7558:9;7543:25;;;;;;;;;;;;;;;:44;;;;7262:336;7634:9;7613:51;;;7645:8;7655;7613:51;;;;;;;;;;;;;;;;;;;;;;;;7102:569;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2362200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"approved()": "1093",
								"balanceFrom(uint256)": "infinite",
								"balanceOf(address)": "1307",
								"balanceTo(uint256)": "infinite",
								"burn(address,uint256)": "infinite",
								"checkpoints(address,uint256)": "2175",
								"decimals()": "1122",
								"decreaseAllowance(address,uint256)": "infinite",
								"delegate(address)": "infinite",
								"delegates(address)": "1223",
								"getCurrentVotes(address)": "2301",
								"getPriorVotes(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"index()": "infinite",
								"migrate(address,address)": "65786",
								"migrated()": "1142",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"numCheckpoints(address)": "1258",
								"sOHM()": "1209",
								"symbol()": "infinite",
								"totalSupply()": "1147",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint256)": "infinite",
								"_writeCheckpoint(address,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "476F7665726E616E6365204F484D000000000000000000000000000000000000"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "674F484D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1510,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1146,
									"end": 1151,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1167,
									"end": 1174,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1164,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1192,
									"end": 1201,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1189,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1180,
									"end": 1189,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1201,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1058,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1556,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1534,
									"end": 1557,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1534,
									"end": 1557,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1543,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1557,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1534,
									"end": 1557,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1557,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1557,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "PUSH",
									"source": 0,
									"value": "5A65726F20616464726573733A204D69677261746F7200000000000000000000"
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1526,
									"end": 1584,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1605,
									"end": 1614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1602,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1594,
									"end": 1602,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1594,
									"end": 1614,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1649,
									"end": 1650,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1632,
									"end": 1651,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1632,
									"end": 1651,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1632,
									"end": 1637,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1632,
									"end": 1651,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1632,
									"end": 1651,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1632,
									"end": 1651,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1632,
									"end": 1651,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "5A65726F20616464726573733A20734F484D0000000000000000000000000000"
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1624,
									"end": 1674,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1697,
									"end": 1702,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1688,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1684,
									"end": 1688,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1710,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 7953,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122022f7822aae2067dce77357444cbf7e5922299803da0c8b9d5d38cb6de74a985864736f6c63430007050033",
									".code": [
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "587CDE1E"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "A8248768"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "A8248768"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "B4B5EA57"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "587CDE1E"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "66A5236C"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "6FCFFF45"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "782D6FE1"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "19D40B08"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "2C678C64"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "2C678C64"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "19D40B08"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "2986C0E5"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "CDFEBFA"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "1068361F"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "15079925"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 7953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1336,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1361,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3533,
											"end": 3543,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3560,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3524,
											"end": 3561,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3524,
											"end": 3561,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3524,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3578,
											"end": 3582,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3571,
											"end": 3582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3589,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 546,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 546,
											"end": 554,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 546,
											"end": 554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 542,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "4F6E6C7920617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "4D69677261746564000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2067,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2122,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2107,
											"end": 2115,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2107,
											"end": 2115,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2161,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2141,
											"end": 2161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2161,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2141,
											"end": 2161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2161,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "496E76616C696420617267756D656E7400000000000000000000000000000000"
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2133,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2222,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2222,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2222,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "5A65726F206164647265737320666F756E640000000000000000000000000000"
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2192,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2255,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2293,
											"end": 2312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2293,
											"end": 2312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2312,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "PUSH",
											"source": 0,
											"value": "5A65726F206164647265737320666F756E640000000000000000000000000000"
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2285,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2349,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2345,
											"end": 2349,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2371,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2426,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4191,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4213,
											"end": 4219,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4230,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4203,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4203,
											"end": 4239,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4203,
											"end": 4239,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4203,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4258,
											"end": 4264,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4276,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4314,
											"end": 4320,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "PUSH data",
											"source": 6,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4289,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4290,
											"end": 4296,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4297,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4308,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4278,
											"end": 4313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4278,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4249,
											"end": 4366,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4249,
											"end": 4366,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4249,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4387,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4376,
											"end": 4387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4394,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3234,
											"end": 3244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "2986C0E5"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3253,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2259,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4877,
											"end": 4881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4902,
											"end": 4912,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4960,
											"end": 4970,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4934,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4945,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4954,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4923,
											"end": 4959,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4971,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4971,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4971,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4971,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4923,
											"end": 4971,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4923,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4893,
											"end": 4972,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4893,
											"end": 4972,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4893,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4989,
											"end": 4993,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4982,
											"end": 4993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4982,
											"end": 4993,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5000,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 546,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 546,
											"end": 554,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 546,
											"end": 554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 542,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "4F6E6C7920617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2803,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2809,
											"end": 2812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2803,
											"end": 2822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2803,
											"end": 2822,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2803,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2829,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1370,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2586,
											"end": 2596,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2607,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2576,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2615,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3748,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3732,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3732,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3732,
											"end": 3742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3732,
											"end": 3742,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3732,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3728,
											"end": 3730,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3723,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3716,
											"end": 3727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3716,
											"end": 3743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3716,
											"end": 3743,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3716,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3716,
											"end": 3747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3716,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3763,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2612,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 4722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 4737,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "PUSH data",
											"source": 0,
											"value": "AF7C5741DC8CF648E56D5BF296014D9D34A36F052C1EEFAA826779D4817E5E92"
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4703,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4792,
											"end": 4812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4830,
											"end": 4837,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4792,
											"end": 4838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4792,
											"end": 4838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 4869,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 4904,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4848,
											"end": 4904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 4893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 4893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4885,
											"end": 4893,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 4904,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4848,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4972,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 4980,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4981,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 4998,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4982,
											"end": 4994,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 4998,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4961,
											"end": 4999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4961,
											"end": 4999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4999,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 5009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 5009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 5009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 5024,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4957,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4957,
											"end": 5102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5058,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5066,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5083,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5068,
											"end": 5080,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5047,
											"end": 5085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5047,
											"end": 5085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5085,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5091,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5047,
											"end": 5091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5047,
											"end": 5091,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5040,
											"end": 5091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5040,
											"end": 5091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5040,
											"end": 5091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5040,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5040,
											"end": 5091,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4957,
											"end": 5102,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4957,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5171,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5193,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5207,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5156,
											"end": 5242,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5156,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5156,
											"end": 5242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5223,
											"end": 5231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5223,
											"end": 5231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5223,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5223,
											"end": 5231,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5156,
											"end": 5242,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5156,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5252,
											"end": 5265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5311,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5295,
											"end": 5307,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5295,
											"end": 5311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5740,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5321,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5336,
											"end": 5341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5341,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5321,
											"end": 5740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5400,
											"end": 5401,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5391,
											"end": 5396,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5382,
											"end": 5401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5382,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5382,
											"end": 5401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5382,
											"end": 5401,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 5382,
											"end": 5401,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5382,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5382,
											"end": 5401,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5442,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5442,
											"end": 5462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5442,
											"end": 5462,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5442,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5484,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5486,
											"end": 5492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5465,
											"end": 5493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5465,
											"end": 5493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5465,
											"end": 5493,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5442,
											"end": 5493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5538,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5511,
											"end": 5513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5511,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5511,
											"end": 5523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5511,
											"end": 5538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5507,
											"end": 5730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5565,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5573,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5730,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5507,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 5624,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5624,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5594,
											"end": 5730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5658,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5594,
											"end": 5730,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5730,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5594,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5714,
											"end": 5715,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5705,
											"end": 5711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5730,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5594,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5321,
											"end": 5740,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5740,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5321,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5767,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5768,
											"end": 5775,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5789,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5756,
											"end": 5789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5789,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 5796,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1526,
											"end": 1539,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1566,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 546,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 546,
											"end": 554,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 546,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 546,
											"end": 554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 542,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "4F6E6C7920617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 524,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 524,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3027,
											"end": 3032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 3049,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5580,
											"end": 5584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5605,
											"end": 5615,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5663,
											"end": 5678,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "PUSH data",
											"source": 6,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5637,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5648,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5657,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5626,
											"end": 5662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5626,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5596,
											"end": 5721,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5596,
											"end": 5721,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5596,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5731,
											"end": 5742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5749,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3491,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3487,
											"end": 3501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3487,
											"end": 3501,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3474,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3474,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3474,
											"end": 3481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3474,
											"end": 3481,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3474,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3469,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3462,
											"end": 3486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3462,
											"end": 3502,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3462,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3509,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2978,
											"end": 2988,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2990,
											"end": 2999,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3007,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2968,
											"end": 3008,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2968,
											"end": 3008,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2968,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3014,
											"end": 3025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3030,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4078,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4086,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4041,
											"end": 4087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4041,
											"end": 4087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4119,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4120,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 4104,
											"end": 4171,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 4104,
											"end": 4171,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4171,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 4104,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4134,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4160,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4160,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4123,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4123,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4161,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4167,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4123,
											"end": 4167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4171,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 4104,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 4178,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3245,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3254,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3262,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8590,
											"end": 8930,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 8590,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8708,
											"end": 8709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 8710,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8691,
											"end": 8710,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8691,
											"end": 8696,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8691,
											"end": 8710,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8691,
											"end": 8710,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8691,
											"end": 8710,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8691,
											"end": 8710,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "PUSH data",
											"source": 6,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 8683,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8788,
											"end": 8789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8769,
											"end": 8790,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8769,
											"end": 8790,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8769,
											"end": 8776,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8769,
											"end": 8790,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8769,
											"end": 8790,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8769,
											"end": 8790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8769,
											"end": 8790,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "PUSH data",
											"source": 6,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 8761,
											"end": 8829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8870,
											"end": 8876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8851,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8852,
											"end": 8857,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8866,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8840,
											"end": 8867,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8876,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8914,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8900,
											"end": 8905,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8916,
											"end": 8922,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8923,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8930,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6193,
											"end": 6697,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6193,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 6313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6314,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6294,
											"end": 6314,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6300,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6314,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6294,
											"end": 6314,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6314,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6314,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "PUSH data",
											"source": 6,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6286,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6391,
											"end": 6392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6393,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6393,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6393,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6393,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6393,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6393,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "PUSH data",
											"source": 6,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 6362,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6461,
											"end": 6467,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6469,
											"end": 6478,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6480,
											"end": 6486,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 6440,
											"end": 6487,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6440,
											"end": 6487,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6440,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "PUSH data",
											"source": 6,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6530,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 6514,
											"end": 6585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6504,
											"end": 6510,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6585,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6639,
											"end": 6645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6624,
											"end": 6633,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6614,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6646,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6646,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6614,
											"end": 6646,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6646,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6614,
											"end": 6646,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6614,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6601,
											"end": 6610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6591,
											"end": 6611,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6646,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 6683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6685,
											"end": 6691,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6692,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6697,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 708,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 521,
											"end": 708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 607,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 640,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 634,
											"end": 640,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 634,
											"end": 640,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 642,
											"end": 654,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 665,
											"end": 674,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 677,
											"end": 682,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 665,
											"end": 682,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 665,
											"end": 682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 700,
											"end": 701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 693,
											"end": 701,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 693,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 693,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 521,
											"end": 708,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 521,
											"end": 708,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 521,
											"end": 708,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 199,
											"end": 375,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 199,
											"end": 375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 257,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 285,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 292,
											"end": 293,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 288,
											"end": 289,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 288,
											"end": 293,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 276,
											"end": 293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 276,
											"end": 293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 316,
											"end": 317,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 311,
											"end": 312,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 311,
											"end": 317,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 311,
											"end": 317,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 303,
											"end": 349,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 360,
											"end": 368,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 360,
											"end": 368,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 360,
											"end": 368,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 199,
											"end": 375,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 199,
											"end": 375,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 199,
											"end": 375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 199,
											"end": 375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 199,
											"end": 375,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6993,
											"end": 7387,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6993,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7079,
											"end": 7101,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7079,
											"end": 7101,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7079,
											"end": 7087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7079,
											"end": 7101,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7079,
											"end": 7101,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7079,
											"end": 7101,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7079,
											"end": 7101,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 7071,
											"end": 7137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7177,
											"end": 7181,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7193,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7195,
											"end": 7203,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 7147,
											"end": 7204,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7147,
											"end": 7204,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7147,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7246,
											"end": 7254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7241,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7229,
											"end": 7241,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7229,
											"end": 7245,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7229,
											"end": 7255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7255,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7229,
											"end": 7255,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7229,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7226,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7214,
											"end": 7255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7255,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 7311,
											"end": 7319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7296,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7297,
											"end": 7305,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7287,
											"end": 7310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7320,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7320,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7320,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7320,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7287,
											"end": 7320,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 7287,
											"end": 7320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7275,
											"end": 7283,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7320,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7320,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7361,
											"end": 7369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7357,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7371,
											"end": 7379,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7380,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7387,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5854,
											"end": 6223,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5854,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5975,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5956,
											"end": 5976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5930,
											"end": 5976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5930,
											"end": 5976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6013,
											"end": 6022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6032,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6066,
											"end": 6075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6052,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6062,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6135,
											"end": 6144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6118,
											"end": 6133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6107,
											"end": 6116,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "PUSH",
											"source": 0,
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6156,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6171,
											"end": 6186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6197,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6156,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6156,
											"end": 6216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6156,
											"end": 6216,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6156,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6223,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 772,
											"end": 779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 801,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 795,
											"end": 796,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 795,
											"end": 801,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 791,
											"end": 836,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 791,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 824,
											"end": 825,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 836,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 858,
											"end": 859,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 858,
											"end": 863,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 846,
											"end": 863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 890,
											"end": 891,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 885,
											"end": 886,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 881,
											"end": 882,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 886,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 881,
											"end": 886,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 881,
											"end": 891,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH data",
											"source": 5,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 873,
											"end": 929,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 947,
											"end": 948,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 940,
											"end": 948,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 940,
											"end": 948,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 940,
											"end": 948,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 714,
											"end": 955,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 714,
											"end": 955,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 714,
											"end": 955,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 714,
											"end": 955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 714,
											"end": 955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1038,
											"end": 1084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1038,
											"end": 1084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7732,
											"end": 8142,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7732,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 7822,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 7836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 7836,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 7836,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "PUSH data",
											"source": 6,
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7807,
											"end": 7874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7885,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 7906,
											"end": 7913,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7923,
											"end": 7924,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7885,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 7885,
											"end": 7934,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7885,
											"end": 7934,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 7885,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "PUSH data",
											"source": 6,
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7975,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7983,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7966,
											"end": 7988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 7966,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7955,
											"end": 7962,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 8034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 8034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 8034,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 8034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8076,
											"end": 8082,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 8059,
											"end": 8075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8083,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8059,
											"end": 8083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8083,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8059,
											"end": 8083,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8059,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8056,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8044,
											"end": 8083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8083,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8107,
											"end": 8114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8128,
											"end": 8134,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8135,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 7732,
											"end": 8142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7732,
											"end": 8142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7732,
											"end": 8142,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7760,
											"end": 7951,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 7760,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7890,
											"end": 7944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 7905,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7919,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7905,
											"end": 7920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7931,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7934,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7890,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 7890,
											"end": 7944,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7890,
											"end": 7944,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 7890,
											"end": 7944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7760,
											"end": 7951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7760,
											"end": 7951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7760,
											"end": 7951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7760,
											"end": 7951,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6229,
											"end": 7096,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6229,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6354,
											"end": 6370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6360,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6354,
											"end": 6370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6370,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6350,
											"end": 7090,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6350,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 6350,
											"end": 7090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 6424,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6404,
											"end": 6424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6424,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6404,
											"end": 6424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6424,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6400,
											"end": 6733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6444,
											"end": 6461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6485,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6444,
											"end": 6486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6444,
											"end": 6486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6537,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 6524,
											"end": 6584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6524,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 6524,
											"end": 6584,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6584,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 6524,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6551,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6558,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6573,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6560,
											"end": 6569,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6580,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6540,
											"end": 6580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 6580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6584,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 6524,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 6636,
											"end": 6642,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 6622,
											"end": 6635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6622,
											"end": 6643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6643,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6622,
											"end": 6643,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 6622,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6661,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 6678,
											"end": 6684,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6686,
											"end": 6695,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 6717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6661,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 6661,
											"end": 6718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6661,
											"end": 6718,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 6661,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6733,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6400,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6751,
											"end": 6771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6751,
											"end": 6771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6751,
											"end": 6771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6771,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6747,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6747,
											"end": 7080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6791,
											"end": 6808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6825,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6791,
											"end": 6833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6791,
											"end": 6833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6871,
											"end": 6880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6871,
											"end": 6884,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6871,
											"end": 6931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 6871,
											"end": 6931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6871,
											"end": 6931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 6871,
											"end": 6931,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6871,
											"end": 6931,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 6871,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6898,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6899,
											"end": 6905,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6906,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6919,
											"end": 6920,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6907,
											"end": 6916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6927,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6887,
											"end": 6927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6887,
											"end": 6927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6871,
											"end": 6931,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 6871,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 6983,
											"end": 6989,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6969,
											"end": 6982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6969,
											"end": 6990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6990,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6969,
											"end": 6990,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 6969,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 7025,
											"end": 7031,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7033,
											"end": 7042,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7044,
											"end": 7053,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7055,
											"end": 7064,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 7008,
											"end": 7065,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7008,
											"end": 7065,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 7008,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6747,
											"end": 7080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6747,
											"end": 7080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6747,
											"end": 7080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6747,
											"end": 7080,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6747,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6350,
											"end": 7090,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 6350,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6229,
											"end": 7096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6229,
											"end": 7096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6229,
											"end": 7096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6229,
											"end": 7096,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1190,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1215,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1229,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1284,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1292,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 515,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 381,
											"end": 515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 439,
											"end": 446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 469,
											"end": 470,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 472,
											"end": 473,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 465,
											"end": 508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 465,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 458,
											"end": 508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 381,
											"end": 515,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 381,
											"end": 515,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 381,
											"end": 515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 381,
											"end": 515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 381,
											"end": 515,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7102,
											"end": 7671,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 7102,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7281,
											"end": 7282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7278,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7282,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 7266,
											"end": 7352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 7352,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7297,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7298,
											"end": 7307,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7309,
											"end": 7321,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7326,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7326,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7326,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7352,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7352,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 7266,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 7262,
											"end": 7598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7417,
											"end": 7425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7379,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7380,
											"end": 7389,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7390,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7407,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7391,
											"end": 7403,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7391,
											"end": 7407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7368,
											"end": 7414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 7262,
											"end": 7598,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7598,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 7262,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7506,
											"end": 7518,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7467,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7468,
											"end": 7477,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7491,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7456,
											"end": 7492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7456,
											"end": 7492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7456,
											"end": 7492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7587,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7571,
											"end": 7583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7557,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7558,
											"end": 7567,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7568,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7587,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7543,
											"end": 7587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7598,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 7262,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7634,
											"end": 7643,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 7645,
											"end": 7653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7655,
											"end": 7663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7664,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7671,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "168"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"AF7C5741DC8CF648E56D5BF296014D9D34A36F052C1EEFAA826779D4817E5E92": "674f484d3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approved()": "19d40b08",
							"balanceFrom(uint256)": "a8248768",
							"balanceOf(address)": "70a08231",
							"balanceTo(uint256)": "66a5236c",
							"burn(address,uint256)": "9dc29fac",
							"checkpoints(address,uint256)": "0cdfebfa",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"delegate(address)": "5c19a95c",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"increaseAllowance(address,uint256)": "39509351",
							"index()": "2986c0e5",
							"migrate(address,address)": "1068361f",
							"migrated()": "2c678c64",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"numCheckpoints(address)": "6fcfff45",
							"sOHM()": "15079925",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_migrator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sOHM\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"balanceFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"balanceTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sOHM\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sOHM\",\"outputs\":[{\"internalType\":\"contract IsOHM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceFrom(uint256)\":{\"params\":{\"_amount\":\"uint\"},\"returns\":{\"_0\":\"uint\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"balanceTo(uint256)\":{\"params\":{\"_amount\":\"uint\"},\"returns\":{\"_0\":\"uint\"}},\"burn(address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_from\":\"address\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"migrate(address,address)\":{\"params\":{\"_sOHM\":\"address\",\"_staking\":\"address\"}},\"mint(address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_to\":\"address\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceFrom(uint256)\":{\"notice\":\"converts gOHM amount to OHM\"},\"balanceTo(uint256)\":{\"notice\":\"converts OHM amount to gOHM\"},\"burn(address,uint256)\":{\"notice\":\"burn gOHM\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"index()\":{\"notice\":\"pull index from sOHM token\"},\"migrate(address,address)\":{\"notice\":\"transfer mint rights from migrator to stakingcan only be done once, at the time of contract migration\"},\"mint(address,uint256)\":{\"notice\":\"mint gOHM\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gOHM.sol\":\"gOHM\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/gOHM.sol\":{\"keccak256\":\"0xaf8cadb5092a35b663b74fc25a936f4b173a1847d7d3cd63812f2d5315099b92\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9fb6ad110467e16f7529f6253b9d911ee054104b3359264e7e3fefbc8150f29c\",\"dweb:/ipfs/QmSKgp8qjkmNRf98nb7iu254krzdcvZAW5DrhJAvjBbHUk\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/interfaces/IgOHM.sol\":{\"keccak256\":\"0x07c71d7fed4e1b0792386a2caa413567ccc31715f76da2ffa0b5d9fd093d3949\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://055ba0926a736a66249fbecfed5aed1c8738dfd809d924594364e4f977b8108d\",\"dweb:/ipfs/QmWLaJgoHaZwMUDtAA3J13x2hSuyxHoMVV5HG5M3Cz6Qq2\"]},\"contracts/interfaces/IsOHM.sol\":{\"keccak256\":\"0x1f8fc522fcdeb73e31e7b3e3516668d2cdaa59b5953ecd889abf797412f5caaf\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://177b980ca09e3d6f4d00bd2ed214a78aecaf2c1e2d36976320f23082bd7dfc74\",\"dweb:/ipfs/QmeJERJtDCiLV8ooXM2VW5RVJxgFdQA5cLABNi85MRseg3\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/types/ERC20.sol\":{\"keccak256\":\"0xa1b58a3231d7efe286f6bf32ecbdbd2a8a8395c70da96d960e3e0ecf1a6e0aa2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8fcb5129cdae755dabf3798f92161941944f899154a0eaab2dda0a1e5f78ee03\",\"dweb:/ipfs/QmSRzMKPL8kYhc521GKDuzgyHvqFsP5VMxw532XXadyBNV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1665,
								"contract": "contracts/gOHM.sol:gOHM",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1671,
								"contract": "contracts/gOHM.sol:gOHM",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1673,
								"contract": "contracts/gOHM.sol:gOHM",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1675,
								"contract": "contracts/gOHM.sol:gOHM",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1677,
								"contract": "contracts/gOHM.sol:gOHM",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1679,
								"contract": "contracts/gOHM.sol:gOHM",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 51,
								"contract": "contracts/gOHM.sol:gOHM",
								"label": "sOHM",
								"offset": 1,
								"slot": "5",
								"type": "t_contract(IsOHM)862"
							},
							{
								"astId": 53,
								"contract": "contracts/gOHM.sol:gOHM",
								"label": "approved",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 55,
								"contract": "contracts/gOHM.sol:gOHM",
								"label": "migrated",
								"offset": 20,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 61,
								"contract": "contracts/gOHM.sol:gOHM",
								"label": "checkpoints",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Checkpoint)49_storage))"
							},
							{
								"astId": 65,
								"contract": "contracts/gOHM.sol:gOHM",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 69,
								"contract": "contracts/gOHM.sol:gOHM",
								"label": "delegates",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IsOHM)862": {
								"encoding": "inplace",
								"label": "contract IsOHM",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(Checkpoint)49_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(Checkpoint)49_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Checkpoint)49_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct gOHM.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)49_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Checkpoint)49_storage": {
								"encoding": "inplace",
								"label": "struct gOHM.Checkpoint",
								"members": [
									{
										"astId": 46,
										"contract": "contracts/gOHM.sol:gOHM",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 48,
										"contract": "contracts/gOHM.sol:gOHM",
										"label": "votes",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceFrom(uint256)": {
								"notice": "converts gOHM amount to OHM"
							},
							"balanceTo(uint256)": {
								"notice": "converts OHM amount to gOHM"
							},
							"burn(address,uint256)": {
								"notice": "burn gOHM"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"index()": {
								"notice": "pull index from sOHM token"
							},
							"migrate(address,address)": {
								"notice": "transfer mint rights from migrator to stakingcan only be done once, at the time of contract migration"
							},
							"mint(address,uint256)": {
								"notice": "mint gOHM"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IgOHM.sol": {
				"IgOHM": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "balanceFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "balanceTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staking",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_sOHM",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceFrom(uint256)": "a8248768",
							"balanceOf(address)": "70a08231",
							"balanceTo(uint256)": "66a5236c",
							"burn(address,uint256)": "9dc29fac",
							"index()": "2986c0e5",
							"migrate(address,address)": "1068361f",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"balanceFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"balanceTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sOHM\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IgOHM.sol\":\"IgOHM\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/interfaces/IgOHM.sol\":{\"keccak256\":\"0x07c71d7fed4e1b0792386a2caa413567ccc31715f76da2ffa0b5d9fd093d3949\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://055ba0926a736a66249fbecfed5aed1c8738dfd809d924594364e4f977b8108d\",\"dweb:/ipfs/QmWLaJgoHaZwMUDtAA3J13x2hSuyxHoMVV5HG5M3Cz6Qq2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IsOHM.sol": {
				"IsOHM": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gons",
									"type": "uint256"
								}
							],
							"name": "balanceForGons",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "debtor",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "add",
									"type": "bool"
								}
							],
							"name": "changeDebt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "circulatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "debtBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "fromG",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "gonsForBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ohmProfit_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "epoch_",
									"type": "uint256"
								}
							],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "toG",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceForGons(uint256)": "7965d56d",
							"balanceOf(address)": "70a08231",
							"changeDebt(uint256,address,bool)": "ae5c6cd3",
							"circulatingSupply()": "9358928b",
							"debtBalances(address)": "c4ef1c4c",
							"fromG(uint256)": "b8fbd533",
							"gonsForBalance(uint256)": "1bd39674",
							"index()": "2986c0e5",
							"rebase(uint256,uint256)": "058ecdb4",
							"toG(uint256)": "095be818",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gons\",\"type\":\"uint256\"}],\"name\":\"balanceForGons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"}],\"name\":\"changeDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"debtBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fromG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"gonsForBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ohmProfit_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epoch_\",\"type\":\"uint256\"}],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"toG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IsOHM.sol\":\"IsOHM\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/interfaces/IsOHM.sol\":{\"keccak256\":\"0x1f8fc522fcdeb73e31e7b3e3516668d2cdaa59b5953ecd889abf797412f5caaf\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://177b980ca09e3d6f4d00bd2ed214a78aecaf2c1e2d36976320f23082bd7dfc74\",\"dweb:/ipfs/QmeJERJtDCiLV8ooXM2VW5RVJxgFdQA5cLABNi85MRseg3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Address.sol\":149:9619  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Address.sol\":149:9619  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x5FE0C6F99DEA5E 0xAA CHAINID PUSH13 0xCD5A2E5C35138FB5FE40169983 0xC1 ORIGIN 0x1E 0x4E RETURNDATASIZE PUSH13 0xEC7A64736F6C63430007050033 ",
							"sourceMap": "149:9470:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x5FE0C6F99DEA5E 0xAA CHAINID PUSH13 0xCD5A2E5C35138FB5FE40169983 0xC1 ORIGIN 0x1E 0x4E RETURNDATASIZE PUSH13 0xEC7A64736F6C63430007050033 ",
							"sourceMap": "149:9470:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"addressToString(address)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033",
									".code": [
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":175:3052  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":175:3052  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 0x4C 0x4C PUSH14 0xFF67B13F174443E5BDD67E29FD1D 0xE3 0xDA CALLDATACOPY PUSH16 0x2A96F1346627D2D79E64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "175:2877:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 0x4C 0x4C PUSH14 0xFF67B13F174443E5BDD67E29FD1D 0xE3 0xDA CALLDATACOPY PUSH16 0x2A96F1346627D2D79E64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "175:2877:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"bondingCurve(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"percentageAmount(uint256,uint8)": "infinite",
								"percentageOfTotal(uint256,uint256)": "infinite",
								"quadraticPricing(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"substractPercentage(uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
									".code": [
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/types/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/types/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/types/ERC20.sol\":{\"keccak256\":\"0xa1b58a3231d7efe286f6bf32ecbdbd2a8a8395c70da96d960e3e0ecf1a6e0aa2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8fcb5129cdae755dabf3798f92161941944f899154a0eaab2dda0a1e5f78ee03\",\"dweb:/ipfs/QmSRzMKPL8kYhc521GKDuzgyHvqFsP5VMxw532XXadyBNV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1665,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1671,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1673,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1675,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1677,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1679,
								"contract": "contracts/types/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/gOHM.sol": {
				"ast": {
					"absolutePath": "contracts/gOHM.sol",
					"exportedSymbols": {
						"Address": [
							1307
						],
						"ERC20": [
							2142
						],
						"IERC20": [
							747
						],
						"IgOHM": [
							793
						],
						"IsOHM": [
							862
						],
						"SafeMath": [
							1647
						],
						"gOHM": [
							670
						]
					},
					"id": 671,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"absolutePath": "contracts/interfaces/IgOHM.sol",
							"file": "./interfaces/IgOHM.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 671,
							"sourceUnit": 794,
							"src": "137:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/types/ERC20.sol",
							"file": "./types/ERC20.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 671,
							"sourceUnit": 2143,
							"src": "170:27:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Address.sol",
							"file": "./libraries/Address.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 671,
							"sourceUnit": 1308,
							"src": "198:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 671,
							"sourceUnit": 1648,
							"src": "232:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IsOHM.sol",
							"file": "./interfaces/IsOHM.sol",
							"id": 6,
							"nodeType": "ImportDirective",
							"scope": 671,
							"sourceUnit": 863,
							"src": "267:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IgOHM",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 793,
										"src": "317:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IgOHM_$793",
											"typeString": "contract IgOHM"
										}
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "317:5:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2142,
										"src": "324:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$2142",
											"typeString": "contract ERC20"
										}
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "324:5:0"
								}
							],
							"contractDependencies": [
								747,
								793,
								2142
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 670,
							"linearizedBaseContracts": [
								670,
								2142,
								793,
								747
							],
							"name": "gOHM",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 13,
									"libraryName": {
										"id": 11,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1307,
										"src": "389:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1307",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "383:26:0",
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "401:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 16,
									"libraryName": {
										"id": 14,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1647,
										"src": "420:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1647",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "414:27:0",
									"typeName": {
										"id": 15,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "433:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "514:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 19,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "532:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "532:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 21,
																"name": "approved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "546:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "532:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920617070726f766564",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "556:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15ff10ffb8da60a29525c4da29c56443e7298e9a624fe98c8feefdc7fc1d8f51",
																"typeString": "literal_string \"Only approved\""
															},
															"value": "Only approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15ff10ffb8da60a29525c4da29c56443e7298e9a624fe98c8feefdc7fc1d8f51",
																"typeString": "literal_string \"Only approved\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "524:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "524:48:0"
											},
											{
												"id": 26,
												"nodeType": "PlaceholderStatement",
												"src": "582:1:0"
											}
										]
									},
									"id": 28,
									"name": "onlyApproved",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:0"
									},
									"src": "490:100:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 36,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "658:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "685:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "715:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:85:0"
									},
									"src": "636:107:0"
								},
								{
									"anonymous": false,
									"id": 44,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "775:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "801:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "826:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "774:71:0"
									},
									"src": "748:98:0"
								},
								{
									"canonicalName": "gOHM.Checkpoint",
									"id": 49,
									"members": [
										{
											"constant": false,
											"id": 46,
											"mutability": "mutable",
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"scope": 49,
											"src": "1005:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 45,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1005:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 48,
											"mutability": "mutable",
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"scope": 49,
											"src": "1032:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 47,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1032:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 670,
									"src": "977:75:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "15079925",
									"id": 51,
									"mutability": "mutable",
									"name": "sOHM",
									"nodeType": "VariableDeclaration",
									"scope": 670,
									"src": "1107:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IsOHM_$862",
										"typeString": "contract IsOHM"
									},
									"typeName": {
										"id": 50,
										"name": "IsOHM",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 862,
										"src": "1107:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IsOHM_$862",
											"typeString": "contract IsOHM"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19d40b08",
									"id": 53,
									"mutability": "mutable",
									"name": "approved",
									"nodeType": "VariableDeclaration",
									"scope": 670,
									"src": "1130:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 52,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1130:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c678c64",
									"id": 55,
									"mutability": "mutable",
									"name": "migrated",
									"nodeType": "VariableDeclaration",
									"scope": 670,
									"src": "1169:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 54,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1169:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0cdfebfa",
									"id": 61,
									"mutability": "mutable",
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"scope": 670,
									"src": "1196:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint))"
									},
									"typeName": {
										"id": 60,
										"keyType": {
											"id": 56,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1204:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1196:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint))"
										},
										"valueType": {
											"id": 59,
											"keyType": {
												"id": 57,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1223:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1215:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$",
												"typeString": "mapping(uint256 => struct gOHM.Checkpoint)"
											},
											"valueType": {
												"id": 58,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 49,
												"src": "1234:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$49_storage_ptr",
													"typeString": "struct gOHM.Checkpoint"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6fcfff45",
									"id": 65,
									"mutability": "mutable",
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"scope": 670,
									"src": "1271:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 64,
										"keyType": {
											"id": 62,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1279:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1271:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 63,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1290:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "587cde1e",
									"id": 69,
									"mutability": "mutable",
									"name": "delegates",
									"nodeType": "VariableDeclaration",
									"scope": 670,
									"src": "1326:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 68,
										"keyType": {
											"id": 66,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1334:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1326:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 67,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1345:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1516:194:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 82,
																"name": "_migrator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "1534:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1555:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1547:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 83,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1547:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1547:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1534:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573733a204d69677261746f72",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1559:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ca9789299c8c5101c0881623fa524f16013e50d09e76e38991c8eb796cde474",
																"typeString": "literal_string \"Zero address: Migrator\""
															},
															"value": "Zero address: Migrator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ca9789299c8c5101c0881623fa524f16013e50d09e76e38991c8eb796cde474",
																"typeString": "literal_string \"Zero address: Migrator\""
															}
														],
														"id": 81,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1526:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1526:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1526:58:0"
											},
											{
												"expression": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 91,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "1594:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 92,
														"name": "_migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "1605:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1594:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1594:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 96,
																"name": "_sOHM",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1632:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1649:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1641:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 97,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1641:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1641:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1632:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573733a20734f484d",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1653:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68d8249b3497a4c127e914e83f675d703dd2f1e62c8b7a55be983bf80c9fca4b",
																"typeString": "literal_string \"Zero address: sOHM\""
															},
															"value": "Zero address: sOHM"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68d8249b3497a4c127e914e83f675d703dd2f1e62c8b7a55be983bf80c9fca4b",
																"typeString": "literal_string \"Zero address: sOHM\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1624:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1624:50:0"
											},
											{
												"expression": {
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 105,
														"name": "sOHM",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1684:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IsOHM_$862",
															"typeString": "contract IsOHM"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 107,
																"name": "_sOHM",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1697:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 106,
															"name": "IsOHM",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "1691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IsOHM_$862_$",
																"typeString": "type(contract IsOHM)"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1691:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IsOHM_$862",
															"typeString": "contract IsOHM"
														}
													},
													"src": "1684:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IsOHM_$862",
														"typeString": "contract IsOHM"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1684:19:0"
											}
										]
									},
									"id": 112,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "476f7665726e616e6365204f484d",
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1482:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_fbdf5a2b82c090b03a2a1b8c19e898c463fd9b0fd4572e2adfbdcf170eab0ede",
														"typeString": "literal_string \"Governance OHM\""
													},
													"value": "Governance OHM"
												},
												{
													"hexValue": "674f484d",
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1500:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_62132379ab095a957bea673868fd8ca310f21fdfff543a38a728e6b37c3bd221",
														"typeString": "literal_string \"gOHM\""
													},
													"value": "gOHM"
												},
												{
													"hexValue": "3138",
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1508:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												}
											],
											"id": 79,
											"modifierName": {
												"id": 75,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2142,
												"src": "1476:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$2142_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1476:35:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "_migrator",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1434:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "_sOHM",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1453:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:34:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1516:0:0"
									},
									"scope": 670,
									"src": "1422:288:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										792
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "2057:314:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2075:9:0",
															"subExpression": {
																"id": 124,
																"name": "migrated",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "2076:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69677261746564",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2086:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a23ad0b3e6d6da716bd56740546067dd07bfa97fecbe471c0b1c3c3511fd8f8",
																"typeString": "literal_string \"Migrated\""
															},
															"value": "Migrated"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a23ad0b3e6d6da716bd56740546067dd07bfa97fecbe471c0b1c3c3511fd8f8",
																"typeString": "literal_string \"Migrated\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2067:30:0"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "migrated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "2107:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2118:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2107:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2107:15:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 134,
																"name": "_staking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2141:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 135,
																"name": "approved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "2153:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2141:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420617267756d656e74",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2163:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1192e0f5cd7d0bf2a1799e1224fc2feb220f2de0cf176153b2333fca971efc4",
																"typeString": "literal_string \"Invalid argument\""
															},
															"value": "Invalid argument"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1192e0f5cd7d0bf2a1799e1224fc2feb220f2de0cf176153b2333fca971efc4",
																"typeString": "literal_string \"Invalid argument\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2133:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2133:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2133:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 141,
																"name": "_staking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2200:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2220:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2212:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 142,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2212:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2212:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2200:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f206164647265737320666f756e64",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2224:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60358ec3fe893faf5f4d43b9e870ee9850732466bdae49b9352ebabed561effc",
																"typeString": "literal_string \"Zero address found\""
															},
															"value": "Zero address found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60358ec3fe893faf5f4d43b9e870ee9850732466bdae49b9352ebabed561effc",
																"typeString": "literal_string \"Zero address found\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2192:53:0"
											},
											{
												"expression": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "2255:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 151,
														"name": "_staking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2266:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2255:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "2255:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 155,
																"name": "_sOHM",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "2293:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2310:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2302:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 156,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2302:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2302:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2293:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f206164647265737320666f756e64",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2314:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60358ec3fe893faf5f4d43b9e870ee9850732466bdae49b9352ebabed561effc",
																"typeString": "literal_string \"Zero address found\""
															},
															"value": "Zero address found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60358ec3fe893faf5f4d43b9e870ee9850732466bdae49b9352ebabed561effc",
																"typeString": "literal_string \"Zero address found\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2285:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2285:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2285:50:0"
											},
											{
												"expression": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 164,
														"name": "sOHM",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "2345:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IsOHM_$862",
															"typeString": "contract IsOHM"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 166,
																"name": "_sOHM",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "2358:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 165,
															"name": "IsOHM",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "2352:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IsOHM_$862_$",
																"typeString": "type(contract IsOHM)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2352:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IsOHM_$862",
															"typeString": "contract IsOHM"
														}
													},
													"src": "2345:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IsOHM_$862",
														"typeString": "contract IsOHM"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "2345:19:0"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "1768:203:0",
										"text": " @notice transfer mint rights from migrator to staking\n @notice can only be done once, at the time of contract migration\n @param _staking address\n @param _sOHM address"
									},
									"functionSelector": "1068361f",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 121,
											"modifierName": {
												"id": 120,
												"name": "onlyApproved",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 28,
												"src": "2044:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2044:12:0"
										}
									],
									"name": "migrate",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 119,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2035:8:0"
									},
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "_staking",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1993:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "_sOHM",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2011:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1992:33:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:0:0"
									},
									"scope": 670,
									"src": "1976:395:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "2559:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 178,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2586:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2586:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 180,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2598:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 177,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "2576:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2576:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 176,
												"id": 182,
												"nodeType": "Return",
												"src": "2569:39:0"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "2377:131:0",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
									},
									"functionSelector": "5c19a95c",
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "2531:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:19:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2559:0:0"
									},
									"scope": 670,
									"src": "2513:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										759
									],
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "2793:36:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 196,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "2809:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 197,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "2814:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 195,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2029,
														"src": "2803:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2803:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "2803:19:0"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "2621:92:0",
										"text": "@notice mint gOHM\n@param _to address\n@param _amount uint"
									},
									"functionSelector": "40c10f19",
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 193,
											"modifierName": {
												"id": 192,
												"name": "onlyApproved",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 28,
												"src": "2780:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2780:12:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 191,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2771:8:0"
									},
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "2732:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "2745:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2731:30:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2793:0:0"
									},
									"scope": 670,
									"src": "2718:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										766
									],
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "3011:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "3027:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 214,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "3034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "3021:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3021:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "3021:21:0"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "2835:94:0",
										"text": "@notice burn gOHM\n@param _from address\n@param _amount uint"
									},
									"functionSelector": "9dc29fac",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 210,
											"modifierName": {
												"id": 209,
												"name": "onlyApproved",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 28,
												"src": "2998:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2998:12:0"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 208,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2989:8:0"
									},
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2963:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2947:32:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3011:0:0"
									},
									"scope": 670,
									"src": "2934:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										771
									],
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "3217:36:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 225,
															"name": "sOHM",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "3234:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IsOHM_$862",
																"typeString": "contract IsOHM"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "index",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 831,
														"src": "3234:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3234:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 228,
												"nodeType": "Return",
												"src": "3227:19:0"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "3103:53:0",
										"text": " @notice pull index from sOHM token"
									},
									"functionSelector": "2986c0e5",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 221,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3190:8:0"
									},
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3175:2:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3208:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:9:0"
									},
									"scope": 670,
									"src": "3161:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										778
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3445:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3487:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 246,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "3491:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																		"typeString": "function () view returns (uint8)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3491:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "3487:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 241,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 230,
																		"src": "3474:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3474:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 239,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "3462:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1411,
																"src": "3462:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3462:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1427,
														"src": "3462:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 238,
												"id": 250,
												"nodeType": "Return",
												"src": "3455:47:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "3259:104:0",
										"text": "@notice converts gOHM amount to OHM\n@param _amount uint\n@return uint"
									},
									"functionSelector": "a8248768",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3418:8:0"
									},
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3389:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3388:17:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3436:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:9:0"
									},
									"scope": 670,
									"src": "3368:141:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										785
									],
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "3699:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 269,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "3748:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3748:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3728:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 264,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1729,
																			"src": "3732:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3732:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "3728:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 261,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "3716:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1411,
																"src": "3716:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3716:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1427,
														"src": "3716:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3716:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 260,
												"id": 272,
												"nodeType": "Return",
												"src": "3709:47:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3515:104:0",
										"text": "@notice converts OHM amount to gOHM\n@param _amount uint\n@return uint"
									},
									"functionSelector": "66a5236c",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceTo",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 257,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3672:8:0"
									},
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "3643:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3642:17:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "3690:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3689:9:0"
									},
									"scope": 670,
									"src": "3624:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "4031:147:0",
										"statements": [
											{
												"assignments": [
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 302,
														"src": "4041:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 282,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 287,
												"initialValue": {
													"baseExpression": {
														"id": 284,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "4064:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 286,
													"indexExpression": {
														"id": 285,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "4079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4064:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4041:46:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 288,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4104:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4119:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4104:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4170:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4104:67:0",
													"trueExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 291,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4123:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint storage ref))"
																	}
																},
																"id": 293,
																"indexExpression": {
																	"id": 292,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "4135:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4123:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$",
																	"typeString": "mapping(uint256 => struct gOHM.Checkpoint storage ref)"
																}
															},
															"id": 297,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 294,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "4144:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4159:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4144:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4123:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$49_storage",
																"typeString": "struct gOHM.Checkpoint storage ref"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 48,
														"src": "4123:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 281,
												"id": 301,
												"nodeType": "Return",
												"src": "4097:74:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "3769:183:0",
										"text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
									},
									"functionSelector": "b4b5ea57",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3982:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3981:17:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "4022:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4021:9:0"
									},
									"scope": 670,
									"src": "3957:221:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "4693:1103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 314,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "4711:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 315,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "4725:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "4725:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4711:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "674f484d3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af7c5741dc8cf648e56d5bf296014d9d34a36f052c1eefaa826779d4817e5e92",
																"typeString": "literal_string \"gOHM::getPriorVotes: not yet determined\""
															},
															"value": "gOHM::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af7c5741dc8cf648e56d5bf296014d9d34a36f052c1eefaa826779d4817e5e92",
																"typeString": "literal_string \"gOHM::getPriorVotes: not yet determined\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4703:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4703:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "4703:78:0"
											},
											{
												"assignments": [
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 322,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "4792:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4792:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"baseExpression": {
														"id": 323,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "4815:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 325,
													"indexExpression": {
														"id": 324,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "4830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4815:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4792:46:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 327,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "4852:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4868:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4852:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 333,
												"nodeType": "IfStatement",
												"src": "4848:56:0",
												"trueBody": {
													"id": 332,
													"nodeType": "Block",
													"src": "4871:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4892:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 312,
															"id": 331,
															"nodeType": "Return",
															"src": "4885:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 334,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4961:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint storage ref))"
																	}
																},
																"id": 336,
																"indexExpression": {
																	"id": 335,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "4973:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4961:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$",
																	"typeString": "mapping(uint256 => struct gOHM.Checkpoint storage ref)"
																}
															},
															"id": 340,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 337,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "4982:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4997:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4982:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4961:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$49_storage",
																"typeString": "struct gOHM.Checkpoint storage ref"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 46,
														"src": "4961:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 342,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "5013:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4961:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 354,
												"nodeType": "IfStatement",
												"src": "4957:145:0",
												"trueBody": {
													"id": 353,
													"nodeType": "Block",
													"src": "5026:76:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 344,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "5047:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint storage ref))"
																			}
																		},
																		"id": 346,
																		"indexExpression": {
																			"id": 345,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "5059:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5047:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$",
																			"typeString": "mapping(uint256 => struct gOHM.Checkpoint storage ref)"
																		}
																	},
																	"id": 350,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 347,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 322,
																			"src": "5068:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5083:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5068:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5047:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$49_storage",
																		"typeString": "struct gOHM.Checkpoint storage ref"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 48,
																"src": "5047:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 312,
															"id": 352,
															"nodeType": "Return",
															"src": "5040:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 355,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "5160:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint storage ref))"
																	}
																},
																"id": 357,
																"indexExpression": {
																	"id": 356,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "5172:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5160:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$",
																	"typeString": "mapping(uint256 => struct gOHM.Checkpoint storage ref)"
																}
															},
															"id": 359,
															"indexExpression": {
																"hexValue": "30",
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5181:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5160:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$49_storage",
																"typeString": "struct gOHM.Checkpoint storage ref"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 46,
														"src": "5160:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 361,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "5196:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5160:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 366,
												"nodeType": "IfStatement",
												"src": "5156:86:0",
												"trueBody": {
													"id": 365,
													"nodeType": "Block",
													"src": "5209:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5230:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 312,
															"id": 364,
															"nodeType": "Return",
															"src": "5223:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "5252:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"hexValue": "30",
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5268:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5252:17:0"
											},
											{
												"assignments": [
													372
												],
												"declarations": [
													{
														"constant": false,
														"id": 372,
														"mutability": "mutable",
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "5279:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 371,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5279:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 376,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 373,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "5295:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5310:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5295:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5279:32:0"
											},
											{
												"body": {
													"id": 425,
													"nodeType": "Block",
													"src": "5343:397:0",
													"statements": [
														{
															"assignments": [
																381
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 381,
																	"mutability": "mutable",
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"scope": 425,
																	"src": "5357:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 380,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5357:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 390,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 382,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "5374:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 385,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 383,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 372,
																					"src": "5383:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 384,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 368,
																					"src": "5391:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5383:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 386,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5382:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5400:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5382:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5374:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5357:44:0"
														},
														{
															"assignments": [
																392
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 392,
																	"mutability": "mutable",
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"scope": 425,
																	"src": "5442:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$49_memory_ptr",
																		"typeString": "struct gOHM.Checkpoint"
																	},
																	"typeName": {
																		"id": 391,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 49,
																		"src": "5442:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$49_storage_ptr",
																			"typeString": "struct gOHM.Checkpoint"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 398,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 393,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "5465:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint storage ref))"
																		}
																	},
																	"id": 395,
																	"indexExpression": {
																		"id": 394,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "5477:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5465:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$",
																		"typeString": "mapping(uint256 => struct gOHM.Checkpoint storage ref)"
																	}
																},
																"id": 397,
																"indexExpression": {
																	"id": 396,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "5486:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5465:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$49_storage",
																	"typeString": "struct gOHM.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5442:51:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 399,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5511:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$49_memory_ptr",
																			"typeString": "struct gOHM.Checkpoint memory"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 46,
																	"src": "5511:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 401,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5527:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5511:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 407,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 392,
																			"src": "5598:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$49_memory_ptr",
																				"typeString": "struct gOHM.Checkpoint memory"
																			}
																		},
																		"id": 408,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "5598:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 409,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "5613:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5598:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 422,
																	"nodeType": "Block",
																	"src": "5679:51:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 416,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 372,
																					"src": "5697:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 419,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 417,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 381,
																						"src": "5705:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 418,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5714:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5705:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5697:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 421,
																			"nodeType": "ExpressionStatement",
																			"src": "5697:18:0"
																		}
																	]
																},
																"id": 423,
																"nodeType": "IfStatement",
																"src": "5594:136:0",
																"trueBody": {
																	"id": 415,
																	"nodeType": "Block",
																	"src": "5626:47:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 411,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 368,
																					"src": "5644:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 412,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 381,
																					"src": "5652:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5644:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 414,
																			"nodeType": "ExpressionStatement",
																			"src": "5644:14:0"
																		}
																	]
																}
															},
															"id": 424,
															"nodeType": "IfStatement",
															"src": "5507:223:0",
															"trueBody": {
																"id": 406,
																"nodeType": "Block",
																"src": "5540:48:0",
																"statements": [
																	{
																		"expression": {
																			"expression": {
																				"id": 403,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 392,
																				"src": "5565:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$49_memory_ptr",
																					"typeString": "struct gOHM.Checkpoint memory"
																				}
																			},
																			"id": 404,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 48,
																			"src": "5565:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 312,
																		"id": 405,
																		"nodeType": "Return",
																		"src": "5558:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 377,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "5328:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 378,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "5336:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5328:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 426,
												"nodeType": "WhileStatement",
												"src": "5321:419:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 427,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "5756:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint storage ref))"
																}
															},
															"id": 429,
															"indexExpression": {
																"id": 428,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "5768:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5756:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$",
																"typeString": "mapping(uint256 => struct gOHM.Checkpoint storage ref)"
															}
														},
														"id": 431,
														"indexExpression": {
															"id": 430,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "5777:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5756:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$49_storage",
															"typeString": "struct gOHM.Checkpoint storage ref"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 48,
													"src": "5756:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 312,
												"id": 433,
												"nodeType": "Return",
												"src": "5749:40:0"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "4184:411:0",
										"text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
									},
									"functionSelector": "782d6fe1",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "4623:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "4640:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4622:38:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "4684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4683:9:0"
									},
									"scope": 670,
									"src": "4600:1196:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "5920:303:0",
										"statements": [
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "5930:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 442,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5930:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"baseExpression": {
														"id": 444,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "5956:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 446,
													"indexExpression": {
														"id": 445,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "5966:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5956:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5930:46:0"
											},
											{
												"assignments": [
													449
												],
												"declarations": [
													{
														"constant": false,
														"id": 449,
														"mutability": "mutable",
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "5986:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 448,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 453,
												"initialValue": {
													"baseExpression": {
														"id": 450,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "6013:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 452,
													"indexExpression": {
														"id": 451,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "6023:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6013:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5986:47:0"
											},
											{
												"expression": {
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 454,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "6043:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 456,
														"indexExpression": {
															"id": 455,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "6053:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6043:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 457,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "6066:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6043:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "6043:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 461,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "6107:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "6118:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "6135:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 460,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "6091:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6091:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "6086:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 467,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "6171:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "6188:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "6199:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 466,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "6156:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "6156:60:0"
											}
										]
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "5873:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "5892:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5872:38:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5920:0:0"
									},
									"scope": 670,
									"src": "5854:369:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "6340:756:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 482,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "6354:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 483,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6364:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6354:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 485,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "6374:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6383:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6374:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6354:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 578,
												"nodeType": "IfStatement",
												"src": "6350:740:0",
												"trueBody": {
													"id": 577,
													"nodeType": "Block",
													"src": "6386:704:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 489,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "6404:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6422:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6414:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 490,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6414:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6414:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "6404:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 532,
															"nodeType": "IfStatement",
															"src": "6400:333:0",
															"trueBody": {
																"id": 531,
																"nodeType": "Block",
																"src": "6426:307:0",
																"statements": [
																	{
																		"assignments": [
																			496
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 496,
																				"mutability": "mutable",
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 531,
																				"src": "6444:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 495,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6444:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 500,
																		"initialValue": {
																			"baseExpression": {
																				"id": 497,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 65,
																				"src": "6464:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 499,
																			"indexExpression": {
																				"id": 498,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 475,
																				"src": "6479:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6464:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6444:42:0"
																	},
																	{
																		"assignments": [
																			502
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 502,
																				"mutability": "mutable",
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 531,
																				"src": "6504:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 501,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6504:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 516,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 503,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 496,
																					"src": "6524:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 504,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6536:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "6524:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6583:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "6524:60:0",
																			"trueExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 506,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 61,
																							"src": "6540:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
																								"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint storage ref))"
																							}
																						},
																						"id": 508,
																						"indexExpression": {
																							"id": 507,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 475,
																							"src": "6552:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6540:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$",
																							"typeString": "mapping(uint256 => struct gOHM.Checkpoint storage ref)"
																						}
																					},
																					"id": 512,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 511,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 509,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 496,
																							"src": "6560:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 510,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6572:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "6560:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6540:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$49_storage",
																						"typeString": "struct gOHM.Checkpoint storage ref"
																					}
																				},
																				"id": 513,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 48,
																				"src": "6540:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6504:80:0"
																	},
																	{
																		"assignments": [
																			518
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 518,
																				"mutability": "mutable",
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 531,
																				"src": "6602:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 517,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6602:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 523,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 521,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 479,
																					"src": "6636:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 519,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "6622:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1350,
																				"src": "6622:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6622:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6602:41:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 525,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 475,
																					"src": "6678:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 526,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 496,
																					"src": "6686:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 527,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "6697:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 528,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 518,
																					"src": "6708:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 524,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "6661:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256,uint256)"
																				}
																			},
																			"id": 529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6661:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 530,
																		"nodeType": "ExpressionStatement",
																		"src": "6661:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 533,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "6751:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6769:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6761:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 534,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6761:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6761:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "6751:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 576,
															"nodeType": "IfStatement",
															"src": "6747:333:0",
															"trueBody": {
																"id": 575,
																"nodeType": "Block",
																"src": "6773:307:0",
																"statements": [
																	{
																		"assignments": [
																			540
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 540,
																				"mutability": "mutable",
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 575,
																				"src": "6791:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 539,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6791:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 544,
																		"initialValue": {
																			"baseExpression": {
																				"id": 541,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 65,
																				"src": "6811:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 543,
																			"indexExpression": {
																				"id": 542,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 477,
																				"src": "6826:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6811:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6791:42:0"
																	},
																	{
																		"assignments": [
																			546
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 546,
																				"mutability": "mutable",
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 575,
																				"src": "6851:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 545,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6851:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 560,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 547,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 540,
																					"src": "6871:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6883:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "6871:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6930:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "6871:60:0",
																			"trueExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 550,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 61,
																							"src": "6887:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
																								"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint storage ref))"
																							}
																						},
																						"id": 552,
																						"indexExpression": {
																							"id": 551,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 477,
																							"src": "6899:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6887:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$",
																							"typeString": "mapping(uint256 => struct gOHM.Checkpoint storage ref)"
																						}
																					},
																					"id": 556,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 555,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 553,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 540,
																							"src": "6907:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 554,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6919:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "6907:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6887:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$49_storage",
																						"typeString": "struct gOHM.Checkpoint storage ref"
																					}
																				},
																				"id": 557,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 48,
																				"src": "6887:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6851:80:0"
																	},
																	{
																		"assignments": [
																			562
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 562,
																				"mutability": "mutable",
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 575,
																				"src": "6949:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 561,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6949:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 567,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 565,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 479,
																					"src": "6983:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 563,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 546,
																					"src": "6969:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1334,
																				"src": "6969:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6969:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6949:41:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 569,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 477,
																					"src": "7025:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 570,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 540,
																					"src": "7033:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 571,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 546,
																					"src": "7044:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 572,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 562,
																					"src": "7055:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 568,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "7008:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256,uint256)"
																				}
																			},
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7008:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 574,
																		"nodeType": "ExpressionStatement",
																		"src": "7008:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "6262:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "6286:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "6310:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:78:0"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6340:0:0"
									},
									"scope": 670,
									"src": "6229:867:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "7252:419:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 591,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "7266:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7281:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7266:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 594,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "7286:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint storage ref))"
																		}
																	},
																	"id": 596,
																	"indexExpression": {
																		"id": 595,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "7298:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7286:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$",
																		"typeString": "mapping(uint256 => struct gOHM.Checkpoint storage ref)"
																	}
																},
																"id": 600,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 597,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "7309:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7324:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "7309:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7286:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$49_storage",
																	"typeString": "struct gOHM.Checkpoint storage ref"
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 46,
															"src": "7286:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 602,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "7340:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "7340:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7286:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7266:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 638,
													"nodeType": "Block",
													"src": "7442:156:0",
													"statements": [
														{
															"expression": {
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 618,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "7456:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint storage ref))"
																			}
																		},
																		"id": 621,
																		"indexExpression": {
																			"id": 619,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "7468:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7456:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$",
																			"typeString": "mapping(uint256 => struct gOHM.Checkpoint storage ref)"
																		}
																	},
																	"id": 622,
																	"indexExpression": {
																		"id": 620,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "7479:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7456:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$49_storage",
																		"typeString": "struct gOHM.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 624,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "7506:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "7506:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 626,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "7520:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 623,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "7495:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$49_storage_ptr_$",
																			"typeString": "type(struct gOHM.Checkpoint storage pointer)"
																		}
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7495:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$49_memory_ptr",
																		"typeString": "struct gOHM.Checkpoint memory"
																	}
																},
																"src": "7456:73:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$49_storage",
																	"typeString": "struct gOHM.Checkpoint storage ref"
																}
															},
															"id": 629,
															"nodeType": "ExpressionStatement",
															"src": "7456:73:0"
														},
														{
															"expression": {
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 630,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 65,
																		"src": "7543:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 632,
																	"indexExpression": {
																		"id": 631,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "7558:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7543:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 633,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "7571:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7586:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "7571:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7543:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 637,
															"nodeType": "ExpressionStatement",
															"src": "7543:44:0"
														}
													]
												},
												"id": 639,
												"nodeType": "IfStatement",
												"src": "7262:336:0",
												"trueBody": {
													"id": 617,
													"nodeType": "Block",
													"src": "7354:82:0",
													"statements": [
														{
															"expression": {
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 606,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 61,
																				"src": "7368:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct gOHM.Checkpoint storage ref))"
																				}
																			},
																			"id": 611,
																			"indexExpression": {
																				"id": 607,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 582,
																				"src": "7380:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7368:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$49_storage_$",
																				"typeString": "mapping(uint256 => struct gOHM.Checkpoint storage ref)"
																			}
																		},
																		"id": 612,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 608,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 584,
																				"src": "7391:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7406:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "7391:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7368:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$49_storage",
																			"typeString": "struct gOHM.Checkpoint storage ref"
																		}
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 48,
																	"src": "7368:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 614,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "7417:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7368:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 616,
															"nodeType": "ExpressionStatement",
															"src": "7368:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 641,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "7634:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "7645:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 643,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "7655:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "7613:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7613:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "EmitStatement",
												"src": "7608:56:0"
											}
										]
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "7137:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "7164:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "7194:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "7220:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7127:115:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7252:0:0"
									},
									"scope": 670,
									"src": "7102:569:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2141
									],
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "7880:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 659,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "7905:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 661,
															"indexExpression": {
																"id": 660,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "7915:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7905:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 662,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "7922:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 664,
															"indexExpression": {
																"id": 663,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "7932:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7922:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "7937:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 658,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "7890:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7890:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "7890:54:0"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "7677:78:0",
										"text": "@notice Ensure delegation moves when token is transferred."
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 656,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7871:8:0"
									},
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "7799:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "7821:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "7841:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7789:72:0"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7880:0:0"
									},
									"scope": 670,
									"src": "7760:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 671,
							"src": "300:7653:0"
						}
					],
					"src": "112:7841:0"
				},
				"id": 0
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							747
						]
					},
					"id": 748,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 672,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "80:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 747,
							"linearizedBaseContracts": [
								747
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "126:62:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:1"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "237:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:1"
									},
									"scope": 747,
									"src": "191:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "250:68:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "340:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:17:1"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "380:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:9:1"
									},
									"scope": 747,
									"src": "321:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "393:197:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "611:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "630:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:35:1"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "664:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "664:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:6:1"
									},
									"scope": 747,
									"src": "593:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "674:252:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "948:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "963:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:32:1"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1003:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:9:1"
									},
									"scope": 747,
									"src": "929:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1016:616:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1669:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1651:33:1"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1703:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1703:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:6:1"
									},
									"scope": 747,
									"src": "1635:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "1713:280:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2018:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2034:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2053:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2017:51:1"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2087:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2086:6:1"
									},
									"scope": 747,
									"src": "1996:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "2097:148:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 737,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2285:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2305:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:57:1"
									},
									"src": "2248:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "2324:142:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 746,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2484:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2507:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2532:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2532:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:63:1"
									},
									"src": "2469:78:1"
								}
							],
							"scope": 748,
							"src": "105:2444:1"
						}
					],
					"src": "80:2469:1"
				},
				"id": 1
			},
			"contracts/interfaces/IgOHM.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IgOHM.sol",
					"exportedSymbols": {
						"IERC20": [
							747
						],
						"IgOHM": [
							793
						]
					},
					"id": 794,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 749,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "76:23:2"
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 750,
							"nodeType": "ImportDirective",
							"scope": 794,
							"sourceUnit": 748,
							"src": "100:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 751,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 747,
										"src": "146:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$747",
											"typeString": "contract IERC20"
										}
									},
									"id": 752,
									"nodeType": "InheritanceSpecifier",
									"src": "146:6:2"
								}
							],
							"contractDependencies": [
								747
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 793,
							"linearizedBaseContracts": [
								793,
								747
							],
							"name": "IgOHM",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 759,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "171:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "184:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "170:30:2"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:0:2"
									},
									"scope": 793,
									"src": "157:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "228:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "243:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:32:2"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "268:0:2"
									},
									"scope": 793,
									"src": "214:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2986c0e5",
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:2"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "313:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:9:2"
									},
									"scope": 793,
									"src": "273:49:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a8248768",
									"id": 778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "347:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:17:2"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "387:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:9:2"
									},
									"scope": 793,
									"src": "326:70:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "66a5236c",
									"id": 785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "419:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:17:2"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "459:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:9:2"
									},
									"scope": 793,
									"src": "400:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1068361f",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "_staking",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "_sOHM",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "508:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:35:2"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:0:2"
									},
									"scope": 793,
									"src": "472:61:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 794,
							"src": "127:408:2"
						}
					],
					"src": "76:461:2"
				},
				"id": 2
			},
			"contracts/interfaces/IsOHM.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IsOHM.sol",
					"exportedSymbols": {
						"IERC20": [
							747
						],
						"IsOHM": [
							862
						]
					},
					"id": 863,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 795,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "77:23:3"
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 796,
							"nodeType": "ImportDirective",
							"scope": 863,
							"sourceUnit": 748,
							"src": "101:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 797,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 747,
										"src": "144:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$747",
											"typeString": "contract IERC20"
										}
									},
									"id": 798,
									"nodeType": "InheritanceSpecifier",
									"src": "144:6:3"
								}
							],
							"contractDependencies": [
								747
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 862,
							"linearizedBaseContracts": [
								862,
								747
							],
							"name": "IsOHM",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "058ecdb4",
									"id": 807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "ohmProfit_",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "174:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "194:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "194:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:34:3"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "225:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:9:3"
									},
									"scope": 862,
									"src": "157:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9358928b",
									"id": 812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "circulatingSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:2:3"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "292:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:9:3"
									},
									"scope": 862,
									"src": "240:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1bd39674",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gonsForBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "332:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "332:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:15:3"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "370:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "370:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:8:3"
									},
									"scope": 862,
									"src": "307:70:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7965d56d",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceForGons",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "gons",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "408:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "408:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:13:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "444:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:8:3"
									},
									"scope": 862,
									"src": "383:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2986c0e5",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "471:2:3"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "498:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "498:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:8:3"
									},
									"scope": 862,
									"src": "457:48:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095be818",
									"id": 838,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "toG",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "524:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "524:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:13:3"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "560:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "560:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:6:3"
									},
									"scope": 862,
									"src": "511:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b8fbd533",
									"id": 845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fromG",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "587:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "587:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:13:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "623:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "623:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:6:3"
									},
									"scope": 862,
									"src": "572:57:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ae5c6cd3",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeDebt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "665:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "debtor",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "689:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "add",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "713:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "713:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:72:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:0:3"
									},
									"scope": 862,
									"src": "636:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c4ef1c4c",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "debtBalances",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "765:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:18:3"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "806:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:9:3"
									},
									"scope": 862,
									"src": "743:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 863,
							"src": "125:692:3"
						}
					],
					"src": "77:740:3"
				},
				"id": 3
			},
			"contracts/libraries/Address.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Address.sol",
					"exportedSymbols": {
						"Address": [
							1307
						]
					},
					"id": 1308,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 864,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "78:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1307,
							"linearizedBaseContracts": [
								1307
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "807:347:4",
										"statements": [
											{
												"assignments": [
													873
												],
												"declarations": [
													{
														"constant": false,
														"id": 873,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "1004:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 872,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1004:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"nodeType": "VariableDeclarationStatement",
												"src": "1004:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1091:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1093:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1113:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1101:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1093:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 867,
														"isOffset": false,
														"isSlot": false,
														"src": "1113:7:4",
														"valueSize": 1
													},
													{
														"declaration": 873,
														"isOffset": false,
														"isSlot": false,
														"src": "1093:4:4",
														"valueSize": 1
													}
												],
												"id": 875,
												"nodeType": "InlineAssembly",
												"src": "1082:41:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "1139:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1146:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1139:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 871,
												"id": 879,
												"nodeType": "Return",
												"src": "1132:15:4"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "171:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "761:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:17:4"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "801:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "801:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:6:4"
									},
									"scope": 1307,
									"src": "741:413:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2142:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 892,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2168:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1307",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1307",
																				"typeString": "library Address"
																			}
																		],
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2160:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 890,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2160:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2160:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2160:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 895,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2185:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2160:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2152:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "2152:73:4"
											},
											{
												"assignments": [
													901,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 901,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "2314:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 900,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2314:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 908,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2364:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 902,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "2332:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2332:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 904,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2355:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2332:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2332:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2313:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "2385:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2394:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2377:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2377:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "2377:78:4"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "1160:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2090:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2117:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:43:4"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2142:0:4"
									},
									"scope": 1307,
									"src": "2071:391:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "3292:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3320:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "3328:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3334:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 925,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															932,
															952
														],
														"referencedDeclaration": 952,
														"src": "3307:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3307:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 924,
												"id": 930,
												"nodeType": "Return",
												"src": "3300:67:4"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "2468:730:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3225:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3241:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3241:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:35:4"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3278:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 922,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3278:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3277:14:4"
									},
									"scope": 1307,
									"src": "3203:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "3713:77:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 945,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "3753:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "3761:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3767:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 948,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "3770:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 944,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "3730:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3730:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 943,
												"id": 950,
												"nodeType": "Return",
												"src": "3723:60:4"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "3380:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3618:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3618:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3634:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 936,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3634:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3653:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 938,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3653:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3617:63:4"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3699:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 941,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3699:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3698:14:4"
									},
									"scope": 1307,
									"src": "3596:194:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "4265:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 965,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "4304:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "4312:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 967,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "4318:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 964,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															972,
															1022
														],
														"referencedDeclaration": 1022,
														"src": "4282:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4282:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 963,
												"id": 970,
												"nodeType": "Return",
												"src": "4275:94:4"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "3796:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4183:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4183:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4199:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4199:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4218:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4182:50:4"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4251:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 961,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4251:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4250:14:4"
									},
									"scope": 1307,
									"src": "4152:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "5095:382:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 989,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5121:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1307",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1307",
																				"typeString": "library Address"
																			}
																		],
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5113:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 987,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5113:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5113:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5113:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 992,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "5138:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5113:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5145:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5105:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "5105:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 999,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "5215:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 998,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "5204:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5204:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5224:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5196:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5196:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "5196:60:4"
											},
											{
												"assignments": [
													1005,
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "5327:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1004,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5327:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "5341:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1006,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5341:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1014,
												"initialValue": {
													"arguments": [
														{
															"id": 1012,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "5396:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1008,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "5368:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5368:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1010,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "5388:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5368:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5326:75:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1016,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "5436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1017,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "5445:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1018,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "5457:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1015,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "5418:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5418:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 985,
												"id": 1020,
												"nodeType": "Return",
												"src": "5411:59:4"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "4382:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4985:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4985:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5001:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5001:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5020:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5020:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5035:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 980,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5035:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4984:78:4"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5081:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5081:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5080:14:4"
									},
									"scope": 1307,
									"src": "4954:523:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "5627:814:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1037,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "5656:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1036,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "5645:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5645:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5665:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1035,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5637:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5637:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "5637:60:4"
											},
											{
												"assignments": [
													1043,
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "5768:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1042,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1045,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "5782:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1044,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5782:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1052,
												"initialValue": {
													"arguments": [
														{
															"id": 1050,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "5840:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1046,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "5809:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5809:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1048,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "5829:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5809:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5767:78:4"
											},
											{
												"condition": {
													"id": 1053,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1043,
													"src": "5859:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1069,
													"nodeType": "Block",
													"src": "5916:519:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1057,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "6000:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6000:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6000:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1067,
																"nodeType": "Block",
																"src": "6372:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1064,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1030,
																					"src": "6397:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1063,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6390:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6390:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1066,
																		"nodeType": "ExpressionStatement",
																		"src": "6390:20:4"
																	}
																]
															},
															"id": 1068,
															"nodeType": "IfStatement",
															"src": "5996:429:4",
															"trueBody": {
																"id": 1062,
																"nodeType": "Block",
																"src": "6023:343:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6207:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6229:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6258:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6252:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6252:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6233:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6301:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6305:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6297:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6297:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6318:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6290:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6290:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6290:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1045,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6258:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1045,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6305:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1061,
																		"nodeType": "InlineAssembly",
																		"src": "6198:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1070,
												"nodeType": "IfStatement",
												"src": "5855:580:4",
												"trueBody": {
													"id": 1056,
													"nodeType": "Block",
													"src": "5868:42:4",
													"statements": [
														{
															"expression": {
																"id": 1054,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "5889:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1034,
															"id": 1055,
															"nodeType": "Return",
															"src": "5882:17:4"
														}
													]
												}
											}
										]
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "5515:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "5531:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5531:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "5550:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5550:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "5568:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1029,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5568:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5514:81:4"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "5613:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1032,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5613:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5612:14:4"
									},
									"scope": 1307,
									"src": "5483:958:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "6716:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1083,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "6752:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "6760:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6766:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1082,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1089,
															1124
														],
														"referencedDeclaration": 1124,
														"src": "6733:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6733:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1081,
												"id": 1087,
												"nodeType": "Return",
												"src": "6726:80:4"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "6445:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "6644:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6644:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "6660:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6660:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6643:35:4"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "6702:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6702:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6701:14:4"
									},
									"scope": 1307,
									"src": "6616:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "7125:288:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1103,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "7154:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1102,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "7143:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7143:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7163:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7135:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7135:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "7135:67:4"
											},
											{
												"assignments": [
													1109,
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1109,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "7273:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1108,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7273:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "7287:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1110,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7287:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1116,
												"initialValue": {
													"arguments": [
														{
															"id": 1114,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "7332:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1112,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "7314:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "7314:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7314:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7272:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1118,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "7372:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1119,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "7381:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1120,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "7393:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1117,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "7354:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7354:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1100,
												"id": 1122,
												"nodeType": "Return",
												"src": "7347:59:4"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "6819:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "7025:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "7041:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1093,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7041:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "7060:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1095,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7060:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:63:4"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "7111:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7111:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7110:14:4"
									},
									"scope": 1307,
									"src": "6997:416:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "7689:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1135,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "7727:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1136,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "7735:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7741:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1134,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1141,
															1176
														],
														"referencedDeclaration": 1176,
														"src": "7706:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7706:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1133,
												"id": 1139,
												"nodeType": "Return",
												"src": "7699:84:4"
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "7419:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "7622:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7622:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "7638:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7638:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7621:35:4"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "7675:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7675:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7674:14:4"
									},
									"scope": 1307,
									"src": "7592:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "8101:292:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1155,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "8130:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1154,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "8119:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8119:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8139:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8111:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8111:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "8111:69:4"
											},
											{
												"assignments": [
													1161,
													1163
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "8251:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1160,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8251:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1163,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "8265:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1162,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8265:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"arguments": [
														{
															"id": 1166,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "8312:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1164,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "8292:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "8292:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8292:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8250:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1170,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "8352:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1171,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "8361:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1172,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "8373:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1169,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "8334:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8334:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1152,
												"id": 1174,
												"nodeType": "Return",
												"src": "8327:59:4"
											}
										]
									},
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "7796:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "8006:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "8022:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8022:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "8041:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8041:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8005:63:4"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "8087:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1150,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8087:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8086:14:4"
									},
									"scope": 1307,
									"src": "7976:417:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "8528:596:4",
										"statements": [
											{
												"condition": {
													"id": 1187,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1178,
													"src": "8542:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1203,
													"nodeType": "Block",
													"src": "8599:519:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1191,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "8683:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8683:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8703:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8683:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1201,
																"nodeType": "Block",
																"src": "9055:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1198,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1182,
																					"src": "9080:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1197,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "9073:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9073:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1200,
																		"nodeType": "ExpressionStatement",
																		"src": "9073:20:4"
																	}
																]
															},
															"id": 1202,
															"nodeType": "IfStatement",
															"src": "8679:429:4",
															"trueBody": {
																"id": 1196,
																"nodeType": "Block",
																"src": "8706:343:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8890:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8912:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8941:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8935:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8935:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8916:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8984:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8988:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8980:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8980:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "9001:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8973:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8973:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8973:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1180,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8941:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1180,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8988:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1195,
																		"nodeType": "InlineAssembly",
																		"src": "8881:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1204,
												"nodeType": "IfStatement",
												"src": "8538:580:4",
												"trueBody": {
													"id": 1190,
													"nodeType": "Block",
													"src": "8551:42:4",
													"statements": [
														{
															"expression": {
																"id": 1188,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "8572:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1186,
															"id": 1189,
															"nodeType": "Return",
															"src": "8565:17:4"
														}
													]
												}
											}
										]
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "8426:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8426:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "8440:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8440:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "8465:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8465:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8425:67:4"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "8514:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8514:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8513:14:4"
									},
									"scope": 1307,
									"src": "8399:725:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "9210:407:4",
										"statements": [
											{
												"assignments": [
													1214
												],
												"declarations": [
													{
														"constant": false,
														"id": 1214,
														"mutability": "mutable",
														"name": "_bytes",
														"nodeType": "VariableDeclaration",
														"scope": 1305,
														"src": "9220:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1213,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9220:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1219,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "9253:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9245:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1217,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9245:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9245:17:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9237:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 1215,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9237:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9237:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9220:43:4"
											},
											{
												"assignments": [
													1224
												],
												"declarations": [
													{
														"constant": false,
														"id": 1224,
														"mutability": "mutable",
														"name": "HEX",
														"nodeType": "VariableDeclaration",
														"scope": 1305,
														"src": "9273:16:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1223,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9273:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"hexValue": "30313233343536373839616263646566",
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9292:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
														"typeString": "literal_string \"0123456789abcdef\""
													},
													"value": "0123456789abcdef"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9273:37:4"
											},
											{
												"assignments": [
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "_addr",
														"nodeType": "VariableDeclaration",
														"scope": 1305,
														"src": "9320:18:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1227,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9320:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3432",
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9351:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															},
															"value": "42"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															}
														],
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9341:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1229,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9345:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9341:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9320:34:4"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1234,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "9365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1236,
														"indexExpression": {
															"hexValue": "30",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9371:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9365:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9376:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "9365:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "9365:14:4"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1240,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "9389:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1242,
														"indexExpression": {
															"hexValue": "31",
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9395:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9389:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9400:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "9389:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "9389:14:4"
											},
											{
												"body": {
													"id": 1298,
													"nodeType": "Block",
													"src": "9446:133:4",
													"statements": [
														{
															"expression": {
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1256,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1228,
																		"src": "9460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1262,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "32",
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9466:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1258,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1247,
																				"src": "9468:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9470:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "9468:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9466:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9460:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1263,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "9475:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1274,
																	"indexExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 1272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 1266,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1214,
																						"src": "9485:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 1270,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1269,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1267,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1247,
																							"src": "9492:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3132",
																							"id": 1268,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9496:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "9492:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9485:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "34",
																					"id": 1271,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9503:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				},
																				"src": "9485:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9479:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 1264,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "9479:5:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9479:26:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9475:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "9460:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1276,
															"nodeType": "ExpressionStatement",
															"src": "9460:46:4"
														},
														{
															"expression": {
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1277,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1228,
																		"src": "9520:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1283,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9526:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1279,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1247,
																				"src": "9528:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9530:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "9528:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9526:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9520:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1284,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "9535:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1295,
																	"indexExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 1293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 1287,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1214,
																						"src": "9545:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 1291,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1290,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1288,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1247,
																							"src": "9552:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3132",
																							"id": 1289,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9556:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "9552:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9545:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"hexValue": "30783066",
																					"id": 1292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9562:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_15_by_1",
																						"typeString": "int_const 15"
																					},
																					"value": "0x0f"
																				},
																				"src": "9545:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9539:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 1285,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "9539:5:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9539:28:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9535:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "9520:48:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1297,
															"nodeType": "ExpressionStatement",
															"src": "9520:48:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1250,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "9433:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3230",
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9437:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "9433:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1299,
												"initializationExpression": {
													"assignments": [
														1247
													],
													"declarations": [
														{
															"constant": false,
															"id": 1247,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1299,
															"src": "9418:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1246,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9418:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1249,
													"initialValue": {
														"hexValue": "30",
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9430:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9418:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9441:3:4",
														"subExpression": {
															"id": 1253,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "9441:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1255,
													"nodeType": "ExpressionStatement",
													"src": "9441:3:4"
												},
												"nodeType": "ForStatement",
												"src": "9414:165:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1302,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "9603:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9596:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1300,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "9596:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9596:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1212,
												"id": 1304,
												"nodeType": "Return",
												"src": "9589:20:4"
											}
										]
									},
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addressToString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "9155:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9155:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9154:18:4"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "9195:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1210,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9195:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9194:15:4"
									},
									"scope": 1307,
									"src": "9130:487:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1308,
							"src": "149:9470:4"
						}
					],
					"src": "78:9541:4"
				},
				"id": 4
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1647
						]
					},
					"id": 1648,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1309,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "79:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1647,
							"linearizedBaseContracts": [
								1647
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "266:109:5",
										"statements": [
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "276:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1323,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "288:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "292:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "288:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "276:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1325,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "311:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1326,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1311,
																"src": "316:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "311:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "319:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "303:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "303:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "303:46:5"
											},
											{
												"expression": {
													"id": 1331,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1319,
													"src": "367:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1317,
												"id": 1332,
												"nodeType": "Return",
												"src": "360:8:5"
											}
										]
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "212:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "223:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "211:22:5"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "257:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:9:5"
									},
									"scope": 1647,
									"src": "199:176:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "448:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1344,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "469:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1345,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "472:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "475:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1343,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1377
														],
														"referencedDeclaration": 1377,
														"src": "465:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "465:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1342,
												"id": 1348,
												"nodeType": "Return",
												"src": "458:50:5"
											}
										]
									},
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "394:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "405:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:22:5"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "439:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:9:5"
									},
									"scope": 1647,
									"src": "381:134:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "616:92:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1362,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "634:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1363,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "639:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "634:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1365,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "642:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "626:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "626:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "626:29:5"
											},
											{
												"assignments": [
													1369
												],
												"declarations": [
													{
														"constant": false,
														"id": 1369,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "665:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1368,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "665:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1373,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1370,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "677:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1371,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "677:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "665:17:5"
											},
											{
												"expression": {
													"id": 1374,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1369,
													"src": "700:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1375,
												"nodeType": "Return",
												"src": "693:8:5"
											}
										]
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "534:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "545:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "556:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:50:5"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "607:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:9:5"
									},
									"scope": 1647,
									"src": "521:187:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "781:174:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1386,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "795:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "800:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "795:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1392,
												"nodeType": "IfStatement",
												"src": "791:45:5",
												"trueBody": {
													"id": 1391,
													"nodeType": "Block",
													"src": "803:33:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "824:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1385,
															"id": 1390,
															"nodeType": "Return",
															"src": "817:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1410,
														"src": "846:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "846:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1398,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1395,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "858:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1396,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "862:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "858:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "846:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1400,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "881:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1401,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "885:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "881:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1403,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "890:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "881:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "893:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "873:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "873:56:5"
											},
											{
												"expression": {
													"id": 1408,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1394,
													"src": "947:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1385,
												"id": 1409,
												"nodeType": "Return",
												"src": "940:8:5"
											}
										]
									},
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "727:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "738:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "726:22:5"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "772:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:9:5"
									},
									"scope": 1647,
									"src": "714:241:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "1028:63:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "1049:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1422,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "1052:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1055:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1420,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1427,
															1466
														],
														"referencedDeclaration": 1466,
														"src": "1045:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1425,
												"nodeType": "Return",
												"src": "1038:46:5"
											}
										]
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "974:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "985:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:22:5"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "1019:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:5"
									},
									"scope": 1647,
									"src": "961:130:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "1192:174:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1439,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "1210:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1210:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1442,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "1217:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1202:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "1202:28:5"
											},
											{
												"assignments": [
													1446
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "1240:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1240:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1450,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1447,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "1252:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1448,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "1256:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1252:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1240:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1452,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "1274:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1453,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "1279:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1454,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1446,
																		"src": "1283:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1279:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1456,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1429,
																		"src": "1287:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1457,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "1291:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1287:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1279:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1274:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1451,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1267:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1267:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "1267:26:5"
											},
											{
												"expression": {
													"id": 1463,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1446,
													"src": "1358:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1437,
												"id": 1464,
												"nodeType": "Return",
												"src": "1351:8:5"
											}
										]
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1110:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1121:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1132:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1432,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1132:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:50:5"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1183:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:9:5"
									},
									"scope": 1647,
									"src": "1097:269:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "1476:265:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1473,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "1490:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1494:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1490:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1513,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "1697:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1697:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1521,
													"nodeType": "IfStatement",
													"src": "1693:42:5",
													"trueBody": {
														"id": 1520,
														"nodeType": "Block",
														"src": "1705:30:5",
														"statements": [
															{
																"expression": {
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1516,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "1719:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1719:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1519,
																"nodeType": "ExpressionStatement",
																"src": "1719:5:5"
															}
														]
													}
												},
												"id": 1522,
												"nodeType": "IfStatement",
												"src": "1486:249:5",
												"trueBody": {
													"id": 1512,
													"nodeType": "Block",
													"src": "1497:190:5",
													"statements": [
														{
															"expression": {
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1476,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "1511:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1477,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "1515:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1511:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1479,
															"nodeType": "ExpressionStatement",
															"src": "1511:5:5"
														},
														{
															"assignments": [
																1481
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1481,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 1512,
																	"src": "1530:6:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1480,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1530:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1489,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1484,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1468,
																				"src": "1549:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 1485,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1552:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 1483,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1427,
																				1466
																			],
																			"referencedDeclaration": 1427,
																			"src": "1544:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1544:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1556:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 1482,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "1539:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1539:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1530:29:5"
														},
														{
															"body": {
																"id": 1510,
																"nodeType": "Block",
																"src": "1587:90:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1493,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1471,
																				"src": "1605:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1494,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1481,
																				"src": "1609:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1605:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1496,
																		"nodeType": "ExpressionStatement",
																		"src": "1605:5:5"
																	},
																	{
																		"expression": {
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1497,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1481,
																				"src": "1628:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1501,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1468,
																										"src": "1647:1:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 1502,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1481,
																										"src": "1650:1:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 1500,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										1427,
																										1466
																									],
																									"referencedDeclaration": 1427,
																									"src": "1642:3:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1503,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1642:11:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1504,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1481,
																								"src": "1655:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1499,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1334,
																							"src": "1637:3:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1505,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1637:20:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 1506,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1659:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 1498,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						1427,
																						1466
																					],
																					"referencedDeclaration": 1427,
																					"src": "1632:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1632:30:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1628:34:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1509,
																		"nodeType": "ExpressionStatement",
																		"src": "1628:34:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1490,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "1580:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1491,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "1584:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1580:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1511,
															"nodeType": "WhileStatement",
															"src": "1573:104:5"
														}
													]
												}
											}
										]
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1434:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:11:5"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1468:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:8:5"
									},
									"scope": 1647,
									"src": "1419:322:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "1862:63:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1535,
																	"name": "total_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "1889:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1536,
																	"name": "percentage_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "1897:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 1534,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "1884:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1884:26:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31303030",
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1912:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"id": 1533,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1427,
															1466
														],
														"referencedDeclaration": 1427,
														"src": "1879:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1879:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1532,
												"id": 1540,
												"nodeType": "Return",
												"src": "1872:46:5"
											}
										]
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentageAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1777:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "percentage_",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1793:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1527,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1775:37:5"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "percentAmount_",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1837:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:26:5"
									},
									"scope": 1647,
									"src": "1750:175:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "2105:83:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1552,
															"name": "total_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "2127:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1555,
																			"name": "total_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "2145:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1556,
																			"name": "percentageToSub_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1546,
																			"src": "2153:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1554,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "2140:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2140:31:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"id": 1553,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1427,
																	1466
																],
																"referencedDeclaration": 1427,
																"src": "2135:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2135:44:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1551,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1377
														],
														"referencedDeclaration": 1350,
														"src": "2122:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1550,
												"id": 1561,
												"nodeType": "Return",
												"src": "2115:66:5"
											}
										]
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "substractPercentage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2022:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "percentageToSub_",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2038:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1545,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2038:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:42:5"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "result_",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2087:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2087:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:19:5"
									},
									"scope": 1647,
									"src": "1992:196:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "2297:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1574,
																	"name": "part_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1565,
																	"src": "2323:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2330:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"id": 1573,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "2319:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2319:15:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1577,
															"name": "total_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "2337:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1572,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1427,
															1466
														],
														"referencedDeclaration": 1427,
														"src": "2314:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1571,
												"id": 1579,
												"nodeType": "Return",
												"src": "2307:38:5"
											}
										]
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentageOfTotal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "part_",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2222:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2237:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:33:5"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "percent_",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2278:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2276:20:5"
									},
									"scope": 1647,
									"src": "2194:158:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "2620:119:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1591,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1584,
																		"src": "2692:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2696:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2692:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1594,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2691:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1595,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "2702:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2706:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2702:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1598,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2701:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2691:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1600,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1584,
																					"src": "2713:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 1601,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2717:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2713:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1603,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1586,
																					"src": "2721:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 1604,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2725:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2721:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2713:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1607,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2712:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2730:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2712:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1610,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2711:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2691:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1590,
												"id": 1612,
												"nodeType": "Return",
												"src": "2684:48:5"
											}
										]
									},
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "2358:186:5",
										"text": " Taken from Hypersonic https://github.com/M2629/HyperSonic/blob/main/Math.sol\n @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "2566:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "2577:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2565:22:5"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "2611:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:9:5"
									},
									"scope": 1647,
									"src": "2549:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "2844:61:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1625,
																	"name": "multiplier_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "2873:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1626,
																	"name": "payment_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "2886:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1624,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "2868:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2868:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1623,
														"name": "sqrrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "2861:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2861:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1622,
												"id": 1629,
												"nodeType": "Return",
												"src": "2854:44:5"
											}
										]
									},
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quadraticPricing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "payment_",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "2772:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "multiplier_",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "2790:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:41:5"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "2835:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:9:5"
									},
									"scope": 1647,
									"src": "2745:160:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "3003:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1641,
															"name": "multiplier_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1635,
															"src": "3023:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1642,
															"name": "supply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "3036:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1640,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "3018:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3018:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1639,
												"id": 1644,
												"nodeType": "Return",
												"src": "3011:34:5"
											}
										]
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bondingCurve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "supply_",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "2932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "multiplier_",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "2949:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:40:5"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "2994:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:9:5"
									},
									"scope": 1647,
									"src": "2909:141:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1648,
							"src": "175:2877:5"
						}
					],
					"src": "79:2975:5"
				},
				"id": 5
			},
			"contracts/types/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/types/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							2142
						],
						"IERC20": [
							747
						],
						"SafeMath": [
							1647
						]
					},
					"id": 2143,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1649,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "72:23:6"
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 1650,
							"nodeType": "ImportDirective",
							"scope": 2143,
							"sourceUnit": 748,
							"src": "96:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "../libraries/SafeMath.sol",
							"id": 1651,
							"nodeType": "ImportDirective",
							"scope": 2143,
							"sourceUnit": 1648,
							"src": "131:35:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1652,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 747,
										"src": "197:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$747",
											"typeString": "contract IERC20"
										}
									},
									"id": 1653,
									"nodeType": "InheritanceSpecifier",
									"src": "197:6:6"
								}
							],
							"contractDependencies": [
								747
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2142,
							"linearizedBaseContracts": [
								2142,
								747
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1656,
									"libraryName": {
										"id": 1654,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1647,
										"src": "215:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1647",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "209:27:6",
									"typeName": {
										"id": 1655,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "228:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1661,
									"mutability": "constant",
									"name": "ERC20TOKEN_ERC1820_INTERFACE_ID",
									"nodeType": "VariableDeclaration",
									"scope": 2142,
									"src": "277:84:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1657,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "277:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4552433230546f6b656e",
												"id": 1659,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "347:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												},
												"value": "ERC20Token"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												}
											],
											"id": 1658,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "336:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1660,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "336:25:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1665,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 2142,
									"src": "393:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1664,
										"keyType": {
											"id": 1662,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "402:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "393:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1663,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "413:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1671,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 2142,
									"src": "468:70:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1670,
										"keyType": {
											"id": 1666,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "477:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "468:49:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1669,
											"keyType": {
												"id": 1667,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "497:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "488:28:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1668,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "508:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1673,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 2142,
									"src": "566:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1672,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "566:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1675,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 2142,
									"src": "623:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1674,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "623:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1677,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 2142,
									"src": "676:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1676,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "676:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1679,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 2142,
									"src": "731:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1678,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "731:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1701,
										"nodeType": "Block",
										"src": "1132:74:6",
										"statements": [
											{
												"expression": {
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1689,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "1138:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1690,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "1146:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1138:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1692,
												"nodeType": "ExpressionStatement",
												"src": "1138:13:6"
											},
											{
												"expression": {
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1693,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "1157:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1694,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "1167:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1157:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "1157:17:6"
											},
											{
												"expression": {
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1697,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "1180:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1698,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "1192:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1180:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "1180:21:6"
											}
										]
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "760:295:6",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1702,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "1071:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1681,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1071:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "1092:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1683,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1092:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "1115:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1685,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1115:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:61:6"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1132:0:6"
									},
									"scope": 2142,
									"src": "1058:148:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "1338:23:6",
										"statements": [
											{
												"expression": {
													"id": 1708,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1675,
													"src": "1351:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1707,
												"id": 1709,
												"nodeType": "Return",
												"src": "1344:12:6"
											}
										]
									},
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "1210:50:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1299:2:6"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "1323:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1705,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1323:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:6"
									},
									"scope": 2142,
									"src": "1286:75:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "1541:25:6",
										"statements": [
											{
												"expression": {
													"id": 1717,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1677,
													"src": "1554:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1716,
												"id": 1718,
												"nodeType": "Return",
												"src": "1547:14:6"
											}
										]
									},
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "1365:96:6",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1502:2:6"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1526:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1714,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1526:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1525:15:6"
									},
									"scope": 2142,
									"src": "1487:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "2232:27:6",
										"statements": [
											{
												"expression": {
													"id": 1726,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1679,
													"src": "2245:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1725,
												"id": 1727,
												"nodeType": "Return",
												"src": "2238:16:6"
											}
										]
									},
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "1570:588:6",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:6"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "2225:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1723,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2225:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:7:6"
									},
									"scope": 2142,
									"src": "2184:75:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "2396:30:6",
										"statements": [
											{
												"expression": {
													"id": 1736,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1673,
													"src": "2409:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1735,
												"id": 1737,
												"nodeType": "Return",
												"src": "2402:19:6"
											}
										]
									},
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "2263:45:6",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1732,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2369:8:6"
									},
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:6"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "2387:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2386:9:6"
									},
									"scope": 2142,
									"src": "2334:92:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 1752,
										"nodeType": "Block",
										"src": "2582:36:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1748,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "2595:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1750,
													"indexExpression": {
														"id": 1749,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "2605:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2595:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1747,
												"id": 1751,
												"nodeType": "Return",
												"src": "2588:25:6"
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "2430:43:6",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1744,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2555:8:6"
									},
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "2518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2517:17:6"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "2573:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:9:6"
									},
									"scope": 2142,
									"src": "2499:119:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "2962:68:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1765,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2978:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2978:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1767,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "2990:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1768,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "3001:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1764,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1974,
														"src": "2968:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2968:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "2968:40:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3021:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1763,
												"id": 1772,
												"nodeType": "Return",
												"src": "3014:11:6"
											}
										]
									},
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "2622:178:6",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1760,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2938:8:6"
									},
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "2888:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "2907:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2907:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:35:6"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "2956:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2956:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2955:6:6"
									},
									"scope": 2142,
									"src": "2870:160:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "3211:51:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1785,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "3228:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1787,
														"indexExpression": {
															"id": 1786,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "3240:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3228:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1789,
													"indexExpression": {
														"id": 1788,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "3247:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3228:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1784,
												"id": 1790,
												"nodeType": "Return",
												"src": "3221:34:6"
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "3036:47:6",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1781,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3184:8:6"
									},
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3132:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3147:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3147:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:32:6"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3202:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:9:6"
									},
									"scope": 2142,
									"src": "3113:149:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "3514:75:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1804,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3533:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3533:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1806,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "3545:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "3554:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1803,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "3524:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3524:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "3524:37:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3578:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1802,
												"id": 1811,
												"nodeType": "Return",
												"src": "3571:11:6"
											}
										]
									},
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "3268:127:6",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1799,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3490:8:6"
									},
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "3442:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "3459:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3459:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3441:33:6"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "3508:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3508:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3507:6:6"
									},
									"scope": 2142,
									"src": "3425:164:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 1850,
										"nodeType": "Block",
										"src": "4193:201:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1827,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "4213:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1828,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "4221:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1829,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "4232:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1826,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1974,
														"src": "4203:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4203:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "4203:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1833,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "4258:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1834,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4266:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4266:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1843,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1820,
																	"src": "4314:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4322:42:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1836,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "4278:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1838,
																		"indexExpression": {
																			"id": 1837,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1816,
																			"src": "4290:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4278:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1841,
																	"indexExpression": {
																		"expression": {
																			"id": 1839,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "4298:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4298:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4278:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1377,
																"src": "4278:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4278:87:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1832,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "4249:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:117:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1847,
												"nodeType": "ExpressionStatement",
												"src": "4249:117:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4383:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1825,
												"id": 1849,
												"nodeType": "Return",
												"src": "4376:11:6"
											}
										]
									},
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "3595:456:6",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1822,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4169:8:6"
									},
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "4103:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "4119:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4119:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "4138:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4138:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:51:6"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "4187:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4187:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:6:6"
									},
									"scope": 2142,
									"src": "4081:313:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "4883:117:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1862,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4902:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4902:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1864,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "4914:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1872,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1856,
																	"src": "4960:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1865,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "4923:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1868,
																		"indexExpression": {
																			"expression": {
																				"id": 1866,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "4935:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4935:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4923:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1870,
																	"indexExpression": {
																		"id": 1869,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1854,
																		"src": "4947:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4923:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1334,
																"src": "4923:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4923:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1861,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "4893:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4893:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "4893:79:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4989:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1860,
												"id": 1877,
												"nodeType": "Return",
												"src": "4982:11:6"
											}
										]
									},
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "4400:384:6",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "4816:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "4833:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4815:37:6"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "4877:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4877:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4876:6:6"
									},
									"scope": 2142,
									"src": "4789:211:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1907,
										"nodeType": "Block",
										"src": "5586:163:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1890,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5605:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5605:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1892,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "5617:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1900,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1884,
																	"src": "5663:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5680:39:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1893,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "5626:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1896,
																		"indexExpression": {
																			"expression": {
																				"id": 1894,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "5638:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5638:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5626:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1898,
																	"indexExpression": {
																		"id": 1897,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1882,
																		"src": "5650:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5626:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1377,
																"src": "5626:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5626:94:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1889,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "5596:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5596:125:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "5596:125:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5738:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1888,
												"id": 1906,
												"nodeType": "Return",
												"src": "5731:11:6"
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "5006:476:6",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "5514:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5514:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "5531:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5531:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5513:42:6"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "5580:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5580:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5579:6:6"
									},
									"scope": 2142,
									"src": "5487:262:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1973,
										"nodeType": "Block",
										"src": "6280:417:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1919,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "6294:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6312:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6304:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1920,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6304:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6304:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6294:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6316:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6286:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "6286:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1929,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1913,
																"src": "6370:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6391:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6383:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1930,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6383:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6383:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6370:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6395:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6362:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6362:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1937,
												"nodeType": "ExpressionStatement",
												"src": "6362:71:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1939,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "6461:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1940,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "6469:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1941,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "6480:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1938,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2141,
														"src": "6440:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6440:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1943,
												"nodeType": "ExpressionStatement",
												"src": "6440:47:6"
											},
											{
												"expression": {
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1944,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "6494:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1946,
														"indexExpression": {
															"id": 1945,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "6504:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6494:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1951,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "6536:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6544:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1947,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "6514:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1949,
																"indexExpression": {
																	"id": 1948,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "6524:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6514:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1377,
															"src": "6514:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6514:71:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6494:91:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1955,
												"nodeType": "ExpressionStatement",
												"src": "6494:91:6"
											},
											{
												"expression": {
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1956,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "6591:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1958,
														"indexExpression": {
															"id": 1957,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "6601:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6591:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1963,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "6639:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1959,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "6614:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1961,
																"indexExpression": {
																	"id": 1960,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "6624:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6614:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1334,
															"src": "6614:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6614:32:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6591:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "6591:55:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1968,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "6666:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1969,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "6674:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1970,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "6685:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1967,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "6657:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6657:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1972,
												"nodeType": "EmitStatement",
												"src": "6652:40:6"
											}
										]
									},
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "5753:437:6",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 1974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "6212:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6212:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "6228:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6228:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "6247:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6247:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6211:51:6"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6280:0:6"
									},
									"scope": 2142,
									"src": "6193:504:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2028,
										"nodeType": "Block",
										"src": "7061:326:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1983,
																"name": "account_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1977,
																"src": "7079:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7099:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7091:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1984,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7091:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7091:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7079:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7103:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7071:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7071:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1991,
												"nodeType": "ExpressionStatement",
												"src": "7071:66:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1995,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7177:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$2142",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$2142",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7168:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1993,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7168:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7168:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1997,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "7185:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1998,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "7195:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1992,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2141,
														"src": "7147:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7147:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "7147:57:6"
											},
											{
												"expression": {
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2001,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1673,
														"src": "7214:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2004,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "7246:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2002,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "7229:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1334,
															"src": "7229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7229:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7214:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "7214:41:6"
											},
											{
												"expression": {
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2008,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "7265:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2010,
														"indexExpression": {
															"id": 2009,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "7275:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7265:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2015,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "7311:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2011,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "7287:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2013,
																"indexExpression": {
																	"id": 2012,
																	"name": "account_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1977,
																	"src": "7297:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7287:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1334,
															"src": "7287:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7287:33:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7265:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2018,
												"nodeType": "ExpressionStatement",
												"src": "7265:55:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2022,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7353:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$2142",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$2142",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7344:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2020,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7344:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7344:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2024,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "7361:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2025,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "7371:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2019,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "7335:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7335:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2027,
												"nodeType": "EmitStatement",
												"src": "7330:50:6"
											}
										]
									},
									"documentation": {
										"id": 1975,
										"nodeType": "StructuredDocumentation",
										"src": "6703:260:6",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 2029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "7008:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "ammount_",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "7026:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7007:36:6"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7061:0:6"
									},
									"scope": 2142,
									"src": "6993:394:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "7797:345:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2038,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2032,
																"src": "7815:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7834:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7826:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2039,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7826:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7826:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7815:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7838:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 2037,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7807:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7807:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2046,
												"nodeType": "ExpressionStatement",
												"src": "7807:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2048,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "7906:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7923:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7915:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2049,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7915:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7915:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2053,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "7927:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2047,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2141,
														"src": "7885:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7885:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2055,
												"nodeType": "ExpressionStatement",
												"src": "7885:49:6"
											},
											{
												"expression": {
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2056,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "7945:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2058,
														"indexExpression": {
															"id": 2057,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "7955:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7945:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2063,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2034,
																"src": "7989:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7997:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2059,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "7966:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2061,
																"indexExpression": {
																	"id": 2060,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2032,
																	"src": "7976:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7966:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1377,
															"src": "7966:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7966:68:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7945:89:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2067,
												"nodeType": "ExpressionStatement",
												"src": "7945:89:6"
											},
											{
												"expression": {
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2068,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1673,
														"src": "8044:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2071,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2034,
																"src": "8076:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2069,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "8059:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1350,
															"src": "8059:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8059:24:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8044:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2074,
												"nodeType": "ExpressionStatement",
												"src": "8044:39:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2076,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "8107:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8124:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8116:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2077,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8116:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8116:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2081,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "8128:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2075,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "8098:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8098:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2083,
												"nodeType": "EmitStatement",
												"src": "8093:42:6"
											}
										]
									},
									"documentation": {
										"id": 2030,
										"nodeType": "StructuredDocumentation",
										"src": "7393:309:6",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "7747:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7747:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "7764:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7764:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7746:33:6"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7797:0:6"
									},
									"scope": 2142,
									"src": "7732:410:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "8673:257:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2096,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2088,
																"src": "8691:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8708:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8700:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2097,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8700:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8700:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8691:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8712:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 2095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8683:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8683:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "8683:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2106,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2090,
																"src": "8769:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8788:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8780:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2107,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8780:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8780:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8769:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8792:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 2105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8761:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8761:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2114,
												"nodeType": "ExpressionStatement",
												"src": "8761:68:6"
											},
											{
												"expression": {
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2115,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "8840:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2118,
															"indexExpression": {
																"id": 2116,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2088,
																"src": "8852:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8840:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2119,
														"indexExpression": {
															"id": 2117,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2090,
															"src": "8859:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8840:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2120,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2092,
														"src": "8870:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8840:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2122,
												"nodeType": "ExpressionStatement",
												"src": "8840:36:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2124,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "8900:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2125,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2090,
															"src": "8907:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2126,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "8916:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2123,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "8891:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8891:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2128,
												"nodeType": "EmitStatement",
												"src": "8886:37:6"
											}
										]
									},
									"documentation": {
										"id": 2086,
										"nodeType": "StructuredDocumentation",
										"src": "8148:412:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "8608:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8608:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "8623:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8623:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "8640:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8640:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8607:48:6"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8673:0:6"
									},
									"scope": 2142,
									"src": "8590:340:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "10149:3:6",
										"statements": []
									},
									"documentation": {
										"id": 2131,
										"nodeType": "StructuredDocumentation",
										"src": "9479:550:6",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "from_",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "10086:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10086:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "to_",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "10101:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10101:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "10114:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10114:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10084:47:6"
									},
									"returnParameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10149:0:6"
									},
									"scope": 2142,
									"src": "10055:97:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2143,
							"src": "170:9984:6"
						}
					],
					"src": "72:10082:6"
				},
				"id": 6
			}
		}
	}
}